<TEI xmlns="http://www.tei-c.org/ns/1.0"><teiHeader><fileDesc><titleStmt><title>Requirements Interchange Format, v1.2</title><author>OMG</author></titleStmt><editionStmt><edition><date>2023-08-14</date></edition></editionStmt><publicationStmt><p>unknown</p></publicationStmt><sourceDesc><p>Converted from a Word document</p></sourceDesc></fileDesc><encodingDesc><appInfo><application xml:id="docxtotei" ident="TEI_fromDOCX" version="2.15.0"><label>DOCX to TEI</label></application></appInfo></encodingDesc><revisionDesc><listChange><change><date>2023-08-14T17:55:04Z</date><name>OMG</name></change></listChange></revisionDesc></teiHeader><text><body><div><p style="text-align: right;"><hi rend="bold">Date</hi>: July 2016</p><figure><graphic n="1001" width="8.1026cm" height="3.2258cm" url="media/image1.png" rend="inline"/></figure><p><hi style="font-size:24pt">Requirements Interchange Format (ReqIF)</hi></p><p><hi rend="italic" style="font-size:14pt" xml:space="preserve">Version 1.2 </hi></p><p><hi style="color:red; font-size: 14pt; font-weight:bold;" rend="ERROR">�</hi><note place="margin" type="conversion" resp="#teitodocx"><hi rend="docxError">unable to handle picture here, no embed or link</hi></note></p><p><hi style="font-size:12pt">OMG Document Number:	formal/2016-07-01</hi></p><p><hi style="font-size:12pt">Standard document URL:	http://www.omg.org/spec/ReqIF/1.2 Machine Consumable Files:</hi></p><p> Normative:	http://www.omg.org/spec/ReqIF/20101201/reqif.cmof   	http://www.omg.org/spec/ReqIF/20110401/reqif.xsd   	http://www.omg.org/spec/ReqIF/20110402/driver.xsd</p><p><hi style="color:red; font-size: 14pt; font-weight:bold;" rend="ERROR">�</hi><note place="margin" type="conversion" resp="#teitodocx"><hi rend="docxError">unable to handle picture here, no embed or link</hi></note></p><p>Copyright © 2010, 88solutions Corporation </p><p>Copyright © 2010, Atego Systems GmbH Copyright © 2010, Audi AG  </p><p>Copyright © 2010, BMW AG </p><p>Copyright © 2010, Continental AG </p><p>Copyright © 2010, Daimler AG </p><p>Copyright © 2010, HOOD GmbH </p><p>Copyright © 2010, International Business Machines </p><p>Copyright © 2010, MKS GmbH </p><p>Copyright © 2010, ModelAlchemy Consulting </p><p>Copyright © 2016, Object Management Group, Inc. </p><p>Copyright © 2010, PROSTEP AG </p><p>Copyright © 2010, ProSTEP iViP Association </p><p>Copyright © 2010, Robert Bosch GmbH </p><p>Copyright © 2010, Volkswagen AG</p><p style="text-align: center;">USE OF SPECIFICATION - TERMS, CONDITIONS &amp; NOTICES</p><p style="text-align: justify;">The material in this document details an Object Management Group specification in accordance with the terms, conditions and notices set forth below. This document does not represent a commitment to implement any portion of this specification in any company's products. The information contained in this document is subject to change without notice.</p><p style="text-align: center;">LICENSES</p><p style="text-align: justify;">The companies listed above have granted to the Object Management Group, Inc. (OMG) a nonexclusive, royalty-free, paid up, worldwide license to copy and distribute this document and to modify this document and distribute copies of the modified version. Each of the copyright holders listed above has agreed that no person shall be deemed to have infringed the copyright in the included material of any such copyright holder by reason of having used the specification set forth herein or having conformed any computer software to the specification.</p><p>Subject to all of the terms and conditions below, the owners of the copyright in this specification hereby grant you a fully-paid up, non-exclusive, nontransferable, perpetual, worldwide license (without the right to sublicense), to use this specification to create and distribute software and special purpose specifications that are based upon this specification, and to use, copy, and distribute this specification as provided under the Copyright Act; provided that: (1) both the copyright notice identified above and this permission notice appear on any copies of this specification; (2) the use of the specifications is for informational purposes and will not be copied or posted on any network computer or broadcast in any media and will not be otherwise resold or transferred for commercial purposes; and (3) no modifications are made to this specification. This limited permission automatically terminates without notice if you breach any of these terms or conditions. Upon termination, you will destroy immediately any copies of the specifications in your possession or control. </p><p style="text-align: center;">PATENTS</p><p style="text-align: justify;">The attention of adopters is directed to the possibility that compliance with or adoption of OMG specifications may require use of an invention covered by patent rights. OMG shall not be responsible for identifying patents for which a license may be required by any OMG specification, or for conducting legal inquiries into the legal validity or scope of those patents that are brought to its attention. OMG specifications are prospective and advisory only. Prospective users are responsible for protecting themselves against liability for infringement of patents.</p><p style="text-align: center;">GENERAL USE RESTRICTIONS</p><p>Any unauthorized use of this specification may violate copyright laws, trademark laws, and communications regulations and statutes. This document contains information which is protected by copyright. All Rights Reserved. No part of this work covered by copyright herein may be reproduced or used in any form or by any means--graphic, electronic, or mechanical, including photocopying, recording, taping, or information storage and retrieval systems--without permission of the copyright owner.</p><p style="text-align: center;">DISCLAIMER OF WARRANTY</p><p>WHILE THIS PUBLICATION IS BELIEVED TO BE ACCURATE, IT IS PROVIDED "AS IS" AND MAY CONTAIN </p><p>ERRORS OR MISPRINTS. THE OBJECT MANAGEMENT GROUP AND THE COMPANIES LISTED ABOVE MAKE </p><p>NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH REGARD TO THIS PUBLICATION, INCLUDING BUT NOT LIMITED TO ANY WARRANTY OF TITLE OR OWNERSHIP, IMPLIED WARRANTY OF MERCHANTABILITY OR WARRANTY OF FITNESS FOR A PARTICULAR PURPOSE OR USE. </p><p>IN NO EVENT SHALL THE OBJECT MANAGEMENT GROUP OR ANY OF THE COMPANIES LISTED ABOVE BE </p><p>LIABLE FOR ERRORS CONTAINED HEREIN OR FOR DIRECT, INDIRECT, INCIDENTAL, SPECIAL, </p><p>CONSEQUENTIAL, RELIANCE OR COVER DAMAGES, INCLUDING LOSS OF PROFITS, REVENUE, DATA OR </p><p>USE, INCURRED BY ANY USER OR ANY THIRD PARTY IN CONNECTION WITH THE FURNISHING, </p><p>PERFORMANCE, OR USE OF THIS MATERIAL, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. </p><p>The entire risk as to the quality and performance of software developed using this specification is borne by you. This disclaimer of warranty constitutes an essential part of the license granted to you to use this specification.</p><p style="text-align: center;">RESTRICTED RIGHTS LEGEND</p><p>Use, duplication or disclosure by the U.S. Government  is subject to the restrictions set forth in subparagraph (c) (1) (ii) of The Rights in Technical Data and Computer Software Clause at DFARS 252.227-7013 or in subparagraph (c)(1) and (2) of the Commercial Computer Software - Restricted Rights clauses at 48 C.F.R. 52.227-19 or as specified in 48 C.F.R. 227-7202-2 of the DoD F.A.R. Supplement and its successors, or as specified in 48 C.F.R. 12.212 of the Federal Acquisition Regulations and its successors, as applicable. The specification copyright owners are as indicated above and may be contacted through the Object Management Group, 109 Highland Avenue, Needham, MA 02494, U.S.A.</p><p style="text-align: center;">TRADEMARKS</p><p>CORBA<hi rend="superscript" style="font-size:12.5pt">®</hi>, CORBA logos<hi rend="superscript" style="font-size:12.5pt">®</hi>, FIBO<hi rend="superscript" style="font-size:12.5pt">®</hi>, Financial Industry Business Ontology<hi rend="superscript" style="font-size:12.5pt">®</hi>, FINANCIAL INSTRUMENT GLOBAL IDEN-</p><p>TIFIER<hi rend="superscript" style="font-size:12.5pt">®</hi>, IIOP<hi rend="superscript" style="font-size:12.5pt">®</hi>, IMM<hi rend="superscript" style="font-size:12.5pt">®</hi>, Model Driven Architecture<hi rend="superscript" style="font-size:12.5pt">®</hi>, MDA<hi rend="superscript" style="font-size:12.5pt">®</hi>, Object Management Group<hi rend="superscript" style="font-size:12.5pt">®</hi>, OMG<hi rend="superscript" style="font-size:12.5pt">®</hi>, OMG Logo<hi rend="superscript" style="font-size:12.5pt">®</hi>, </p><p>SoaML<hi rend="superscript" style="font-size:12.5pt">®</hi>, SOAML<hi rend="superscript" style="font-size:12.5pt">®</hi>, SysML<hi rend="superscript" style="font-size:12.5pt">®</hi>, UAF<hi rend="superscript" style="font-size:12.5pt">®</hi>, Unified Modeling Language<hi rend="superscript" style="font-size:12.5pt">®</hi>, UML<hi rend="superscript" style="font-size:12.5pt">®</hi>, UML Cube Logo<hi rend="superscript" style="font-size:12.5pt">®</hi>, VSIPL<hi rend="superscript" style="font-size:12.5pt">®</hi>, and XMI<hi rend="superscript" style="font-size:12.5pt">®</hi> are registered trademarks of the Object Management Group, Inc. </p><p>For a complete list of trademarks, see: http://www.omg.org/legal/tm_list.htm. All other products or company names mentioned are used for identification purposes only, and may be trademarks of their respective owners.</p><p style="text-align: center;">COMPLIANCE</p><p>The copyright holders listed above acknowledge that the Object Management Group (acting itself or through its designees) is and shall at all times be the sole entity that may authorize developers, suppliers and sellers of computer software to use certification marks, trademarks or other special designations to indicate compliance with these materials. Software developed under the terms of this license may claim compliance or conformance with this specification if and only if the software compliance is of a nature fully matching the applicable compliance points as stated in the specification. Software developed only partially matching the applicable compliance points may claim only that the software was based on this specification, but may not claim compliance or conformance with this specification. In the event that testing suites are implemented or approved by Object Management Group, Inc., software developed using this specification may claim compliance or conformance with the specification only if the software satisfactorily completes the testing suites.</p><p style="text-align: center;"><hi style="font-size:11pt">OMG'S ISSUE REPORTING</hi></p><p>All OMG specifications are subject to continuous review and improvement. As part of this process we encourage readers to report any ambiguities, inconsistencies, or inaccuracies they may find by completing the Issue Reporting Form listed on the main web page http://www.omg.org, under Documents, Report a Bug/Issue (http://issues.omg.org/issues/create-new-issue).<pb/></p><p><hi style="font-size:18pt">Table of Contents</hi></p><p rend="toc 1"><ref target="#Toc103987"><hi style="font-size:14pt">Preface</hi>	<hi style="font-size:14pt">v</hi></ref></p><p rend="toc 1"><ref target="#Toc103988">1 Scope	1</ref></p><p rend="toc 2"><ref target="#Toc103989">1.1 Who should read this document?	1</ref></p><p rend="toc 2"><ref target="#Toc103990">1.2 Objectives of the Requirements Interchange Format	1</ref></p><p rend="toc 1"><ref target="#Toc103991">2 Conformance	3</ref></p><p rend="toc 1"><ref target="#Toc103992">3 Normative References	3</ref></p><p rend="toc 2"><ref target="#Toc103993">3.1 Normative References	3</ref></p><p rend="toc 2"><ref target="#Toc103994">3.2 Non-normative references	4</ref></p><p rend="toc 1"><ref target="#Toc103995">4 Terms and Definitions	4</ref></p><p rend="toc 1"><ref target="#Toc103996">5 Symbols	5</ref></p><p rend="toc 1"><ref target="#Toc103997">6 Additional Information	6</ref></p><p rend="toc 2"><ref target="#Toc103998">6.1 How to read this specification	6</ref></p><p rend="toc 2"><ref target="#Toc103999">6.2 Acknowledgements	6</ref></p><p rend="toc 3"><ref target="#Toc104000">6.2.1 Submitting Organizations	6</ref></p><p rend="toc 3"><ref target="#Toc104001">6.2.2 Supporting Organizations	7</ref></p><p rend="toc 1"><ref target="#Toc104002">7 Concept Overview and Use Cases	9</ref></p><p rend="toc 2"><ref target="#Toc104003">7.1 Preface: How requirements authoring tools handle information	9</ref></p><p rend="toc 2"><ref target="#Toc104004">7.2  How the Requirements Interchange Format handles information from         requirement authoring tools	11</ref></p><p rend="toc 2"><ref target="#Toc104005">7.3  How the Requirements Interchange Format copes with different tool         capabilities	12</ref></p><p rend="toc 2"><ref target="#Toc104006">7.4 Exchange Scenarios	13</ref></p><p rend="toc 3"><ref target="#Toc104007">7.4.1 Role descriptions	14</ref></p><p rend="toc 3"><ref target="#Toc104008">7.4.2 First exchange scenario (“One-Way”)	14</ref></p><p rend="toc 3"><ref target="#Toc104009">7.4.3 Second exchange scenario (“Roundtrip”)	15</ref></p><p rend="toc 2"><ref target="#Toc104010">7.5 Detailed Use Cases	17</ref></p><p rend="toc 3"><ref target="#Toc104011">7.5.1 Use Case Overview	17</ref></p><p rend="toc 3"><ref target="#Toc104012">7.5.2 Use Case Specifications	17</ref></p><p>	<hi style="font-size:9pt">Requirements Interchange Format (ReqIF), v1.2</hi>	<hi rend="bold">i</hi> </p><p style="text-align: justify;"><hi style="font-size:15pt">8  Abstract Architecture ......................................................................... 21 9  Exchange Document Structure ......................................................... 25</hi></p><p><hi style="font-size:13pt">9.1 General ...................................................................................................25</hi></p><p><hi style="font-size:13pt">9.2 Class Descriptions ..................................................................................25</hi></p><p style="text-align: justify;"><hi style="font-size:11pt">9.2.1  ReqIF ................................................................................................................... 25 9.2.2  ReqIFContent ....................................................................................................... 26 9.2.3 ReqIFHeader ........................................................................................................ 26 9.2.4 ReqIFToolExtension ............................................................................................. 28</hi></p><list rend="numbered"><item><hi style="font-size:15pt">Exchange Document Content ......................................................... 29</hi><list rend="numbered"><item><hi style="font-size:13pt">Overview ...............................................................................................29</hi></item><item><hi style="font-size:13pt">Identification of Elements .....................................................................29</hi></item><item><hi style="font-size:13pt">Specifications, Requirements, and Attributes .......................................30</hi></item><item><hi style="font-size:13pt" xml:space="preserve">Hierarchical Structuring of Requirements in a Specification and </hi> </item></list></item></list><p><seg xml:space="preserve">         </seg><hi style="font-size:13pt">Requirement Relations .........................................................................32</hi></p><list rend="numbered"><item><hi style="font-size:13pt">Representing Attribute Data Types ......................................................33</hi></item></list><p style="text-align: justify;"><hi style="font-size:11pt" xml:space="preserve">10.5.1  Representing Data Types .................................................................................. 33 10.5.2  Relating Attributes to Data Types ...................................................................... 34 </hi><hi style="font-size:13pt" xml:space="preserve">10.6  Concrete Data Types ............................................................................35 </hi><hi style="font-size:11pt">10.6.1 Simple Data Types ............................................................................................. 35 10.6.2 Enumeration Data Type ..................................................................................... 35 10.6.3 Data Type for XHTML Content ........................................................................... 36</hi></p><list rend="numbered"><item><hi style="font-size:13pt">Access Restrictions ..............................................................................36</hi></item><item><hi style="font-size:13pt">Class Descriptions ................................................................................37</hi></item></list><p style="text-align: justify;"><hi style="font-size:11pt">10.8.1  AccessControlledElement .................................................................................. 37 10.8.2  AlternativeID ....................................................................................................... 38 10.8.3  AttributeDefinition ............................................................................................... 39 10.8.4  AttributeDefinitionBoolean .................................................................................. 40 10.8.5  AttributeDefinitionDate ....................................................................................... 41 10.8.6 AttributeDefinitionEnumeration .......................................................................... 42 10.8.7 AttributeDefinitionInteger .................................................................................... 43 10.8.8 AttributeDefinitionReal ....................................................................................... 44 10.8.9 AttributeDefinitionSimple .................................................................................... 45 10.8.10 AttributeDefinitionString ................................................................................... 46 10.8.11 AttributeDefinitionXHTML ................................................................................. 47 10.8.12 AttributeValue ...................................................................................................48 10.8.13 AttributeValueBoolean ..................................................................................... 48 10.8.14 AttributeValueDate ........................................................................................... 49 10.8.15 AttributeValueEnumeration ..............................................................................50</hi></p><p>	<hi rend="bold">ii</hi>	              <hi style="font-size:9pt">Requirements Interchange Format (ReqIF), v1.2</hi></p><p style="text-align: justify;"><hi style="font-size:11pt">10.8.16  AttributeValueInteger ....................................................................................... 51 10.8.17  AttributeValueReal ........................................................................................... 52 10.8.18 AttributeValueSimple ........................................................................................ 52 10.8.19 AttributeValueString ......................................................................................... 53 10.8.20 AttributeValueXHTML ...................................................................................... 54 10.8.21 DatatypeDefinition ............................................................................................ 57 10.8.22 DatatypeDefinitionBoolean ............................................................................... 58 10.8.23 DatatypeDefinitionDate .................................................................................... 59 10.8.24 DatatypeDefinitionEnumeration ....................................................................... 59 10.8.25 DatatypeDefinitionInteger ................................................................................. 60 10.8.26 DatatypeDefinitionReal .................................................................................... 61 10.8.27 DatatypeDefinitionSimple ................................................................................. 62 10.8.28 DatatypeDefinitionString .................................................................................. 63 10.8.29 DatatypeDefinitionXHTML ................................................................................ 64 10.8.30 EmbeddedValue ............................................................................................... 64 10.8.31 EnumValue ....................................................................................................... 65 10.8.32 Identifiable ........................................................................................................ 66 10.8.33 RelationGroup .................................................................................................. 67 10.8.34 RelationGroupType .......................................................................................... 68 10.8.35 ReqIFContent ................................................................................................... 69 10.8.36 SpecElementWithAttributes ............................................................................. 70 10.8.37 SpecHierarchy .................................................................................................. 71 10.8.38 Specification ..................................................................................................... 72 10.8.39 SpecificationType ............................................................................................. 73 10.8.40 SpecObject ....................................................................................................... 74 10.8.41 SpecObjectType ............................................................................................... 75 10.8.42 SpecRelation .................................................................................................... 75 10.8.43 SpecRelationType ............................................................................................ 76 10.8.44 SpecType ......................................................................................................... 77 10.8.45 XhtmlContent ................................................................................................... 78</hi></p><p style="text-align: right;"><hi style="font-size:15pt">11  Production Rules of ReqIF XML Schema ....................................... 81</hi></p><p style="text-align: right;"><hi style="font-size:13pt">11.1 Purpose ................................................................................................81</hi></p><p style="text-align: right;"><hi style="font-size:13pt">11.2 Notation for EBNF ................................................................................81</hi></p><p style="text-align: right;"><hi style="font-size:13pt">11.3 Tags ......................................................................................................81</hi></p><p style="text-align: right;"><hi style="font-size:13pt" xml:space="preserve">11.4  EBNF ....................................................................................................83 </hi> </p><p><hi style="font-size:9pt">Requirements Interchange Format (ReqIF), v1.2</hi>	<hi rend="bold">iii iv</hi>	              <hi style="font-size:9pt">Requirements Interchange Format (ReqIF), v1.2</hi></p></div><div><head><anchor xml:id="Toc103987"/>Preface</head><p><hi rend="bold" style="font-size:14pt">About the Object Management Group</hi></p><p rend="heading 4"><hi style="font-size:11pt">OMG</hi></p><p>Founded in 1989, the Object Management Group, Inc. (OMG) is an open membership, not-for-profit computer industry standards consortium that produces and maintains computer industry specifications for interoperable, portable and reusable enterprise applications in distributed, heterogeneous environments. Membership includes Information Technology vendors, end users, government agencies and academia. </p><p style="text-align: justify;">OMG member companies write, adopt, and maintain its specifications following a mature, open process. OMG's specifications implement the Model Driven Architecture® (MDA®), maximizing ROI through a full-lifecycle approach to enterprise integration that covers multiple operating systems, programming languages, middleware and networking infrastructures, and software development environments. OMG’s specifications include: UML® (Unified Modeling Language™); CORBA® (Common Object Request Broker Architecture); CWM™ (Common Warehouse Metamodel); and industry-specific standards for dozens of vertical markets.</p><p>More information on the OMG is available at <hi rend="italic underline color(0000FF)">http://www.omg.org/</hi>.</p><p><hi rend="bold" style="font-size:14pt">OMG Specifications</hi></p><p>As noted, OMG specifications address middleware, modeling and vertical domain frameworks. All OMG Formal Specifications are available from this URL: </p><p><hi rend="italic underline color(0000FF)">http://www.omg.org/spec</hi></p><p>Specifications are organized by the following categories:</p><p><hi rend="bold" style="font-size:10.5pt">Business Modeling Specifications</hi></p><p rend="heading 4">Middleware Specifications</p><list rend="bulleted"><item>CORBA/IIOP</item><item>Data Distribution Services</item><item>Specialized CORBA</item></list><p><hi rend="bold" style="font-size:12pt">IDL/Language Mapping Specifications</hi></p><p rend="heading 4">Modeling and Metadata Specifications</p><list rend="bulleted"><item>UML, MOF, CWM, XMI</item><item>UML Profiles</item></list><p><hi rend="bold" style="font-size:12pt">Modernization Specifications</hi></p><p><hi style="font-size:9pt" xml:space="preserve">Requirements Interchange Format (ReqIF), V1.2                      </hi><seg xml:space="preserve">                                                                                             </seg><hi rend="bold">v</hi></p><p rend="heading 4">Platform Independent Model (PIM), Platform Specific Model (PSM), Interface Specifications</p><list rend="bulleted"><item>CORBAServices</item><item>CORBAFacilities</item></list><p><hi rend="bold" style="font-size:12pt">OMG Domain Specifications</hi></p><p rend="heading 4">CORBA Embedded Intelligence Specifications CORBA Security Specifications</p><p rend="heading 5">Signal and Image Processing Specifications</p><p style="text-align: justify;">All of OMG’s formal specifications may be downloaded without charge from our website. (Products implementing OMG specifications are available from individual suppliers.) Copies of specifications, available in PostScript and PDF format, may be obtained from the Specifications Catalog cited above or by contacting the Object Management Group, Inc. at:</p><p>OMG Headquarters</p><p>109 Highland Avenue</p><p>Needham, MA 02494</p><p>USA</p><p>Tel: +1-781-444-0404</p><p>Fax: +1-781-444-0320</p><p>Email: <hi rend="italic underline color(0000FF)">pubs@omg.org</hi></p><p>Certain OMG specifications are also available as ISO standards. Please consult <hi rend="italic underline color(0000FF)">http://www.iso.org</hi></p><p><hi rend="bold" style="font-size:18pt">Issues</hi></p><p>The reader is encouraged to report any technical or editing issues/problems with this specification via the report form at: <ref target="http://issues.omg.org/issues/create-new-issue"><hi rend="underline color(0000FF)">http://issues.omg.org/issues/create-new-issue</hi></ref></p><p><hi rend="bold">vi</hi><seg xml:space="preserve">                                                                                                                        </seg><hi style="font-size:9pt">Requirements Interchange Format (ReqIF), V1.2</hi></p></div><div><head><anchor xml:id="Toc103988"/>1	Scope</head><p>IMPORTANT NOTE: The following clauses describe the scope of the ReqIF standard. The ReqIF model itself, and the machine-readable documents generated from it (reqif.xsd, driver.xsd, reqif.cmof) are unchanged since ReqIF v1.0.1.</p><div><head><anchor xml:id="Toc103989"/>1.1	Who should read this document?</head><p>This document is created to inform:</p><list rend="bulleted"><item>Persons interested in exchanging requirements data between organizations that do not have a possibility to share the same repository (See Clause 4 for a definition of “repository”).</item><item>Requirements authoring tool vendors who want to support the Requirements Interchange Format (ReqIF) with export and import interfaces for their requirements authoring tools. See Clause 4 for a definition of “requirements authoring tool.”</item><item>Tool vendors other than requirements authoring tool vendors who wish to interchange requirements for documentation or other purposes.</item><item>Anyone interested in defining, interchanging, storing, etc., requirements in a standard interchange format.</item></list></div><div><head><anchor xml:id="Toc103990"/>1.2	Objectives of the Requirements Interchange Format</head><p>Requirements management has been an integral part of the development process in various industries (especially in the military, aeronautical, or the medical device industry) for years. Other industries have been adopting requirements management recently.</p><p>The automotive industry for example introduced requirements management around 1999. As requirements management spread in the automotive industry over the years, more and more car manufacturers and suppliers have been applying requirements management and making use of dedicated requirements authoring tools. Large improvements have been made in these organizations and requirements management has been established as a key discipline in this collaborative engineering environment. Now with this established discipline in place, manufacturers and suppliers strive for collaborative requirements management where requirements management does not stop at company borders.</p><p>For technical and organizational reasons, two companies in the manufacturing industry are rarely able to work on the same requirements repository and sometimes do not work with the same requirements authoring tools. A generic, nonproprietary format for requirements information is required to cross the chasm and to satisfy the urgent industry need for exchanging requirement information between different companies without losing the advantage of requirements management at the organizations' borders.</p><p>With the help of a dedicated interchange format for requirements specifications, it is possible to bridge the gap: </p><list rend="bulleted"><item>The collaboration between partner companies is improved by the benefits of applying requirements management methods across company borders.</item><item>The partner companies do not have to use the same requirements authoring tool and suppliers do not need to have multiple requirements authoring tools to fulfill the need of their customers with regards to compatibility.</item><item>Within a company, requirement information can be exchanged even if various tools are used to author requirements.</item></list><p>The Requirements Interchange Format (ReqIF) described in this specification defines such an open, non-proprietary exchange format. Requirement information is exchanged by transferring XML documents that comply to the ReqIF format.</p><p>See the following figure for an example scenario between two partners who are exchanging a Customer Requirements Specification and the corresponding System Requirements Specification.</p><figure><graphic n="1004" width="17.161933333333334cm" height="8.754533333333333cm" url="media/image2.png" rend="inline"/></figure><p><hi rend="bold" style="font-size:9pt">Figure 1.1 - Example ReqIF exchange scenario</hi></p><p>Figure 1.1 represents a common scenario how requirements specifications are exchanged between partners. Both partners in the scenario use different requirements management (RM) tools to create, manage, and evolve their requirements specifications. The process is usually initiated by Partner 1. Customer requirements that are relevant for Partner 2 are consolidated in a snapshot document. The Partner 2 specific CRS snapshot is exported out of the RM-Tool A by means of the ReqIF-Exporter and transferred asynchronously to Partner 2 via existing data transfer mechanisms. The result of the export is a ReqIF compliant XML document representing the specific CRS snapshot. The data transfer mechanism is out of scope of ReqIF. Having received the exported CRS snapshot Partners 2 imports the information into RM-Tool B in order to analyze the customer requirements imposed by Partner 1. For traceability reasons Partner 2 links the received customer requirements with the corresponding system requirements. As an answer to the customer requirements Partner 2 creates a consolidated SRS snapshot that contains the system requirements realizing the imposed customer requirements of Partner 1. The SRS snapshot is fed back to Partner 1 as an exported ReqIF compliant XML document. Having imported the SRS snapshot Partner 1 can analyze within RM-Tool A how the customer requirements are fulfilled by the system requirements specified by Partner 2. As specifications evolve over time the exchange via ReqIF is an event driven, asynchronous data exchange. </p></div></div><div><head><anchor xml:id="Toc103991"/>2	Conformance</head><p>A technology targeting the seamless information exchange between a wide variety of tool implementations may tolerate only a very limited variability in the definition of the information exchange format.</p><p>Therefore, a compliant implementation of the Requirements Interchange Format (ReqIF) must implement all elements described in Clauses 9, 10, and 11. Further, a compliant implementation must also recognize and support the high-level exchange protocol and associated exchange document states defined in Clause 8.</p><p>As a compliance variation point, compliant implementations may use an alternative element identification mechanism in parallel to the primary identification mechanism. Further, implementations may be unable to interpret or handle certain forms of formatted attributes. In this case, implementations are allowed to substitute the offending representation with a simplified form, as long as the attribute is marked as simplified, a reference to an original form of the attribute is preserved, and the simplified attribute is excluded from any further alterations.</p></div><div><head><anchor xml:id="Toc103992"/>3	Normative References</head><div><head><anchor xml:id="Toc103993"/>3.1	Normative References</head><p>The following normative documents contain provisions that, through reference in this text, constitute provisions of this specification:</p><p style="text-align: justify;"><hi rend="bold">URI</hi></p><list rend="bulleted"><item>Uniform Resource Identifiers (URI): Generic Syntax, T. Berners-Lee, R. Fielding, L. Masinter, IETF RFC 2396, August 1998 http://www.ietf.org/rfc/rfc2396.txt</item></list><p style="text-align: justify;"><hi rend="bold">XHTML 1.1 Modularization</hi></p><list rend="bulleted"><item>XHTML™ Modularization 1.1, Daniel Austin et al., eds., W3C, 8 October 2008 http://www.w3.org/TR/xhtml-modularization/</item></list><p style="text-align: justify;"><hi rend="bold">XML 1.0 (Second Edition)</hi></p><list rend="bulleted"><item>Extensible Markup Language (XML) 1.0, Second Edition, Tim Bray et al., eds., W3C, 6 October 2000 http://www.w3.org/TR/REC-xml </item></list><p style="text-align: justify;"><hi rend="bold">XML-Namespaces</hi></p><list rend="bulleted"><item>Namespaces in XML, Tim Bray et al., eds., W3C, 14 January 1999  http://www.w3.org/TR/REC-xml-names </item></list><p style="text-align: justify;"><hi rend="bold" xml:space="preserve">XML-Schema </hi></p><p>The authoritative description of the Requirements Interchange Format exchange document structure is provided as an XML Schema. XML Schemas express shared vocabularies and allow machines to carry out rules made by people. They provide a means for defining the structure, content and semantics of XML documents.</p><list rend="bulleted"><item>XML Schema Part 1: Structures, Henry S. Thompson, David Beech, Murray Maloney, Noah Mendelsohn, W3C, 2 May 2001  http://www.w3.org/TR/xmlschema-1//</item><item>XML Schema Part 2: Datatypes, Paul V. Biron and Ashok Malhotra, eds., W3C, 2 May 2001 http://www.w3.org/TR/xmlschema-2/</item></list></div><div><head><anchor xml:id="Toc103994"/>3.2	Non-normative references</head><p style="text-align: justify;"><hi rend="bold">MIME Media Types</hi></p><p>http://www.iana.org/assignments/media-types/</p></div></div><div><head><anchor xml:id="Toc103995"/>4	Terms and Definitions</head><p>For the purposes of this specification, the following terms and definitions apply.</p><table rend="rules"><row><cell style="text-align: left;"><hi rend="bold" style="font-size:12pt">Name</hi></cell><cell style="text-align: left;"><hi rend="bold" style="font-size:12pt">Description</hi></cell></row><row><cell style="text-align: left;">Editable</cell><cell style="text-align: justify;">The characteristic of an object that it is possible to define, alter, adapt, or refine the object.</cell></row><row><cell style="text-align: left;">Exchange XML Document</cell><cell style="text-align: justify;">An XML document with specification content that is exchanged between two partners. </cell></row><row><cell style="text-align: left;">Exporting ReqIF tool</cell><cell style="text-align: left;">A ReqIF Tool that is used to export requirements information from a requirements authoring tool into an exchange XML document.</cell></row><row><cell style="text-align: left;">&lt;Name of ReqIF Information Type&gt; instance</cell><cell style="text-align: left;">An instance of the ReqIF information type, or an instance of a direct or indirect subclass of the ReqIF information type.</cell></row><row><cell style="text-align: left;">Importing ReqIF tool</cell><cell style="text-align: left;">A ReqIF Tool that is used to import an exchange XML document into a requirements authoring tool.</cell></row><row><cell style="text-align: left;">Information Element</cell><cell style="text-align: left;">An information element is an atomic unit of information, e.g., a requirements text, an attribute value in a requirements authoring tool, a relation that links two requirements.</cell></row><row><cell style="text-align: left;">Information Type</cell><cell style="text-align: justify;">An information type is a category of information elements with the same properties in terms of e.g., element attributes or relationships to other information elements.</cell></row><row><cell style="text-align: left;">Links</cell><cell style="text-align: left;">References between requirements or between requirement and solution.</cell></row><row><cell style="text-align: left;">MIME type</cell><cell style="text-align: left;">Multipurpose Internet Mail Extensions type. MIME-Types are a common mechanism to specify kinds of textual or binary objects.</cell></row><row><cell style="text-align: left;">Repository</cell><cell style="text-align: justify;">Container for RE&amp;M data that is managed by a requirements authoring tool. </cell></row><row><cell style="text-align: left;">Requirement</cell><cell style="text-align: justify;">A requirement specifies a capability or condition that must (or should) be satisfied. A requirement may specify a function that a system must perform or a performance condition a system must achieve.</cell></row><row><cell style="text-align: left;">ReqIF</cell><cell style="text-align: left;">Requirements Interchange Format: The format specified in this standard.</cell></row><row><cell style="text-align: left;">ReqIF model</cell><cell style="text-align: justify;">The ReqIF-model is located on the same abstraction level as <hi rend="italic">information types</hi>. It specifies and describes the different kind of <hi rend="italic">information types</hi> as well as their relationships to each other.</cell></row><row><cell style="text-align: left;">ReqIF tool</cell><cell style="text-align: justify;">A tool that exports ReqIF compliant XML documents from a source requirements authoring tool and/or imports them in a target requirements authoring tool.</cell></row><row><cell style="text-align: left;">Requirements authoring tool</cell><cell style="text-align: left;">A tool used that is capable of creating and modifying requirements. In the context of this specification, this need not be a tool marketed as “Requirements Management Tool.” </cell></row><row><cell style="text-align: left;">Source requirements authoring tool</cell><cell style="text-align: left;">A requirements authoring tool from which contents are exported to a ReqIF file.</cell></row><row><cell style="text-align: left;">Target requirements authoring tool</cell><cell style="text-align: left;">A requirements authoring tool that is the target of an import of an exchange XML document.</cell></row><row><cell style="text-align: left;">Supplier</cell><cell style="text-align: left;">A company that produces components for use in another company’s products.</cell></row><row><cell style="text-align: left;">Tags</cell><cell style="text-align: left;">Tags specify special properties of an information type with regard to the automatic XML-Schema generation process.</cell></row><row><cell style="text-align: left;">ZIP file (format)</cell><cell style="text-align: left;">The ZIP file format is a data compression and archive format. A ZIP file contains one or more files that have been compressed to reduce file size, or stored as-is.</cell></row></table></div><div><head><anchor xml:id="Toc103996"/>5	Symbols</head><p>For the purposes of this specification, the following acronyms and abbreviations apply.</p><table rend="rules"><row><cell style="text-align: left;"><hi rend="bold" style="font-size:12pt">Name</hi></cell><cell style="text-align: left;"><hi rend="bold" style="font-size:12pt">Description</hi></cell></row><row><cell style="text-align: left;">CDATA</cell><cell style="text-align: left;">Character Data</cell></row><row><cell style="text-align: left;">CSS</cell><cell style="text-align: left;">Cascading Style Sheets</cell></row><row><cell style="text-align: left;">FTP</cell><cell style="text-align: left;">File Transfer Protocol</cell></row><row><cell style="text-align: left;">HIS</cell><cell style="text-align: left;"><p>Hersteller Initiative Software (<hi rend="underline color(0000FF)">http://www.automotive-his.de/</hi>).</p><p>The Hersteller Initiative Software is a consortium of the vehicle manufacturers Audi, BMW, Daimler, Porsche, and Volkswagen. The objective of this consortium is to bundle their activities for standard software modules, process maturity levels, software test, software tools, and programming of control units. The common goal is to achieve and use joint standards.</p></cell></row><row><cell style="text-align: left;">IT</cell><cell style="text-align: left;">Information Type</cell></row><row><cell style="text-align: left;">MIME type</cell><cell style="text-align: left;">Multipurpose Internet Mail Extensions type</cell></row><row><cell style="text-align: left;">OMG</cell><cell style="text-align: left;">Object Management Group</cell></row><row><cell style="text-align: left;">RE</cell><cell style="text-align: left;">Requirements Engineering</cell></row><row><cell style="text-align: left;">RE&amp;M</cell><cell style="text-align: left;">Requirements Engineering &amp; Management</cell></row><row><cell style="text-align: left;">ReqIF</cell><cell style="text-align: left;">Requirements Interchange Format.</cell></row><row><cell style="text-align: left;">RM</cell><cell style="text-align: left;">Requirements Management</cell></row><row><cell style="text-align: left;">UC</cell><cell style="text-align: left;">Use Case</cell></row><row><cell style="text-align: left;">UML</cell><cell style="text-align: left;">Unified Modeling Language</cell></row><row><cell style="text-align: left;">URI</cell><cell style="text-align: left;">Uniform Resource Identifier</cell></row><row><cell style="text-align: left;">UTF-16</cell><cell style="text-align: left;"><p>Universal Multiple-Octet Coded Character Set (UCS) Transformation Format for 16 Planes of Group </p><p>00</p></cell></row><row><cell style="text-align: left;">UTF-8</cell><cell style="text-align: left;">8-bit Unicode Transformation Format</cell></row><row><cell style="text-align: left;">W3C</cell><cell style="text-align: justify;">The World Wide Web Consortium (W3C) is an international consortium where Member organizations, a full-time staff, and the public work together to develop Web standards.</cell></row><row><cell style="text-align: left;">XHTML</cell><cell style="text-align: left;">Extensible Hypertext Markup Language</cell></row><row><cell style="text-align: left;">XML</cell><cell style="text-align: left;">Extensible Markup Language</cell></row><row><cell style="text-align: left;">XSLT</cell><cell style="text-align: left;">Extensible Stylesheet Language Transformation</cell></row></table></div><div><head><anchor xml:id="Toc103997"/>6	Additional Information</head><div><head><anchor xml:id="Toc103998"/>6.1	How to read this specification</head><p>Clauses 1 to 6 contain background and basics for reading this specification. Clause 1 describes the objectives of this specification and the intended readership. Clause 2 defines conformance. Clause 3 lists other specifications and documents containing provisions which, through reference in this text, constitute provisions of this specification. Clause 4 and 5 contain definitions of terms and abbreviations used in this document. Clause 6 provides additional information to this specification.</p><p>Clauses 7 to 11 include the technical part of this specification. Clause 7 gives an introduction to the Requirements Interchange Format and describes relevant exchange scenarios. Clause 8 describes the abstract architecture of the ReqIF information model. Clause 9 defines the general structure of exchange XML documents. Clause 10 defines the details of the exchange XML documents. Clause 11 contains the production rules for the ReqIF XML Schema.</p></div><div><head><anchor xml:id="Toc103999"/>6.2	Acknowledgements</head><p>The following companies submitted and/or supported parts of this specification: </p><div><head><anchor xml:id="Toc104000"/>6.2.1	Submitting Organizations</head><p>The following companies are formal submitting members of OMG:</p><list rend="bulleted"><item>Atego</item><item>ProSTEP iViP Association</item></list></div><div><head><anchor xml:id="Toc104001"/>6.2.2	Supporting Organizations</head><p>The following organizations support this specification, but are not formal submitters.</p><table rend="rules"><row><cell style="text-align: left;"><hi rend="bold">Name of company</hi></cell><cell style="text-align: left;"><hi rend="bold">URL</hi></cell></row><row><cell style="text-align: left;">88solutions Corporation</cell><cell style="text-align: left;"><hi rend="underline">http://88solutions.com/</hi></cell></row><row><cell style="text-align: left;">Audi AG</cell><cell style="text-align: left;"><hi rend="underline">http://www.audi.de</hi></cell></row><row><cell style="text-align: left;">BMW AG</cell><cell style="text-align: left;"><hi rend="underline">http://www.bmw.de</hi></cell></row><row><cell style="text-align: left;">Continental AG</cell><cell style="text-align: left;"><hi rend="underline">http://www.conti-online.com</hi></cell></row><row><cell style="text-align: left;">Daimler AG</cell><cell style="text-align: left;"><hi rend="underline">http://www.daimler.com</hi></cell></row><row><cell style="text-align: left;">HOOD GmbH</cell><cell style="text-align: left;"><hi rend="underline">http://www.hood-group.com</hi></cell></row><row><cell style="text-align: left;">International Business Machines</cell><cell style="text-align: left;"><hi rend="underline">http://www.ibm.com/de</hi></cell></row><row><cell style="text-align: left;">MKS GmbH </cell><cell style="text-align: left;"><hi rend="underline">http://www.mks.com</hi></cell></row><row><cell style="text-align: left;">ModelAlchemy Consulting</cell><cell style="text-align: left;"><hi rend="underline">http://www.modelalchemy.com</hi></cell></row><row><cell style="text-align: left;">PROSTEP AG</cell><cell style="text-align: left;"><hi rend="underline">http://www.prostep.com</hi></cell></row><row><cell style="text-align: left;">Robert Bosch GmbH</cell><cell style="text-align: left;"><hi rend="underline">http://www.bosch.de</hi></cell></row><row><cell style="text-align: left;">Volkswagen AG</cell><cell style="text-align: left;"><hi rend="underline">http://www.volkswagen.de</hi></cell></row></table><p style="text-align: justify;">The initial work on ReqIF was done by the members of the HIS group and additional partners that were associated for this project. The HIS group is the panel of the vehicle manufacturers Audi AG, BMW Group, Daimler AG, Porsche AG, and Volkswagen AG to bundle their activities for standard software modules, process maturity levels, software test, software tools, and programming of control units. The common goal is to achieve and facilitate joint standards. The group that is working on the initial release of ReqIF consists of the ProSTEP iViP Association, Atego Systems GmbH, Audi AG, BMW AG, Continental AG, Daimler AG, HOOD GmbH, International Business Machines, MKS GmbH, PROSTEP AG, Robert Bosch GmbH, and Volkswagen AG.</p><p>Before the submission of the Requirements Interchange Format (ReqIF) to the OMG, the Requirements Interchange Format had been a specification proposed by the HIS and in its latest version, a recommendation of ProSTEP iViP. For these versions, the abbreviation “<hi rend="italic" xml:space="preserve">RIF” </hi>has been applied. The HIS released the Requirements Interchange Format as RIF 1.0, RIF1.0a, RIF 1.1; RIF1.1a and the ProSTEP iViP released the recommendation RIF 1.2.</p><p>As the acronym RIF has an ambiguous meaning within the OMG, the acronym ReqIF has been introduced to separate it from the W3C`s Rule Interchange Format. ReqIF 1.0 is the direct successor of the ProSTEP iViP recommendation RIF 1.2.</p><p><hi rend="bold" style="font-size:9pt">8</hi>	<hi style="font-size:9pt" xml:space="preserve">                Requirements Interchange Format (ReqIF), v1.2</hi></p></div></div></div><div><head><anchor xml:id="Toc104002"/>7	Concept Overview and Use Cases</head><div><head><anchor xml:id="Toc104003"/>7.1	Preface: How requirements authoring tools handle information</head><p>Most modern requirement authoring tools emulate word processors, but offer additional features. This allows authors of requirement specifications who have been using word processors to continue working in a similar manner, but enjoy the benefits of a tool specialized for authoring requirements.</p><p>Figure 7.1 shows an example for the transition from creating a textual document using a word processor to authoring a specification in a modern requirements authoring tool.</p><figure><graphic n="1005" width="15.917333333333334cm" height="11.667066666666667cm" url="media/image3.png" rend="inline"/></figure><p><hi rend="bold" style="font-size:9pt">Figure 7.1 - Transition from word processors to requirement authoring tools</hi></p><p>The word processing features of requirement authoring tools include the following.</p><table rend="rules"><row><cell style="text-align: left;"><hi rend="bold">Feature</hi></cell><cell style="text-align: left;"><hi rend="bold">How word processors handle it</hi></cell><cell style="text-align: left;"><hi rend="bold">How requirement authoring tools handle it</hi></cell></row><row><cell style="text-align: left;">1. Structure specifications      hierarchically</cell><cell style="text-align: left;">A user of a word processor structures documents by creating a hierarchy of clauses and sub clauses. The wordprocessor supports this task by automating the numbering of headlines and the creation of an outline.</cell><cell style="text-align: left;">Requirement authoring tools support the creation of hierarchically structured specifications. Users can create tree structures of requirements.</cell></row><row><cell style="text-align: left;">2. Use formatted text in the     specifications</cell><cell style="text-align: left;">Word processors support, among other things, the bold, underlined, italic, and strikethrough text, bullet points and numbering in the documents.</cell><cell style="text-align: justify;">Requirement authoring tools support the use of bold, underlined, italic, and strikethrough text, bullet points, and numbering in attribute values of requirements.</cell></row><row><cell style="text-align: left;">3. Reference binary files</cell><cell style="text-align: left;">Word processors support referencing binary files, for example spreadsheets, presentation slides, etc. from within a document.</cell><cell style="text-align: left;">Requirement authoring tools support the referencing of binary files from within attribute values of requirements.</cell></row></table><p>The features that are specific to requirement authoring tools include the following.</p><table rend="rules"><row><cell style="text-align: left;"><hi rend="bold">Feature</hi></cell><cell style="text-align: left;"><hi rend="bold">How requirement authoring tools handle it</hi></cell><cell style="text-align: left;"><hi rend="bold">Example</hi></cell></row><row><cell style="text-align: left;"><p>4. Uniquely </p><p>    identify requirements</p></cell><cell style="text-align: left;">Requirement authoring tools allow to distinguish individual requirements and to automatically create a unique identifier for each requirement.</cell><cell style="text-align: left;"/></row><row><cell style="text-align: left;">5. Associate attributes with     the requirements</cell><cell style="text-align: left;"><p>A user of a requirement authoring tool can define arbitrary attributes and attach them to requirements. </p><p>Typically, a set of requirements shares the same attributes. However, these attributes may have different values for each requirement, and the values may have different underlying data types. </p></cell><cell style="text-align: left;"><p>A user of a requirement authoring tool defines the attributes “id,” “description,” “priority,” “status,” and “department” as mandatory for a specification. </p><p style="text-align: justify;">The “priority” attribute has an integer data type, the “status” and “department” attributes have an enumeration data type, and the “description” attribute has a string data type.</p><p>Each requirement may have a different value for each of these attributes.  </p></cell></row><row><cell style="text-align: left;">6. Establish relations     between requirements</cell><cell style="text-align: left;">A user of a requirement authoring tool can define relations between requirements. </cell><cell style="text-align: left;"><p>Example purposes of relations: a) to establish traceability </p><p>b) to connect non-functional to functional requirements.</p></cell></row><row><cell style="text-align: left;">7. Group relations</cell><cell style="text-align: left;">Some requirement authoring tools allow the user to define new types of relations and to group relations by their type.</cell><cell style="text-align: left;"><p>A requirement authoring tool may allow its users to define the new type “contradicts” for relations between two requirements that contradict each other, and then allow the users to create a group of “contradicts” relations. </p><p>Such a group of relations – together with the requirements that are related by it – may support the users when reviewing and consolidating specifications.</p></cell></row><row><cell style="text-align: left;">8. Restrict user access to     certain information</cell><cell style="text-align: left;">Requirement authoring tools offer the feature to restrict access to certain information. </cell><cell style="text-align: left;"><p>During an exchange of specifications, the partner company that receives a Customer Requirement Specification is not allowed to </p><p>edit the “priority” attribute of the requirements.</p></cell></row></table></div><div><head><anchor xml:id="Toc104004"/>7.2	How the Requirements Interchange Format handles information from requirement authoring tools</head><p>The Requirements Interchange Format has been set up with the goal to exchange specifications between modern requirement authoring tools. Therefore, the requirements interchange format must be able to represent the information described in the previous clause. The following table shows how the features described in the previous clause are represented in the format. In the third column of the table, references to the abstract syntax of the format and the descriptions of the elements can be found.</p><table rend="rules"><row><cell style="text-align: left;"><hi rend="bold">Feature</hi></cell><cell style="text-align: left;"><hi rend="bold">How the Requirements Interchange Format handles it</hi></cell><cell style="text-align: left;"><hi rend="bold">References to abstract syntax of the format and the description of the elements</hi></cell></row><row><cell style="text-align: left;">1. Structure specifications      hierarchically</cell><cell style="text-align: left;">ReqIF provides the concept of a specification that contains a hierarchical structure of requirements.</cell><cell style="text-align: left;">See sub clause 10.3 for the basics of requirement specifications. See sub clause 10.4 for the abstract syntax of hierarchies. See sub clause 10.8.38 for the class description of a specification (class). See sub clause 10.8.40 for the class description of a requirement. See sub clause 10.8.37 for the class description of a hierarchical structure. </cell></row><row><cell style="text-align: left;">2. Use formatted text in the     specifications</cell><cell style="text-align: left;">As representing formatted text is a potentially complex topic, ReqIF re-uses a subset of W3C’s XHTML modules to ease implementation of the format. XHTML content MAY be used in specific attribute values. </cell><cell style="text-align: left;"><p>See sub clause 10.6.3 on the datatype for formatted content.</p><p>See sub clause 10.8.11, 10.8.29, and 10.8.20 for the class descriptions.</p></cell></row><row><cell style="text-align: left;">3. Reference binary files</cell><cell style="text-align: left;">To allow referencing binary files from within an attribute value that contains formatted text, XHTML is used as a mechanism as well.</cell><cell style="text-align: left;">See sub clause 10.8.20 for the class description.</cell></row><row><cell style="text-align: left;">4. Uniquely identify     requirements</cell><cell style="text-align: left;">ReqIF provides an identification mechanism for requirements.</cell><cell style="text-align: left;">See sub clause 10.2 for the abstract syntax. See sub clause 10.8.32 for the class descriptions.</cell></row><row><cell style="text-align: left;">5. Associate attributes with     the requirements</cell><cell style="text-align: left;">ReqIF allows to attach attributes to requirements. The definition of the attributes (the attribute name, the attribute data type etc.) is separated from the attribute value.</cell><cell style="text-align: left;"><p>See sub clause 10.3 on how to attach attributes to requirements. See sub clause </p><p>10.5 to learn about data types of attributes.</p></cell></row><row><cell style="text-align: left;">6. Establish relations     between requirements</cell><cell style="text-align: left;">ReqIF represents relations with a freely definable semantic.</cell><cell style="text-align: left;">See sub clause 10.4 for the abstract syntax of relations between requirements. See sub clause 10.8.42 for the class description of a relation between requirements.</cell></row><row><cell style="text-align: left;">7. Group relations</cell><cell style="text-align: left;">ReqIF allows grouping of relationships.</cell><cell style="text-align: left;">See sub clause 10.8.43 and 10.8.33 for the class descriptions.</cell></row><row><cell style="text-align: left;">8. Restrict user access to     certain information</cell><cell style="text-align: left;">ReqIF allows to specify that certain information elements are not editable.</cell><cell style="text-align: left;">See sub clause 10.7.</cell></row></table></div><div><head><anchor xml:id="Toc104005"/>7.3	How the Requirements Interchange Format copes with different tool capabilities</head><p>Modern requirement authoring tools vary concerning the features they support. There is no “unified language” for requirements that all requirement authoring tools support, and therefore, there is also no meta-model shared between requirement authoring tools. </p><p>The Requirements Interchange Format deals with the tools that are on the market nowadays. Some typical situations and resulting consequences are outlined in the following table.</p><table rend="rules"><row><cell style="text-align: left;"><hi rend="bold">Situation</hi></cell><cell style="text-align: left;"><hi rend="bold">Example</hi></cell><cell style="text-align: left;"><hi rend="bold">Consequences</hi></cell></row><row><cell style="text-align: left;">Requirement authoring tools use different terminology for the same concept.</cell><cell style="text-align: left;"><p>What is called an “object” in one authoring tool may be called a </p><p>“requirement” in another authoring tool</p></cell><cell style="text-align: left;">ReqIF includes only a limited collection of concepts, but provides an (informal) mapping to various requirement authoring tools on the market.</cell></row><row><cell style="text-align: left;">When users of two different brands of requirement authoring tools exchange specifications, information may get lost due to the different capabilities of the tools.</cell><cell style="text-align: left;">Company A exports a specification from their requirement authoring tool, sends it to Company B where the specification is imported into a different requirement authoring tool. During the import, information is lost.</cell><cell style="text-align: left;">Partners exchanging specifications should agree on the requirement authoring tools and the tool capabilities they use prior to the exchange.</cell></row><row><cell style="text-align: left;"/><cell style="text-align: left;"/><cell style="text-align: left;"><p>ReqIF focuses on concepts that are widely implemented in requirement authoring tools. There are differences in how formatted contents can be represented in the requirement authoring tools and how special characters are treated. For that, ReqIF offers the mechanism of an “isSimplified” flag for formatted attribute values. See Clause 8 and sub clause 10.8.20.</p><p>For concepts that are individual features of a certain requirement authoring tool, ReqIF offers the concept of tool extensions.</p><p>See sub clause 9.2.4 for details.</p></cell></row></table></div><div><head><anchor xml:id="Toc104006"/>7.4	Exchange Scenarios</head><p>The Requirements Interchange Format (ReqIF) described in this specification defines a non-proprietary, open exchange format. Instead of exchanging textual requirement specification documents, requirement specifications are exchanged by transferring XML documents that comply to the ReqIF format, making them processable by tools.</p><p>One of the basic ideas of ReqIF is to offer the opportunity to exchange information between different installations of the same requirements authoring tool with a standardized format and that the same format can be used to exchange information between different requirements authoring tools.</p><p>This clause explains two exchange scenarios:</p><list rend="bulleted"><item>In the first exchange scenario (“one-way”), requirement specifications of one exchange partner are provided to a second exchange partner, for example to inform the second partner about the requested requirements.</item><item>In the second exchange scenario (“roundtrip”), requirement specifications of one exchange partner are provided to a second exchange partner as well. After that, however, the second exchange partner makes modifications to the requirements, for example to comment them concerning the feasibility. The second exchange partner transmits the modified requirement specifications back to the first exchange partner.</item></list><p style="text-align: justify;">The two exchange partners mentioned above may for example be two different companies or two departments within one company. In any case, there needs to be at least one installation of a requirements authoring tool per exchange partner, which is used to author the requirements. There also needs to be a user for each requirements authoring tool who exports, imports, or updates the requirement specifications in the requirements authoring tools.</p><p>Clause 7.4.1 describes the relevant roles in the scenarios. Sub clauses 7.4.2 and 7.4.3 outline the two exchange scenarios. </p><p>The steps of the exchange scenarios that need further detailing are described in sub clause 7.5. Note that ReqIF tools MAY support additional scenarios. For example, exchanges with more than two partners MAY be supported, or there MAY be other purposes for using ReqIF than exchange, for example document generation.</p><div><head><anchor xml:id="Toc104007"/>7.4.1	Role descriptions</head><table rend="rules"><row><cell style="text-align: left;"><hi rend="bold">Role Name</hi></cell><cell style="text-align: left;"><hi rend="bold">Role description</hi></cell><cell style="text-align: left;"><hi rend="bold">Role type</hi></cell></row><row><cell style="text-align: left;">RequirementsAuthoringToolUser</cell><cell style="text-align: left;"><p>Party that is responsible for starting the export of requirements specifications from a requirements authoring tool to ReqIF exchange XML documents or</p><p>Party that is responsible for starting the import of </p><p>ReqIF exchange XML documents to a requirements authoring tool. (An update of the specification in the requirements authoring tool may become necessary.) </p></cell><cell style="text-align: left;">Person</cell></row><row><cell style="text-align: left;">RequirementsAuthoringTool</cell><cell style="text-align: left;">See clause “Terms and Definitions” for a definition.</cell><cell style="text-align: left;">System</cell></row></table></div><div><head><anchor xml:id="Toc104008"/>7.4.2	First exchange scenario (“One-Way”)</head><p>Figure 7.2 shows a one-way exchange of requirement specifications between two requirements authoring tools.</p><figure><graphic n="1006" width="16.950266666666668cm" height="9.262533333333334cm" url="media/image4.png" rend="inline"/></figure><p><hi rend="bold" style="font-size:9pt">Figure 7.2 - One-Way exchange of requirements between two requirements authoring tools using ReqIF</hi></p><p rend="heading 5">Scenario steps</p><table rend="rules"><row><cell style="text-align: left;"><hi rend="bold">Step ID</hi></cell><cell style="text-align: left;"><hi rend="bold">Step description</hi></cell></row><row><cell style="text-align: left;"><p>1.0:  Export Requirement </p><p>Specifications()</p></cell><cell style="text-align: left;"><p>A user of a requirements authoring tool (User1) starts the export of requirement specifications from a requirements authoring tool (Tool1). </p><p>See Use Case “UC1: Export Requirement Specifications ” for details on this step.</p></cell></row><row><cell style="text-align: left;"><p>1.1: Export Requirement </p><p>Specifications() : Exchange XML Documents</p></cell><cell style="text-align: left;">The requirement specifications chosen by User1 are exported into one or more ReqIF compliant XML documents. See Use Case “UC1: Export Requirement Specifications ” for details on this step.</cell></row><row><cell style="text-align: left;"><p>2.0: Transmit(Exchange XML </p><p>Documents) </p></cell><cell style="text-align: left;"><p>NOTE: This step is not in the scope of ReqIF.</p><p>The exchange XML documents are transmitted by the sender (User1) to the receiver (User2) using traditional file transfer tools (e.g., email or ftp). </p></cell></row><row><cell style="text-align: left;"><p>3.0: Import Requirement </p><p>Specifications(Exchange XML </p><p>Documents)</p></cell><cell style="text-align: left;">User2 imports the exchange XML documents into his requirements authoring tool (Tool2). For the case that, during this step, requirement specifications are newly created in Tool2, see “UC2: Import New Requirement Specifications ” for details. For the case that, during this step, existing requirement specifications are updated in Tool2, see “UC3: Update Requirement Specifications ” for details.</cell></row></table></div><div><head><anchor xml:id="Toc104009"/>7.4.3	Second exchange scenario (“Roundtrip”)</head><p>Figure 7.3 shows a roundtrip exchange of requirement specifications between two requirements authoring tools.</p><figure><graphic n="1007" width="17.051869444444446cm" height="9.279469444444445cm" url="media/image5.png" rend="inline"/></figure><p><hi rend="bold" style="font-size:9pt">Figure 7.3 - Roundtrip exchange of requirements between two requirements authoring tools using ReqIF</hi></p><p rend="heading 5">Scenario steps</p><table rend="rules"><row><cell style="text-align: left;"><hi rend="bold">Step ID</hi></cell><cell style="text-align: left;"><hi rend="bold">Step description</hi></cell></row><row><cell style="text-align: left;">1.0: Export Requirement Specifications()</cell><cell style="text-align: left;">A user of a requirements authoring tool (User1) starts the export of requirement specifications from a requirements authoring tool (Tool1). See Use Case “UC1: Export Requirement Specifications ” for details on this step.</cell></row><row><cell style="text-align: left;"><p>1.1: Export Requirement Specifications() : </p><p>       Exchange XML Documents</p></cell><cell style="text-align: left;">The requirement specifications chosen by User1 are exported into one or more ReqIF compliant XML documents. See Use Case “UC1: Export Requirement Specifications ” for details on this step.</cell></row><row><cell style="text-align: left;">2.0: Transmit(Exchange XML Documents)</cell><cell style="text-align: left;"><p>NOTE: This step is not in the scope of ReqIF.</p><p style="text-align: justify;">The exchange XML documents are transmitted by the sender (User1) to the receiver (User2) using traditional file transfer tools (e.g., email or ftp). </p></cell></row><row><cell style="text-align: left;"><p>3.0: Import Requirement  </p><p>       Specifications (Exchange XML </p><p>       Documents)</p></cell><cell style="text-align: left;"><p>User2 imports the exchange XML documents into his requirements authoring tool (Tool2). </p><p style="text-align: justify;">For the case that, during this step, requirement specifications are newly created in Tool2, see “UC2: Import New Requirement Specifications ” for details. </p><p>For the case that, during this step, existing requirement specifications are updated in Tool2, see “UC3: Update Requirement Specifications ” for details.</p></cell></row><row><cell style="text-align: left;">4.0: Modify Requirement Specifications</cell><cell style="text-align: left;">User2 modifies the requirement specifications in Tool2. He MAY add or delete individual requirements or requirement specifications and change the contents of requirements or the structure of requirement specifications.</cell></row><row><cell style="text-align: left;">5.0: Export Requirement Specifications</cell><cell style="text-align: left;">User2 starts the export of the requirement specifications.</cell></row><row><cell style="text-align: left;"><p>5.1: Export Requirement Specifications() :  </p><p>       Exchange XML Documents</p></cell><cell style="text-align: left;">The requirement specifications chosen by User2 are exported into one or more ReqIF compliant XML documents.</cell></row><row><cell style="text-align: left;">6.0: Transmit(Exchange XML Documents) </cell><cell style="text-align: left;"><p>NOTE: This step is not in the scope of ReqIF.</p><p style="text-align: justify;">The exchange XML documents are transmitted by the sender (User2) to the receiver (User1) using traditional file transfer tools (e.g., email or ftp). </p></cell></row><row><cell style="text-align: left;"><p>7.0: Import Requirement </p><p>       Specifications (Exchange </p><p>       XML Documents)</p></cell><cell style="text-align: left;"><p>User1 imports the exchange XML documents into Tool1. </p><p style="text-align: justify;">For the case that, during this step, requirement specifications are newly created in Tool1, see “UC2: Import New Requirement Specifications ” for details. </p><p>For the case that, during this step, existing requirement specifications are updated in Tool1, see “UC3: Update Requirement Specifications ” for details.</p></cell></row></table></div></div><div><head><anchor xml:id="Toc104010"/>7.5	Detailed Use Cases</head><div><head><anchor xml:id="Toc104011"/>7.5.1	Use Case Overview</head><figure><graphic n="1008" width="12.835469444444444cm" height="8.017933333333334cm" url="media/image6.png" rend="inline"/></figure><p><hi rend="bold" style="font-size:9pt">Figure 7.4 - Use Cases for the Requirements Interchange Format</hi></p></div><div><head><anchor xml:id="Toc104012"/>7.5.2	Use Case Specifications</head><p>The template used for specifying the succeeding uses cases document is loosely based on a Use Case template by Alistair Cockburn. </p><p rend="heading 5">UC1: Export Requirement Specifications </p><table rend="rules"><row><cell style="text-align: left;"><hi rend="bold">ID</hi></cell><cell style="text-align: left;"><hi rend="bold">UC-1</hi></cell></row><row><cell style="text-align: left;">Title</cell><cell style="text-align: left;">Export Requirement Specifications</cell></row><row><cell style="text-align: left;" cols="2"><hi rend="bold">CHARACTERISTIC INFORMATION</hi></cell></row><row><cell style="text-align: left;"><hi rend="italic">Goal in Context</hi></cell><cell style="text-align: left;">A user of a requirements authoring tool wants to export requirement specifications and relations between them from the requirements authoring tool to an exchange XML document.</cell></row><row><cell style="text-align: left;"><hi rend="italic">Preconditions</hi></cell><cell style="text-align: justify;">The user has a requirements authoring tool installed. The user has a ReqIF tool installed that is capable of exporting requirement specifications from this requirements authoring tool. The requirement specifications the user wants to export are available in the requirements authoring tool and their contents are accessible by the user. </cell></row><row><cell style="text-align: left;"><hi rend="italic">Success End Condition</hi></cell><cell style="text-align: left;">The requirement specifications the user wanted to be exported have successfully been exported from the requirements authoring tool to an exchange XML document.</cell></row><row><cell style="text-align: left;"><hi rend="italic">Failed End Condition</hi></cell><cell style="text-align: left;">The requirement specifications the user wanted to be exported have not successfully been exported from the requirements authoring tool to an exchange XML document.</cell></row><row><cell style="text-align: left;"><hi rend="italic">Primary Actor</hi></cell><cell style="text-align: left;">The user of a requirements authoring tool.</cell></row><row><cell style="text-align: left;" cols="2"><hi rend="bold">MAIN SUCCESS SCENARIO</hi></cell></row><row><cell style="text-align: left;">Step 1</cell><cell style="text-align: left;">The user uses the ReqIF tool to specify the requirements specifications he wants to export and to request the export of the requirements specifications.</cell></row><row><cell style="text-align: left;">Step 2</cell><cell style="text-align: left;"><p>The ReqIF tool exports each specification to one or several exchange XML documents.  </p><p>The exported exchange XML documents include information about requirements, types, attributes, and (optionally) access policies relations between requirements; the relations may be grouped. </p></cell></row><row><cell style="text-align: left;" cols="2"><hi rend="bold">ALTERNATIVE SCENARIOS</hi></cell></row><row><cell style="text-align: left;">Alternative B: Export Parts of a Specification (Step 1 + Step 2)</cell><cell style="text-align: left;">Instead of exporting complete requirement specifications, a ReqIF tool MAY additionally have the feature to export only parts of a specification. </cell></row></table><p rend="heading 5">UC2: Import New Requirement Specifications </p><table rend="rules"><row><cell style="text-align: left;"><hi rend="bold">ID</hi></cell><cell style="text-align: left;"><hi rend="bold">UC-2</hi></cell></row><row><cell style="text-align: left;">Title</cell><cell style="text-align: left;">Import New Requirement Specifications</cell></row><row><cell style="text-align: left;" cols="2"><hi rend="bold">CHARACTERISTIC INFORMATION</hi></cell></row><row><cell style="text-align: left;"><hi rend="italic">Goal in Context</hi></cell><cell style="text-align: left;">A user of a requirements authoring tool wants to import requirement specifications and relations between them contained in exchange XML documents into a requirements authoring tool.</cell></row><row><cell style="text-align: left;"><hi rend="italic">Preconditions</hi></cell><cell style="text-align: left;">The user has a requirements authoring tool installed. The user has a ReqIF tool installed that is capable of importing requirement specifications from an exchange XML document into this requirements authoring tool. The exchange XML documents to be imported are available to the user. The user has the appropriate access rights in the requirements authoring tool to create new specifications, their contents and relations between requirements. The exchange XML documents have not been imported to the above requirements authoring tool so far.</cell></row><row><cell style="text-align: left;"><hi rend="italic">Success End Condition</hi></cell><cell style="text-align: left;">The requirement specifications the user wanted to be imported have successfully been imported from the exchange XML documents to the requirements authoring tool.</cell></row><row><cell style="text-align: left;"><hi rend="italic">Failed End Condition</hi></cell><cell style="text-align: left;">The requirement specifications the user wanted to be imported have not successfully been imported from the exchange XML documents to the requirements authoring tool.</cell></row><row><cell style="text-align: left;"><hi rend="italic">Primary Actor</hi></cell><cell style="text-align: left;">The user of a requirements authoring tool</cell></row><row><cell style="text-align: left;" cols="2"><hi rend="bold">MAIN SUCCESS SCENARIO</hi></cell></row><row><cell style="text-align: left;">Step 1</cell><cell style="text-align: left;"><p>The user specifies the following information using the ReqIF tool: </p><p>the exchange XML documents he wants to import </p><p>the target location of elements to be created in the requirements authoring tool </p><p style="text-align: justify;">After that, the user requests the import of the exchange XML documents using the ReqIF tool.</p></cell></row><row><cell style="text-align: left;">Step 2</cell><cell style="text-align: left;">The ReqIF tool imports the exchange XML document into the requirements authoring tool.</cell></row><row><cell style="text-align: left;" cols="2"><hi rend="bold">ALTERNATIVE SCENARIOS</hi></cell></row><row><cell style="text-align: left;">- </cell><cell style="text-align: left;"/></row></table><p rend="heading 5">UC3: Update Requirement Specifications </p><table rend="rules"><row><cell style="text-align: left;"><hi rend="bold">ID</hi></cell><cell style="text-align: left;"><hi rend="bold">UC-3</hi></cell></row><row><cell style="text-align: left;">Title</cell><cell style="text-align: left;">Update Requirement Specifications</cell></row><row><cell style="text-align: left;" cols="2"><hi rend="bold">CHARACTERISTIC INFORMATION</hi></cell></row><row><cell style="text-align: left;"><hi rend="italic">Goal in Context</hi></cell><cell style="text-align: left;">A user of a requirements authoring tool wants to import requirement specifications and relations between them contained in exchange XML documents into a requirements authoring tool.</cell></row><row><cell style="text-align: left;"><hi rend="italic">Preconditions</hi></cell><cell style="text-align: left;">The user has a requirements authoring tool installed. The user has a ReqIF tool installed that is capable of importing requirement specifications from an exchange XML document into this requirements authoring tool. The exchange XML documents are available to the user. The user has the appropriate access rights in the requirements authoring tool to update specifications, their contents and relations between requirements. The exchange XML documents have previously been imported to the above requirements authoring tool.</cell></row><row><cell style="text-align: left;"><hi rend="italic">Success End Condition</hi></cell><cell style="text-align: left;">The requirement specifications in the requirements authoring tool that correspond to the specifications contained in the exchange XML document have successfully been updated.</cell></row><row><cell style="text-align: left;"><hi rend="italic">Failed End Condition</hi></cell><cell style="text-align: left;">The requirement specifications in the requirements authoring tool that correspond to the specifications contained in the exchange XML document have successfully been updated.</cell></row><row><cell style="text-align: left;"><hi rend="italic">Primary Actor</hi></cell><cell style="text-align: left;">The user of a requirements authoring tool</cell></row><row><cell style="text-align: left;" cols="2"><hi rend="bold">MAIN SUCCESS SCENARIO</hi></cell></row><row><cell style="text-align: left;">Step 1</cell><cell style="text-align: left;">The user specifies the following information using the ReqIF tool: the exchange XML documents he wants to use as a source for the update the specifications in the requirements authoring tool he wants to update After that, the user requests the update.</cell></row><row><cell style="text-align: left;">Step 2</cell><cell style="text-align: left;">The ReqIF tool merges the existing requirement specifications in the requirements authoring tool with the information from the exchange XML documents. </cell></row><row><cell style="text-align: left;" cols="2"><hi rend="bold">ALTERNATIVE SCENARIOS</hi></cell></row><row><cell style="text-align: left;">- </cell><cell style="text-align: left;"/></row></table><p><hi rend="bold" style="font-size:18pt">8	Abstract Architecture</hi></p><p>Figure 8.1 shows the requirements exchange process, with a particular emphasis on attribute handling.</p><p><hi style="font-size:11pt"><graphic n="1009" width="17.231783333333333cm" height="14.420108333333333cm" url="media/image7.png" rend="inline"/><hi rend="bold" style="font-size:9pt">Figure 8.1 - The requirements exchange process</hi> </hi></p><p>The four activities in the upper left corner, following the start symbol, representing the creation and initial population of the exchange document through export from a requirements authoring tool capable enough to hold the complete requirements specification and all its attributes in original form.</p><table rend="rules"><row><cell style="text-align: left;"><hi rend="bold">Element Name</hi></cell><cell style="text-align: left;"><hi rend="bold">Activity Description</hi></cell></row><row><cell style="text-align: left;">Create Document</cell><cell style="text-align: left;">The exchange XML document is created.</cell></row><row><cell style="text-align: left;"><p>Export Requirements from Tool to </p><p>Document</p></cell><cell style="text-align: left;">The complete requirements specification is exported from the requirements authoring tool. This includes the requirements specification structure, all attributes, and all requirement relationships.</cell></row><row><cell style="text-align: left;">Set isSimplified = false for all Attributes</cell><cell style="text-align: left;">This flag signals that a tool was not able to interpret a formatted attribute value as is (see below). This flag must be cleared for all attribute values during the initial export.</cell></row><row><cell style="text-align: left;">Transfer Document</cell><cell style="text-align: justify;">The exchange XML document is transferred to the next partner in the exchange chain. NOTE: The actual transfer mechanism is out-of-scope of the ReqIF specification.</cell></row></table><p style="text-align: justify;">After the initial population of the exchange document, the exchange process becomes a chain of requirements exchanges. This could be a linear chain of partner organizations, or a “roundtrip” exchange terminating at the originating organization, the process is always the same.</p><table rend="rules"><row><cell style="text-align: left;"><hi rend="bold">Element Name</hi></cell><cell style="text-align: left;"><hi rend="bold">Activity Description</hi></cell></row><row><cell style="text-align: left;">Import Requirements from Document into Tool</cell><cell style="text-align: justify;">The exchange XML document is parsed and the complete requirements specification is imported into the target tool. All attribute values are inspected during this process; this is detailed in the following Loop Fragment. </cell></row></table><p>The following table describes the activities inside the attribute import loop. One loop iteration is performed for each attribute value encountered in the import stream.</p><table rend="rules"><row><cell style="text-align: left;"><hi rend="bold">Element Name</hi></cell><cell style="text-align: left;"><hi rend="bold">Activity Description</hi></cell></row><row><cell style="text-align: left;">Has isSimplified = true</cell><cell style="text-align: justify;">If isSimplified is true for a formatted attribute value, it signals that the previous tool in the exchange chain was unable to handle the attribute value in its original (formatted) form and created a simplified representation instead. </cell></row><row><cell style="text-align: left;">Formatted Attribute?</cell><cell style="text-align: left;">Interpretation deficiencies are only expected and tolerated for formatted attribute values (AttributeValueXHTML elements), therefore formatted attributes are singled out. Other attributes bypass all the following steps.</cell></row><row><cell style="text-align: left;">Understood Formatted Attribute Value</cell><cell style="text-align: left;">An attempt is made to interpret the current formatted attribute value. If the tool is unable to handle the formatted attribute value in its original form for any reason, special processing, as described in the following three rows, is required. If the formatted attribute value is understood, the following three rows are skipped. </cell></row><row><cell style="text-align: left;">Remember Original Attribute Value</cell><cell style="text-align: justify;"><p style="text-align: justify;">The formatted attribute value contained in the exchange document needs to be preserved, as information may get lost during the import of the attribute value. </p><p>This is done by copying theValue to the OriginalValue.</p></cell></row><row><cell style="text-align: left;">Create Simplified Attribute Representation</cell><cell style="text-align: left;">Dependent on the formatted attribute value and on the experienced capability mismatch, the importing tool must create a suitable simplified attribute representation that can be presented to the tool user. </cell></row><row><cell style="text-align: left;">Remember Attribute Value as Simplified</cell><cell style="text-align: justify;"><p style="text-align: justify;">If simplified representations of attribute values are imported or newly created, they need to be marked so that they get exported with isSimplified set to true.</p><p>This signals to the following importer in the exchange chain that the tool was unable to interpret the formatted attribute value in its original form. </p></cell></row><row><cell style="text-align: left;">Notify User or Tool [send event] </cell><cell style="text-align: left;">If the previous tool in the exchange chain was unable to handle the attribute value in its original (formatted) form, this event alerts the user or tool about the potential information loss that previously occurred.</cell></row><row><cell style="text-align: left;">Import Simplified Attribute Value ?</cell><cell style="text-align: justify;"><p style="text-align: justify;">A decision is made whether attribute values are imported in their simplified form.  </p><p>INFORMATIVE NOTE: This decision may for example be based on a configuration setting. Importing the simplified attribute representations is especially interesting for point-to-point exchanges between two human users of requirement authoring tools, where the sender needs to know what has actually been received. For automatic exchanges between tools, keeping the original attribute value may be the better option.</p></cell></row><row><cell style="text-align: left;">Restore Original Attribute Value</cell><cell style="text-align: left;">This restores the original attribute value from step Remember Original Attribute Value. This is done by copying theOriginalValue to theValue.</cell></row><row><cell style="text-align: left;">Remember Attribute Value as Not Simplified</cell><cell style="text-align: left;">This is the alternate path for all attributes other than formatted attributes, and for formatted attributes understood in their original form. </cell></row><row><cell style="text-align: left;">Provide Attribute to Importing Tool</cell><cell style="text-align: left;">This is the final step in the attribute interpretation loop.</cell></row></table><p>After the importing requirements authoring tool finished its processing on the imported requirements specification, the exchange chain may end by simple termination without further action on the exchange document, or the requirements specification in its processed form may be re-exported. The following table describes this export process.</p><table rend="rules"><row><cell style="text-align: left;"><hi rend="bold">Element Name</hi></cell><cell style="text-align: left;"><hi rend="bold">Action Description</hi></cell></row><row><cell style="text-align: left;"><p>Export Requirements from Tool to </p><p>Document</p></cell><cell style="text-align: left;">The complete requirements specification, including all attributes, structure, and relationships is serialized into the exchange XML document. All formatted attribute values remembered as simplified during import must be exported with isSimplified set to true, all other attribute values must be exported with isSimplified set to false. </cell></row><row><cell style="text-align: left;">Transfer Document</cell><cell style="text-align: left;">This transfers the exchange document to the follow-on importer, closing the process loop.</cell></row></table><p><hi rend="bold">24</hi>	<hi style="font-size:9pt" xml:space="preserve">                Requirements Interchange Format (ReqIF), v1.2</hi></p><list rend="numbered"><item><hi rend="bold" style="font-size:18pt">Exchange Document Structure</hi><list rend="numbered"><item><hi rend="bold" style="font-size:14pt">General</hi></item></list></item></list><p>This clause defines the top-level structure of a ReqIF Exchange Document, consisting of a header, the core content, and optionally of one or more tool-specific content extensions. These document elements are enclosed by the ReqIF root element. See 9.2 for detailed definition of the content elements.</p><figure><graphic n="10010" width="12.649202777777777cm" height="7.814733333333334cm" url="media/image8.png" rend="inline"/></figure><p><hi rend="bold" style="font-size:9pt">Figure 9.1 - ReqIF Document Structure</hi></p><list rend="numbered"><item><hi rend="bold" style="font-size:14pt">Class Descriptions</hi></item></list><div><head>9.2.1	ReqIF</head><p style="text-align: justify;"><hi rend="bold">Package:</hi> ReqIF <hi rend="bold">isAbstract:</hi> No <hi rend="bold" xml:space="preserve">Generalization: </hi> none</p><p style="text-align: justify;"><hi rend="bold">Description</hi></p><p>This class constitutes the root element of the Exchange Document.</p><p><hi rend="bold" xml:space="preserve">Attributes </hi>• 	lang : xml::lang [0..1] </p><p>Default language encoding of the Exchange XML Document content. The format is defined by the standard for specifying languages in XML documents proposed by the W3C. See <hi rend="underline color(0000FF)">http://www.w3.org/TR/xml11/#sec-lang-tag</hi></p><p style="text-align: justify;"><hi rend="bold">Associations</hi></p><list rend="bulleted"><item>coreContent : ReqIFContent [1] {composite} </item></list><p>This composition links the mandatory Exchange Document content.</p><list rend="bulleted"><item>theHeader : ReqIFHeader [1] {composite} </item></list><p>This composition links the mandatory Exchange Document header, which contains metadata relevant for this exchange. • 	toolExtensions : ReqIFToolExtension [0..*] {composite} </p><p>This composition links optional Exchange Document content based on tool extensions, if such extensions and  content are present.</p><p style="text-align: justify;"><hi rend="bold">Operations</hi></p><p>No operations</p><p style="text-align: justify;"><hi rend="bold">Constraints</hi></p><list rend="numbered"><item>Element ReqIF must be the Exchange Document root element.</item><item>Any ReqIF Exchange Document must at most contain one ReqIF root element.</item></list><p style="text-align: justify;"><hi rend="bold">Tags</hi></p><p>org.omg.reqif.global_element	True org.omg.reqif.ordered	True</p><p style="text-align: justify;"><hi rend="bold">Semantics</hi></p><p>Element ReqIF is the document root element, which encapsulates the whole Exchange Document.</p><p><hi rend="bold" xml:space="preserve">Additional Information </hi>No additional information</p></div><div><head>9.2.2	ReqIFContent</head><p style="text-align: justify;"><hi rend="bold">Description</hi></p><p>This class represents the mandatory content of the Exchange Document. Please refer to sub clause 10.8.35 for the complete class description.</p></div><div><head>9.2.3	ReqIFHeader</head><p style="text-align: justify;"><hi rend="bold">Package:</hi> ReqIF <hi rend="bold">isAbstract:</hi> No <hi rend="bold" xml:space="preserve">Generalization: </hi> none</p><p style="text-align: justify;"><hi rend="bold">Description</hi></p><p>This class holds metadata relevant to the Exchange Document content.</p><p style="text-align: justify;"><hi rend="bold">Attributes</hi></p><list rend="bulleted"><item>comment: string [0..1] </item></list><p>Optional comment associated with the Exchange Document as a whole.</p><list rend="bulleted"><item>creationTime : xsd::dateTime  </item></list><p>Time of creation of the exchange XML document in the format of the XML Schema data type “dateTime” which specifies the time format as <hi rend="italic">CCYY-MM-DDThh:mm:ss</hi> with optional time zone indicator as a suffix <hi rend="italic">±hh:mm</hi>. Example: 2005-03-04T10:24:18+01:00 (MET time zone).</p><list rend="bulleted"><item>identifier : xsd::ID </item></list><p>Unique identifier for whole exchange XML document. The value of the identifier is of the XML Schema data type “xsd::ID” • 	repositoryId : string [0..1] </p><p>Optional unique identifier of the repository containing the requirements that have been exported.  Examples for repositoryID: databaseId, URL.</p><list rend="bulleted"><item>reqIFToolId : string </item></list><p>Identifier of the exporting ReqIF tool.</p><list rend="bulleted"><item>reqIFVersion : string </item></list><p>ReqIF interchange format and protocol version.</p><list rend="bulleted"><item>sourceToolId : string </item></list><p>Identifier of the exporting requirements management tool.</p><list rend="bulleted"><item>title : string </item></list><p>Title of the Exchange Document.</p><p style="text-align: justify;"><hi rend="bold">Associations</hi></p><list rend="bulleted"><item>documentRoot : ReqIF [1] </item></list><p>Linking back to the Exchange Document root element.</p><p style="text-align: justify;"><hi rend="bold">Operations</hi></p><p>No operations</p><p style="text-align: justify;"><hi rend="bold">Constraints</hi></p><p>[1] The value of attribute reqIFVersion must be “1.0.”</p><p style="text-align: justify;"><hi rend="bold">Tags</hi></p><table rend="rules"><row><cell style="text-align: left;">org.omg.reqif.order </cell><cell style="text-align: left;">1</cell></row><row><cell style="text-align: left;">org.omg.reqif.xsd_element</cell><cell style="text-align: justify;">“comment,” “creationTime,” “repositoryId,” “reqIFToolId,” “reqIFVersion,”  “sourceToolId,” “title”</cell></row><row><cell style="text-align: left;">org.omg.reqif.fixed</cell><cell style="text-align: left;">“reqIFVersion”</cell></row></table><p style="text-align: justify;"><hi rend="bold">Semantics</hi></p><p>Metainformation held in the ReqIFHeader element is applicable to the Exchange Document as a whole.</p><p style="text-align: justify;"><hi rend="bold">Additional Information</hi></p><p>No additional information</p></div><div><head>9.2.4	ReqIFToolExtension</head><p><hi rend="bold">Package:</hi> ReqIF <hi rend="bold">isAbstract:</hi> No <hi rend="bold">Generalization: none</hi> </p><p style="text-align: justify;"><hi rend="bold">Description</hi></p><p>This class allows the optional inclusion of tool-specific information into the Exchange Document.</p><p style="text-align: justify;"><hi rend="bold">Attributes</hi></p><p>No attributes</p><p style="text-align: justify;"><hi rend="bold">Associations</hi></p><p>• 	documentRoot : ReqIF [1] </p><p>Linking back to the Exchange Document root element.</p><p style="text-align: justify;"><hi rend="bold">Operations</hi></p><p>No operations</p><p style="text-align: justify;"><hi rend="bold">Constraints</hi></p><p>No constraints</p><p style="text-align: justify;"><hi rend="bold">Tags</hi></p><p>org.omg.reqif.order	3 </p><p>org.omg.reqif.processContents	lax</p><p style="text-align: justify;"><hi rend="bold">Semantics</hi></p><p>ReqIFToolExtension elements may be used to exchange requirements authoring tool specific concepts for which no ReqIF information types are applicable.</p><p>As an example, a ReqIFToolExtention element can be used to represent instances of the View type found in requirements authoring tools, as there is no ReqIF information type defined for the concept of a View.</p><p style="text-align: justify;"><hi rend="bold">Additional Information</hi></p><p>As format, type, and content of information transferred in ReqIFToolExtension is not specified, preservation and/or correct interpretation of this information cannot be guaranteed if: </p><list rend="bulleted"><item>different ReqIF tools are used for export and import, or </item><item>different requirements authoring tools are used as source and target for the exchange.</item><item><hi rend="bold" style="font-size:18pt">Exchange Document Content</hi><list rend="numbered"><item><hi rend="bold" style="font-size:14pt">Overview</hi></item></list></item></list><p>Figure 10.1 provides an overview of the information types aggregated by a ReqIFContent element.</p><p><hi style="font-size:11pt"><graphic n="10011" width="17.031063888888887cm" height="3.96455cm" url="media/image9.png" rend="inline"/><hi rend="italic bold" style="font-size:5.5pt">DatatypeDefinitionSpecType</hi><hi rend="bold" style="font-size:5.5pt">SpecObjectSpecRelationSpecificationReqIFContentRelationGroup</hi><hi style="font-size:5.5pt">+specifications0..*+coreContent1+specRelations0..*+coreContent1+specObjects0..*+coreContent1+specTypes0..*+coreContent1+datatypes0..*+coreContent1+specRelationGroups0..*coreContent1+</hi></hi></p><p><hi rend="bold" style="font-size:9pt">Figure 10.1 - Exchange Document core content</hi></p><list rend="numbered"><item><hi rend="bold" style="font-size:14pt">Identification of Elements</hi></item></list><p style="text-align: justify;">Information elements in an Exchange Document are distinguished through global unique identifiers (Identifiable elements), which are assigned during the creation of the information element. After assignment, these identifiers must not be altered during the lifetime of the information element, nor reused for any different information element. These identifiers allow the unique identification of information elements, even across several exchange documents.</p><p>Using these identifiers, elements of the specification that have been modified in a requirements authoring tool of an exchange partner can be updated in the requirements authoring tool where they had originally been created. In cases where a tool is unable to handle the original element identifiers, the original identifier may be complemented with a toolspecific alternative identifier (AlternativeID element).</p><figure><graphic n="10012" width="13.0556cm" height="3.5052cm" url="media/image21.png" rend="inline"/></figure><p><hi rend="bold" style="font-size:9pt">Figure 10.2 – Primary and alternative identifier</hi></p><list rend="numbered"><item><hi rend="bold" style="font-size:14pt">Specifications, Requirements, and Attributes</hi></item></list><p style="text-align: justify;">A key concept of ReqIF is the specification (Specification element), which acts as a container for the individual requirements (SpecObject elements). SpecObject elements constitute individually identifiable requirements. Apart from the information inherited from Identifiable, an instance of SpecObject is “empty” by itself and therefore contains no data. </p><p style="text-align: justify;">Requirements can have attributes to represent requirement related information kept in the requirement authoring tool. Typically, a set of requirements shares the same attributes. For example: all requirements in a certain set have a “priority”-attribute and a “status”-attribute. What is actually shared among the requirements is the requirement attribute definitions (the number of attributes, the names of the attributes, the default values for the attributes, and the datatypes of the attributes.) In contrast to that, the value of a certain attribute may vary among the requirements in the set.</p><p style="text-align: justify;">Therefore, ReqIF differs between the attribute definitions (AttributeDefinition elements) and the attribute values  (AttributeValue elements) of a requirement. Several attribute definitions can be attached to a requirement by using a type (SpecType element). </p><p>In ReqIF, the concept of having attributes also expands to relations between requirements (SpecRelation elements), to requirement specifications (Specification elements), and to groups of relations (RelationGroup elements).</p><figure><graphic n="10013" width="15.73953611111111cm" height="9.152466666666667cm" url="media/image22.png" rend="inline"/></figure><p><hi rend="bold" style="font-size:9pt">Figure 10.3 - Specification (Specificification), requirement (SpecObject), requirement relation (SpecRelation), relation group (RelationGroup) and associated attributes (AttributeDefinition, AttributeValue)</hi></p><p>The information type AttributeDefinition is an abstract super-class for attribute definitions. </p><p><hi style="font-size:11pt"><graphic n="10014" width="15.229530555555556cm" height="7.249708333333333cm" url="media/image23.png" rend="inline"/><hi rend="italic bold" style="font-size:6pt">AttributeDefinitionAttributeDefinitionSimple</hi><hi rend="bold" style="font-size:6pt">AttributeDefinitionEnumeration</hi><hi rend="color(8b0000)" style="font-size:6pt">multiValued:  boolean +</hi><hi rend="bold" style="font-size:6pt">AttributeDefinitionXHTMLAttributeDefinitionBooleanAttributeDefinitionDateAttributeDefinitionIntegerAttributeDefinitionRealAttributeDefinitionString</hi></hi></p><p><hi rend="bold" style="font-size:9pt">Figure 10.4 - AttributeDefinition class hierarchy</hi></p><p>The information type AttributeValue is an abstract superclass for attribute values. There is one concrete AttributeValue information type for each concrete (direct or indirect) subclass of AttributeDefinition.</p><p><hi style="font-size:11pt"><hi style="color:red; font-size: 14pt; font-weight:bold;" rend="ERROR">�</hi><note place="margin" type="conversion" resp="#teitodocx"><hi rend="docxError">unable to handle picture here, no embed or link</hi></note><hi rend="italic bold" style="font-size:6pt">AttributeValueSimple</hi><hi rend="bold" style="font-size:6pt">AttributeValueBoolean</hi> <hi rend="color(8b0000)" style="font-size:6pt">+theValue:  boolean</hi><hi rend="bold" style="font-size:6pt">AttributeValueString</hi><hi rend="color(8b0000)" style="font-size:6pt">+theValue:  string</hi> <hi rend="bold" style="font-size:6pt">AttributeValueDate</hi> <hi rend="color(8b0000)" style="font-size:6pt">+theValue:  dateTime</hi><hi rend="bold" style="font-size:6pt">AttributeValueInteger</hi><hi rend="color(8b0000)" style="font-size:6pt">theValue:  integer +</hi><hi rend="bold" style="font-size:6pt">AttributeValueReal</hi><hi rend="color(8b0000)" style="font-size:6pt">theValue:  float+</hi> <hi rend="italic bold" style="font-size:6pt">AttributeValue</hi><hi rend="bold" style="font-size:6pt">AttributeValueXHTML</hi> <hi rend="color(8b0000)" style="font-size:6pt">+isSimplified:  boolean [0..1]</hi><hi rend="bold" style="font-size:6pt">AttributeValueEnumeration</hi></hi></p><p><hi rend="bold" style="font-size:9pt">Figure 10.5 - AttributeValue class hierarchy</hi></p><p><hi rend="bold" style="font-size:14pt">10.4	Hierarchical Structuring of Requirements in a Specification and Requirement Relations</hi></p><p>Two requirements may have a relation to each other, for example to establish traceability between a Customer </p><p>Requirements Specification and a System Requirements Specification. Having a relation is represented by an association of one SpecRelation element to two SpecObject elements, one being the source, one the target of the relation.</p><p style="text-align: justify;">The two specifications that are related to each other (in the above example: a Customer Requirements Specification and a System Requirements Specification) are referred to by the sourceSpecification and targetSpecification association of a RelationGroup instance.</p><p>The hierarchical structure of a requirement specification is represented by SpecHierarchy elements. </p><p><hi style="font-size:11pt"><graphic n="10016" width="15.830552777777777cm" height="7.2793cm" url="media/image31.png" rend="inline"/><hi rend="italic bold" style="font-size:7pt">SpecElementWithAttributes</hi><hi rend="bold" style="font-size:7pt">SpecObjectSpecificationSpecRelationSpecHierarchy</hi> <hi rend="color(8b0000)" style="font-size:7pt">isTableInternal:  boolean [0..1]+</hi><hi style="font-size:7pt">0..*«global»target+10..*«global»source+1+children * {ordered}parent+0..1+children* {ordered}+root0..10..*object+1</hi></hi></p><p><hi rend="bold" style="font-size:9pt">Figure 10.6 - Requirements, requirement relations and how requirements are structured hierarchically in a  specification</hi></p><p><hi style="font-size:11pt"><graphic n="10017" width="15.980927777777778cm" height="5.5372055555555555cm" url="media/image35.png" rend="inline"/><hi rend="bold" style="font-size:6.5pt">SpecRelationRelationGroupRelationGroupTypeSpecification</hi><hi style="font-size:6.5pt">+specRelations*0..*+type1sourceSpecification+1+targetSpecification1</hi></hi></p><p><hi rend="bold" style="font-size:9pt">Figure 10.7 - Grouping relations by the source and target specification they relate</hi></p><p><hi rend="bold" style="font-size:14pt">10.5	Representing Attribute Data Types</hi></p></div><div><head>10.5.1 Representing Data Types</head><p>In ReqIF, there are three kinds of data types:</p><list rend="numbered"><item>Simple data types (i.e., Integer, Date, Real, Boolean, String)</item><item>A data type for enumeration values.</item><item>A data type for formatted content. This data type can also be used to reference external objects (for example, pictures from within formatted content).</item></list><p style="text-align: justify;">The abstract super-class for the three kinds of data types is DatatypeDefinition. The classes of data types are displayed in Figure 10.8. Concrete information types for simple data type definitions inherit from the information type DatatypeDefinitionSimple.</p><p><hi style="font-size:11pt"><graphic n="10018" width="14.482255555555556cm" height="3.985688888888889cm" url="media/image39.png" rend="inline"/><hi rend="italic bold" style="font-size:6pt">DatatypeDefinitionDatatypeDefinitionSimple</hi><hi rend="bold" style="font-size:6pt">DatatypeDefinitionEnumerationDatatypeDefinitionXHTML</hi></hi></p><p><hi rend="bold" style="font-size:9pt">Figure 10.8 - DatatypeDefinition class hierarchy</hi></p></div><div><head>10.5.2 Relating Attributes to Data Types</head><p>Each concrete attribute value that is created in a requirements authoring tool needs to be valid against its related data type. For example: the value of a “priority”-attribute may need to be an integer number, while the value for a “status”attribute may need to be picked from a list of choices.</p><p>In ReqIF, each attribute value (AttributeValue element) is related to its data type (DatatypeDefinition element) via an attribute definition (AttributeDefinition element). </p><p style="text-align: justify;">A concrete AttributeDefinition element MAY contain a default value that represents the value that is used if no attribute value is supplied by the user of the requirements authoring tool. For example, a user of a requirements authoring tool may specify that the value “TBD” is used for the “status”-attribute of all requirements that have not been assigned a “status” so far.</p><figure><graphic n="10019" width="16.8656cm" height="12.801602777777777cm" url="media/image43.png" rend="inline"/></figure><p><hi rend="bold" style="font-size:9pt">Figure 10.9 - The ReqIF data types and their relations</hi></p><p><hi rend="bold" style="font-size:14pt">10.6	Concrete Data Types</hi></p></div><div><head>10.6.1 Simple Data Types</head><p>The following diagram shows the primitive data types that are supported by ReqIF.</p><p><hi style="font-size:11pt"><graphic n="10020" width="13.176833333333333cm" height="6.280222222222222cm" url="media/image44.png" rend="inline"/><hi rend="italic bold" style="font-size:5.5pt">DatatypeDefinitionSimple</hi><hi rend="bold" style="font-size:5.5pt">DatatypeDefinitionString</hi> <hi rend="color(8b0000)" style="font-size:5.5pt">+maxLength:  integer</hi><hi rend="bold" style="font-size:5.5pt">DatatypeDefinitionReal</hi><hi rend="color(8b0000)" style="font-size:5.5pt">+accuracy:  integer + max:  float+min:  float</hi> <hi rend="bold" style="font-size:5.5pt">DatatypeDefinitionBooleanDatatypeDefinitionInteger</hi> <hi rend="color(8b0000)" style="font-size:5.5pt">max:  integer++ min:  integer</hi><hi rend="bold" style="font-size:5.5pt">DatatypeDefinitionDate</hi></hi></p><p><hi rend="bold" style="font-size:9pt">Figure 10.10 - Simple data types</hi></p></div><div><head>10.6.2 Enumeration Data Type</head><p>The following diagram shows the enumeration data type that is supported by ReqIF. </p><p><hi style="font-size:11pt"><hi style="color:red; font-size: 14pt; font-weight:bold;" rend="ERROR">�</hi><note place="margin" type="conversion" resp="#teitodocx"><hi rend="docxError">unable to handle picture here, no embed or link</hi></note><hi rend="bold" style="font-size:5.5pt">DatatypeDefinitionEnumerationAttributeDefinitionEnumeration</hi><hi rend="color(8b0000)" style="font-size:5.5pt">multiValued:  boolean +</hi><hi rend="bold" style="font-size:5.5pt">AttributeValueEnumerationEnumValueEmbeddedValue</hi><hi rend="color(8b0000)" style="font-size:5.5pt">+key:  integer +otherContent:  string</hi> <hi style="font-size:5.5pt">+1properties+enumValue1+specifiedValues* {ordered}10..*+values*defaultValue+0..1+owningDefinition10..*+definition10..*+type1</hi></hi></p><p><hi rend="bold" style="font-size:9pt">Figure 10.11 - Enumeration data types</hi></p></div><div><head>10.6.3 Data Type for XHTML Content</head><p>There are two main functionalities of ReqIF that are realized through XHTML:</p><list rend="numbered"><item>Storing of formatted text. </item></list><p>Requirement authoring tools support (among other things) the use of bold, italic, underlined, and strikethrough text, bullet points, and numbering in attribute values of requirements. Re-using XHTML is a pragmatic approach to represent this formatted text in exchange documents.</p><list rend="numbered"><item>Inclusion of objects that are external to the exchange XML document in the requirements authoring tool. The objects may have binary content.</item></list><p>Furthermore, as requirements authoring tools and ReqIF tools have different capabilities, information may be lost during the exchange process (3.)</p><p>Please note that instances of AttributeValueXHTML are in principle wrappers for an XHTML document that is embedded into the exchange XML document. </p><p>The embedded XHTML document is modeled as a ReqIF information element XhtmlContent, as shown in Figure 10.12. XhtmlContent switches the XML namespace to the standard XHTML namespace <hi rend="underline color(0000FF)">http://www.w3.org/1999/xhtml</hi><hi rend="color(0000FF)">.</hi></p><p>Separating the XML namespaces allows validating against different XML-Schemas (i.e., against the ReqIF-Schema and against an XHTML-Schema) resulting in more independency between the different XML-Schemas.</p><p><hi style="font-size:11pt"><graphic n="10022" width="16.62443888888889cm" height="4.688430555555556cm" url="media/image50.png" rend="inline"/><hi rend="bold" style="font-size:6pt">DatatypeDefinitionXHTMLAttributeDefinitionXHTMLAttributeValueXHTML</hi> <hi rend="color(8b0000)" style="font-size:6pt">+isSimplified:  boolean [0..1]</hi><hi rend="bold" style="font-size:6pt">XhtmlContent</hi><hi style="font-size:6pt">theValue+1+attributeValue10..*+definition1+defaultValue0..1+owningDefinition10..*+type1+theOriginalValue0..1+attributeValue1</hi></hi></p><p><hi rend="bold" style="font-size:9pt">Figure 10.12 - Data types for XHTML content</hi></p><p><hi rend="bold" style="font-size:14pt">10.7	Access Restrictions</hi></p><p>For certain information elements, ReqIF allows to specify whether they are editable or read-only by the user of the requirements authoring tool. Having such access restrictions in place supports exchange processes where partners have different rights to modify information.</p><p>There are three cases for which access may be restricted:</p><list rend="numbered"><item>Making subtrees of a specification hierarchy editable or read-only. </item></list><p>A subtree of a specification hierarchy that is editable allows the user to add or remove requirements from/to the subtree. Subtrees of the subtree may override the access settings.</p><list rend="numbered"><item>Making requirement attributes editable or read-only in subtrees of a specification hierarchy. </item></list><p style="text-align: justify;">A set of attributes is editable in a subtree means: the values of the attributes in the set can be edited in that subtree. As a consequence, all attributes that are not in the set are not editable in that subtree. Subtrees of the subtree may override the access settings.</p><list rend="numbered"><item>Making the attribute definition of an attribute editable or read-only. </item></list><p>For example: it shall be possible to make the “status”-attribute definition read-only, meaning that no additional enumeration literal can be added to the “status” attribute’s set of enumeration literals (like “accepted,” “rejected,” etc.)</p><p>See for the classes affected by the access restriction concept, see the class descriptions for details.</p><p><hi style="font-size:11pt"><graphic n="10023" width="16.440819444444443cm" height="8.50766111111111cm" url="media/image54.png" rend="inline"/><hi rend="italic bold" style="font-size:6pt">Identifiable</hi> <hi rend="color(8b0000)" style="font-size:6pt">+desc:  string [0..1] +identifier:  IDlastChange:  dateTime +longName:  string [0..1] +</hi><hi rend="italic bold" style="font-size:6pt">AccessControlledElement</hi> <hi rend="color(8b0000)" style="font-size:6pt">+isEditable:  boolean [0..1]</hi><hi rend="bold" style="font-size:6pt">SpecHierarchy</hi><hi rend="color(8b0000)" style="font-size:6pt">isTableInternal:  boolean [0..1]+</hi> <hi rend="italic bold" style="font-size:6pt">AttributeDefinition</hi><hi style="font-size:6pt">1+editableAtts*}+children * {ordered+parent 0..1</hi></hi></p><p><hi rend="bold" style="font-size:9pt">Figure 10.13 - Access Restrictions</hi></p><p><hi rend="bold" style="font-size:14pt">10.8	Class Descriptions</hi></p></div><div><head>10.8.1 AccessControlledElement</head><p style="text-align: justify;"><hi rend="bold">Package:</hi> ReqIF <hi rend="bold">isAbstract:</hi> Yes</p><p style="text-align: justify;"><hi rend="bold" xml:space="preserve">Generalization: </hi> Identifiable</p><p style="text-align: justify;"><hi rend="bold">Description</hi></p><p>Base class for classes that may restrict user access to their information.</p><p style="text-align: justify;"><hi rend="bold">Attributes</hi></p><p>• 	isEditable: Boolean[0..1] </p><p><hi style="font-family:Courier New">True</hi> means that the element’s contents may be modified by the user of a tool containing the element.  </p><p><hi style="font-family:Courier New">False</hi> or leaving isEditable out means that the element is read-only to the user of a tool containing the element.</p><p style="text-align: justify;"><hi rend="bold">Associations</hi></p><p style="text-align: justify;"><hi rend="bold">Operations</hi></p><p>No operations</p><p style="text-align: justify;"><hi rend="bold">Constraints</hi></p><p>No constraints</p><p style="text-align: justify;"><hi rend="bold">Tags</hi></p><p>No tags</p><p style="text-align: justify;"><hi rend="bold">Semantics</hi></p><p>For certain information elements, ReqIF allows to specify whether they are editable or read-only by the user of the tool containing them. Having such access restrictions in place supports exchange processes where partners have different rights to modify information.</p><p>Sub classes of AccessControlledElement may detail the semantics of “being editable” in their context.</p><p><hi rend="bold" xml:space="preserve">Additional Information </hi>No additional information</p></div><div><head>10.8.2 AlternativeID</head><p style="text-align: justify;"><hi rend="bold">Package:</hi> ReqIF <hi rend="bold">isAbstract:</hi> No <hi rend="bold" xml:space="preserve">Generalization: </hi> none</p><p style="text-align: justify;"><hi rend="bold">Description</hi></p><p>Used to provide an alternative, tool-specific identification.</p><p style="text-align: justify;"><hi rend="bold">Attributes</hi></p><list rend="bulleted"><item>identifier: string[1] </item></list><p style="text-align: right;">An optional alternative identifier, which may be a requirements management tool identifier or ReqIF tool identifier.</p><p style="text-align: justify;"><hi rend="bold">Associations</hi></p><list rend="bulleted"><item>ident : Identifiable </item></list><p>Back linkage to the owning Identifiable.</p><p style="text-align: justify;"><hi rend="bold">Operations</hi></p><p>No operations</p><p style="text-align: justify;"><hi rend="bold">Constraints</hi></p><p>[1] The value of AlternativeID::identifier shall be globally unique.</p><p style="text-align: justify;"><hi rend="bold">Tags</hi></p><p>No tags</p><p style="text-align: justify;"><hi rend="bold">Semantics</hi></p><p>In cases where Identifiable::identifier cannot be handled by a requirements authoring tool or ReqIF tool for any reason, an <hi rend="bold" style="font-size:9pt">AlternativeID</hi> may be associated to provide a tool-consumable alternative identification. </p><p style="text-align: justify;"><hi rend="bold">Additional Information</hi></p><p>No additional information</p></div><div><head>10.8.3 AttributeDefinition</head><p style="text-align: justify;"><hi rend="bold">Package:</hi> ReqIF <hi rend="bold">isAbstract:</hi> Yes</p><p><hi rend="bold" xml:space="preserve">Generalization: </hi> AccessControlledElement</p><p style="text-align: justify;"><hi rend="bold">Description</hi></p><p>Base class for attribute definitions.</p><p style="text-align: justify;"><hi rend="bold">Attributes</hi></p><p>No attributes</p><p style="text-align: justify;"><hi rend="bold">Associations</hi></p><p>• 	specType : SpecType [1] </p><p>Back linkage to the owning SpecType.</p><p style="text-align: justify;"><hi rend="bold">Operations</hi></p><p>No operations</p><p style="text-align: justify;"><hi rend="bold">Constraints</hi></p><p>[1] The attribute longName inherited from Identifiable is mandatory for all sub classes of AttributeDefinition.</p><p style="text-align: justify;"><hi rend="bold">Tags</hi></p><p>No tags</p><p style="text-align: justify;"><hi rend="bold">Semantics</hi></p><p>Base class for Exchange Document content attributes, must be specialized for concrete attributes. </p><p style="text-align: justify;"><hi rend="bold">Additional Information</hi></p><p>No additional information</p></div><div><head>10.8.4 AttributeDefinitionBoolean</head><p style="text-align: justify;"><hi rend="bold">Package:</hi> ReqIF <hi rend="bold">isAbstract:</hi> No</p><p><hi rend="bold" xml:space="preserve">Generalization: </hi>AttributeDefinitionSimple</p><p style="text-align: justify;"><hi rend="bold">Description</hi></p><p>Definition of a boolean attribute.</p><p style="text-align: justify;"><hi rend="bold">Attributes</hi></p><p>No attributes</p><p><hi rend="bold" xml:space="preserve">Associations </hi>• 	defaultValue : AttributeValueBoolean [0..1] {composite} </p><p>Linkage of the owned default value that is used if no attribute value is supplied by the user of the requirements authoring tool.  </p><p>• 	type : DatatypeDefinitionBoolean[1] Reference to the data type</p><p style="text-align: justify;"><hi rend="bold">Operations</hi></p><p>No new operations</p><p style="text-align: justify;"><hi rend="bold">Constraints</hi></p><p>[1]  If the inherited isEditable attribute is set to <hi style="font-family:Courier New">false</hi> or left out, no modification of the default value by tool users is       allowed. </p><p style="text-align: justify;"><hi rend="bold">Tags</hi></p><p>No tags</p><p style="text-align: justify;"><hi rend="bold">Semantics</hi></p><p>Each concrete attribute value that is created in a requirements authoring tool needs to be valid against its related data type. In ReqIF, each attribute value (<hi rend="bold" style="font-size:9pt">AttributeValue</hi> element) is related to its data type (<hi rend="bold" style="font-size:9pt">DatatypeDefinition</hi> element) via an attribute definition (<hi rend="bold" style="font-size:9pt">AttributeDefinition</hi> element). </p><p>An <hi rend="bold" style="font-size:9pt">AttributeDefinitionBoolean</hi> element therefore relates an <hi rend="bold" style="font-size:9pt">AttributeValueBoolean</hi> element to a <hi rend="bold" style="font-size:9pt">DatatypeDefinitionBoolean</hi> element via its type attribute.</p><p>An <hi rend="bold" style="font-size:9pt">AttributeDefinitionBoolean</hi> element MAY contain a default value that represents the value that is used as an attribute value if no attribute value is supplied by the user of the requirements authoring tool.  </p></div><div><head>10.8.5 AttributeDefinitionDate</head><p style="text-align: justify;"><hi rend="bold">Package:</hi> ReqIF <hi rend="bold">isAbstract:</hi> No</p><p><hi rend="bold" xml:space="preserve">Generalization: </hi>AttributeDefinitionSimple</p><p style="text-align: justify;"><hi rend="bold">Description</hi></p><p>Definition of a date and time attribute.</p><p style="text-align: justify;"><hi rend="bold">Attributes</hi></p><p>No attributes</p><p><hi rend="bold" xml:space="preserve">Associations </hi>• 	defaultValue : AttributeValueDate [0..1] {composite} </p><p>Linkage of the owned default value that is used if no attribute value is supplied by the user of the requirements authoring tool.  </p><p>• 	type : DatatypeDefinitionDate[1] Reference to the data type</p><p style="text-align: justify;"><hi rend="bold">Operations</hi></p><p>No new operations</p><p style="text-align: justify;"><hi rend="bold">Constraints</hi></p><p>[1]  If the inherited isEditable attribute is set to <hi style="font-family:Courier New">false</hi> or left out, no modification of the default value by tool users        is allowed. </p><p style="text-align: justify;"><hi rend="bold">Tags</hi></p><p>No tags</p><p style="text-align: justify;"><hi rend="bold">Semantics</hi></p><p>Each concrete attribute value that is created in a requirements authoring tool needs to be valid against its related data type. In ReqIF, each attribute value (<hi rend="bold" style="font-size:9pt">AttributeValue</hi> element) is related to its data type (<hi rend="bold" style="font-size:9pt">DatatypeDefinition</hi> element) via an attribute definition (<hi rend="bold" style="font-size:9pt">AttributeDefinition</hi> element). </p><p>An <hi rend="bold" style="font-size:9pt">AttributeDefinitionDate</hi> element therefore relates an <hi rend="bold" style="font-size:9pt">AttributeValueDate</hi> element to a <hi rend="bold" style="font-size:9pt">DatatypeDefinitionDate</hi> element via its type attribute.</p><p>An <hi rend="bold" style="font-size:9pt">AttributeDefinitionDate</hi> element MAY contain a default value that represents the value that is used as an attribute value if no attribute value is supplied by the user of the requirements authoring tool.  </p></div><div><head>10.8.6 AttributeDefinitionEnumeration</head><p style="text-align: justify;"><hi rend="bold">Package:</hi> ReqIF <hi rend="bold">isAbstract:</hi> No</p><p><hi rend="bold" xml:space="preserve">Generalization: </hi> AttributeDefinition</p><p style="text-align: justify;"><hi rend="bold">Description</hi></p><p>Definition of an enumeration attribute.</p><p><hi rend="bold" xml:space="preserve">Attributes </hi>multiValued : Boolean</p><list rend="bulleted"><item>If set to <hi style="font-family:Courier New">true</hi>, this means that the user of a requirements authoring tool can pick one or more than one of the values in the set of specified values as an enumeration attribute value.</item><item>If set to <hi style="font-family:Courier New">false</hi>, this means that the user of a requirements authoring tool can pick exactly one of the values in the set of specified values as an enumeration attribute value.</item></list><p><hi rend="bold" xml:space="preserve">Associations </hi>• 	defaultValue : AttributeValueEnumeration [0..1] {composite} </p><p>Linkage of the owned default value that is used if no attribute value is supplied by the user of the requirements authoring tool.  </p><list rend="bulleted"><item>type : DatatypeDefinitionEnumeration [1] Reference to the data type for enumerations.</item></list><p style="text-align: justify;"><hi rend="bold">Operations</hi></p><p>No operations</p><p style="text-align: justify;"><hi rend="bold">Constraints</hi></p><p>[1]  If the inherited isEditable attribute is set to <hi style="font-family:Courier New">false</hi> or left out, all of the following constraints apply: </p><list rend="bulleted"><item>no modification of the default value by tool users is allowed.</item><item>no adding, deleting, or modification of enumeration literals by tool users is allowed.</item></list><p style="text-align: justify;"><hi rend="bold">Tags</hi></p><p>No tags</p><p style="text-align: justify;"><hi rend="bold">Semantics</hi></p><p>Each concrete attribute value that is created in a requirements authoring tool needs to be valid against its related data type. In ReqIF, each attribute value (<hi rend="bold" style="font-size:9pt">AttributeValue</hi> element) is related to its data type (<hi rend="bold" style="font-size:9pt">DatatypeDefinition</hi> element) via an attribute definition (<hi rend="bold" style="font-size:9pt">AttributeDefinition</hi> element). </p><p>An <hi rend="bold" style="font-size:9pt">AttributeDefinitionEnumeration</hi> element therefore relates an <hi rend="bold" style="font-size:9pt">AttributeValueEnumeration</hi> element to a <hi rend="bold" style="font-size:9pt">DatatypeDefinitionEnumeration</hi> element via its type attribute.</p><p>An <hi rend="bold" style="font-size:9pt">AttributeDefinitionEnumeration</hi> element MAY contain a default value that represents the value that is used as an attribute value if no attribute value is supplied by the user of the requirements authoring tool.</p><p style="text-align: justify;">There are basically two kinds of enumerations: “single-choice” and “multiple-choice” enumerations. “Single-choice” enumerations allow the user of a requirements authoring tool to pick exactly one value out of a set of specified values. “Multiple-choice” enumerations allow the user of a requirements authoring tool to pick several values out of a set of specified values. For “multiple-choice” enumerations, the multiValued attribute needs to be set to true, for “single-choice” enumerations it needs to be set to false.</p><p>The set of specified values is defined by the <hi rend="bold" style="font-size:9pt">DatatypeDefinitionEnumeration</hi> element that is linked via the type association.</p><p style="text-align: justify;"><hi rend="bold">Additional Information</hi></p><p>No additional information</p></div><div><head>10.8.7 AttributeDefinitionInteger</head><p style="text-align: justify;"><hi rend="bold">Package:</hi> ReqIF <hi rend="bold">isAbstract:</hi> No</p><p><hi rend="bold" xml:space="preserve">Generalization: </hi>AttributeDefinitionSimple</p><p style="text-align: justify;"><hi rend="bold">Description</hi></p><p>Definition of an integer attribute.</p><p style="text-align: justify;"><hi rend="bold">Attributes</hi></p><p>No attributes</p><p><hi rend="bold" xml:space="preserve">Associations </hi>• 	defaultValue : AttributeValueInteger [0..1] {composite} </p><p>Linkage of the owned default value that is used if no attribute value is supplied by the user of the requirements authoring tool.  </p><p>• 	type : DatatypeDefinitionInteger[1] Reference to the data type</p><p style="text-align: justify;"><hi rend="bold">Operations</hi></p><p>No new operations</p><p style="text-align: justify;"><hi rend="bold">Constraints</hi></p><p>[1]  If the inherited isEditable attribute is set to <hi style="font-family:Courier New">false</hi> or left out, no modification of the default value by tool users is       allowed.</p><p style="text-align: justify;"><hi rend="bold">Tags</hi></p><p>No tags</p><p style="text-align: justify;"><hi rend="bold">Semantics</hi></p><p>Each concrete attribute value that is created in a requirements authoring tool needs to be valid against its related data type. In ReqIF, each attribute value (<hi rend="bold" style="font-size:9pt">AttributeValue</hi> element) is related to its data type (<hi rend="bold" style="font-size:9pt">DatatypeDefinition</hi> element) via an attribute definition (<hi rend="bold" style="font-size:9pt">AttributeDefinition</hi> element). </p><p>An <hi rend="bold" style="font-size:9pt">AttributeDefinitionInteger</hi> element therefore relates an <hi rend="bold" style="font-size:9pt">AttributeValueInteger</hi> element to a <hi rend="bold" style="font-size:9pt">DatatypeDefinitionInteger</hi> element via its type attribute.</p><p>An <hi rend="bold" style="font-size:9pt">AttributeDefinitionInteger</hi> element MAY contain a default value that represents the value that is used as an attribute value if no attribute value is supplied by the user of the requirements authoring tool.  </p></div><div><head>10.8.8 AttributeDefinitionReal</head><p style="text-align: justify;"><hi rend="bold">Package:</hi> ReqIF <hi rend="bold">isAbstract:</hi> No</p><p><hi rend="bold" xml:space="preserve">Generalization: </hi>AttributeDefinitionSimple</p><p style="text-align: justify;"><hi rend="bold">Description</hi></p><p>Definition of an attribute with Real data type.</p><p style="text-align: justify;"><hi rend="bold">Attributes</hi></p><p>No attributes</p><p><hi rend="bold" xml:space="preserve">Associations </hi>• 	defaultValue : AttributeValueReal [0..1] {composite} </p><p>Linkage of the owned default value that is used if no attribute value is supplied by the user of the requirements authoring tool.  </p><p>• 	type : DatatypeDefinitionReal[1] Reference to the data type</p><p style="text-align: justify;"><hi rend="bold">Operations</hi></p><p>No new operations</p><p style="text-align: justify;"><hi rend="bold">Constraints</hi></p><p>[1]  If the inherited isEditable attribute is set to <hi style="font-family:Courier New">false</hi> or left out, no modification of the default value by tool users        is allowed.</p><p style="text-align: justify;"><hi rend="bold">Tags</hi></p><p>No tags</p><p style="text-align: justify;"><hi rend="bold">Semantics</hi></p><p>Each concrete attribute value that is created in a requirements authoring tool needs to be valid against its related data type. In ReqIF, each attribute value (<hi rend="bold" style="font-size:9pt">AttributeValue</hi> element) is related to its data type (<hi rend="bold" style="font-size:9pt">DatatypeDefinition</hi> element) via an attribute definition (<hi rend="bold" style="font-size:9pt">AttributeDefinition</hi> element). </p><p>An <hi rend="bold" style="font-size:9pt">AttributeDefinitionReal</hi> element therefore relates an <hi rend="bold" style="font-size:9pt">AttributeValueReal</hi> element to a <hi rend="bold" style="font-size:9pt">DatatypeDefinitionReal</hi> element via its type attribute.</p><p>An <hi rend="bold" style="font-size:9pt">AttributeDefinitionReal</hi> element MAY contain a default value that represents the value that is used as an attribute value if no attribute value is supplied by the user of the requirements authoring tool.  </p></div><div><head>10.8.9 AttributeDefinitionSimple</head><p style="text-align: justify;"><hi rend="bold">Package:</hi> ReqIF <hi rend="bold">isAbstract:</hi> Yes</p><p><hi rend="bold" xml:space="preserve">Generalization: </hi>AttributeDefinition</p><p style="text-align: justify;"><hi rend="bold">Description</hi></p><p>Abstract base class of simple type attributes.</p><p style="text-align: justify;"><hi rend="bold">Attributes</hi></p><p>No attributes</p><p style="text-align: justify;"><hi rend="bold">Associations</hi></p><p>No associations</p><p style="text-align: justify;"><hi rend="bold">Operations</hi></p><p>No new operations</p><p style="text-align: justify;"><hi rend="bold">Constraints</hi></p><p>No constraints</p><p style="text-align: justify;"><hi rend="bold">Tags</hi></p><p>No tags</p><p style="text-align: justify;"><hi rend="bold">Semantics</hi></p><p>Abstract base class of simple type attributes.</p><p style="text-align: justify;"><hi rend="bold">Additional Information</hi></p><p>No additional information</p></div><div><head>10.8.10 AttributeDefinitionString</head><p style="text-align: justify;"><hi rend="bold">Package:</hi> ReqIF <hi rend="bold">isAbstract:</hi> No</p><p><hi rend="bold" xml:space="preserve">Generalization: </hi>AttributeDefinitionSimple</p><p style="text-align: justify;"><hi rend="bold">Description</hi></p><p>Definition of an attribute with string data type.</p><p style="text-align: justify;"><hi rend="bold">Attributes</hi></p><p>No attributes</p><p><hi rend="bold" xml:space="preserve">Associations </hi>• 	defaultValue : AttributeValueString [0..1] {composite} </p><p>Linkage of the owned default value that is used if no attribute value is supplied by the user of the requirements authoring tool.  </p><p>• 	type : DatatypeDefinitionString[1] Reference to the data type</p><p style="text-align: justify;"><hi rend="bold">Operations</hi></p><p>No new operations</p><p style="text-align: justify;"><hi rend="bold">Constraints</hi></p><p>[1]  If the inherited isEditable attribute is set to <hi style="font-family:Courier New">false</hi> or left out, no modification of the default value by tool users        is allowed.</p><p style="text-align: justify;"><hi rend="bold">Tags</hi></p><p>No tags</p><p style="text-align: justify;"><hi rend="bold">Semantics</hi></p><p>Each concrete attribute value that is created in a requirements authoring tool needs to be valid against its related data type. In ReqIF, each attribute value (<hi rend="bold" style="font-size:9pt">AttributeValue</hi> element) is related to its data type (<hi rend="bold" style="font-size:9pt">DatatypeDefinition</hi> element) via an attribute definition (<hi rend="bold" style="font-size:9pt">AttributeDefinition</hi> element). </p><p>An <hi rend="bold" style="font-size:9pt">AttributeDefinitionString</hi> element therefore relates an <hi rend="bold" style="font-size:9pt">AttributeValueString</hi> element to a <hi rend="bold" style="font-size:9pt">DatatypeDefinitionString</hi> element via its type attribute.</p><p>An <hi rend="bold" style="font-size:9pt">AttributeDefinitionString</hi> element MAY contain a default value that represents the value that is used as an attribute value if no attribute value is supplied by the user of the requirements authoring tool.  </p></div><div><head>10.8.11 AttributeDefinitionXHTML</head><p style="text-align: justify;"><hi rend="bold">Package:</hi> ReqIF <hi rend="bold">isAbstract:</hi> No</p><p><hi rend="bold" xml:space="preserve">Generalization: </hi>AttributeDefinition</p><p style="text-align: justify;"><hi rend="bold">Description</hi></p><p>Definition of an XHTML attribute.</p><p style="text-align: justify;"><hi rend="bold">Attributes</hi></p><p>No attributes</p><p><hi rend="bold" xml:space="preserve">Associations </hi>• 	defaultValue : AttributeValueXHTML [0..1] {composite} </p><p>Linkage of the owned default value that is used if no attribute value is supplied by the user of the requirements  authoring tool.  </p><p>• 	type : DatatypeDefinitionXHTML [1] Reference to the data type</p><p style="text-align: justify;"><hi rend="bold">Operations</hi></p><p>No operations</p><p style="text-align: justify;"><hi rend="bold">Constraints</hi></p><p>[1]  If the inherited isEditable attribute is set to <hi style="font-family:Courier New">false</hi> or left out, no modification of the default value by tool users        is allowed.</p><p style="text-align: justify;"><hi rend="bold">Tags</hi></p><p>No tags</p><p style="text-align: justify;"><hi rend="bold">Semantics</hi></p><p>Each concrete attribute value that is created in a requirements authoring tool needs to be valid against its related data type. In ReqIF, each attribute value (<hi rend="bold" style="font-size:9pt">AttributeValue</hi> element) is related to its data type (<hi rend="bold" style="font-size:9pt">DatatypeDefinition</hi> element) via an attribute definition (<hi rend="bold" style="font-size:9pt">AttributeDefinition</hi> element). </p><p>An <hi rend="bold" style="font-size:9pt">AttributeDefinitionXHTML</hi> element therefore relates an <hi rend="bold" style="font-size:9pt">AttributeValueXHTML</hi> element to a <hi rend="bold" style="font-size:9pt">DatatypeDefinitionXHTML</hi> element via its type attribute.</p><p>An <hi rend="bold" style="font-size:9pt">AttributeDefinitionXHTML</hi> element MAY contain a default value that represents the value that is used as an attribute value if no attribute value is supplied by the user of the requirements authoring tool.  </p><p style="text-align: justify;"><hi rend="bold">Additional Information</hi></p><p>No additional information.</p></div><div><head>10.8.12 AttributeValue</head><p style="text-align: justify;"><hi rend="bold">Package:</hi> ReqIF <hi rend="bold">isAbstract:</hi> Yes <hi rend="bold" xml:space="preserve">Generalization: </hi> None</p><p style="text-align: justify;"><hi rend="bold">Description</hi></p><p>Base class for concrete attribute values.</p><p style="text-align: justify;"><hi rend="bold">Attributes</hi></p><p>No attributes</p><p style="text-align: justify;"><hi rend="bold">Associations</hi></p><p>• 	specElAt : SpecElementWithAttributes [1] </p><p>The linkage between AttributeValue and the owning class SpecElementWithAttributes</p><p style="text-align: justify;"><hi rend="bold">Operations</hi></p><p>No operations</p><p style="text-align: justify;"><hi rend="bold">Constraints</hi></p><p>No constraints</p><p style="text-align: justify;"><hi rend="bold">Tags</hi></p><p>No tags</p><p style="text-align: justify;"><hi rend="bold">Semantics</hi></p><p>This is the base class for all concrete classes that represent attribute values of requirements authoring tools.</p><p style="text-align: justify;"><hi rend="bold">Additional Information</hi></p><p>No additional information</p></div><div><head>10.8.13 AttributeValueBoolean</head><p style="text-align: justify;"><hi rend="bold">Package:</hi> ReqIF <hi rend="bold">isAbstract:</hi> No</p><p><hi rend="bold" xml:space="preserve">Generalization: </hi>AttributeValueSimple</p><p style="text-align: justify;"><hi rend="bold">Description</hi></p><p>A boolean attribute value.</p><p style="text-align: justify;"><hi rend="bold">Attributes</hi></p><list rend="bulleted"><item>theValue : Boolean </item></list><p>The attribute value.</p><p style="text-align: justify;"><hi rend="bold">Associations</hi></p><list rend="bulleted"><item>definition : AttributeDefinitionBoolean [1] Reference to the value definition.</item><item>owningDefinition : AttributeDefinitionBoolean [1] </item></list><p style="text-align: right;">Back linkage of the owning attribute definition</p><p style="text-align: justify;"><hi rend="bold">Operations</hi></p><p>No new operations</p><p style="text-align: justify;"><hi rend="bold">Constraints</hi></p><p>No constraints</p><p style="text-align: justify;"><hi rend="bold">Tags</hi></p><p>No tags</p><p style="text-align: justify;"><hi rend="bold">Semantics</hi></p><p>Contains a boolean attribute value.</p><p><hi rend="bold" xml:space="preserve">Additional Information </hi>No additional information</p></div><div><head>10.8.14 AttributeValueDate</head><p style="text-align: justify;"><hi rend="bold">Package:</hi> ReqIF <hi rend="bold">isAbstract:</hi> No</p><p><hi rend="bold" xml:space="preserve">Generalization: </hi>AttributeValueSimple</p><p style="text-align: justify;"><hi rend="bold">Description</hi></p><p>A date/time attribute value.</p><p style="text-align: justify;"><hi rend="bold">Attributes</hi></p><list rend="bulleted"><item>theValue : xsd::dateTime The attribute value</item></list><p style="text-align: justify;"><hi rend="bold">Associations</hi></p><list rend="bulleted"><item>definition : AttributeDefinitionDate [1] Reference to the value definition</item><item>owningDefinition : AttributeDefinitionDate [1] Back linkage of the owning attribute definition</item></list><p style="text-align: justify;"><hi rend="bold">Operations</hi></p><p>No new operations</p><p style="text-align: justify;"><hi rend="bold">Constraints</hi></p><p>No constraints</p><p style="text-align: justify;"><hi rend="bold">Tags</hi></p><p>No tags</p><p style="text-align: justify;"><hi rend="bold">Semantics</hi></p><p>Contains a date/time attribute value.</p><p style="text-align: justify;"><hi rend="bold">Additional Information</hi></p><p>No additional information</p></div><div><head>10.8.15 AttributeValueEnumeration</head><p style="text-align: justify;"><hi rend="bold">Package:</hi> ReqIF <hi rend="bold">isAbstract:</hi> No</p><p style="text-align: justify;"><hi rend="bold" xml:space="preserve">Generalization: </hi> AttributeValue</p><p style="text-align: justify;"><hi rend="bold">Description</hi></p><p>Definition of an enumeration attribute value.</p><p style="text-align: justify;"><hi rend="bold">Attributes</hi></p><p style="text-align: justify;"><hi rend="bold">Associations</hi></p><list rend="bulleted"><item>definition : AttributeDefinitionEnumeration [1] </item></list><p>Reference to the attribute definition that relates the value to its data type.</p><list rend="bulleted"><item>owningDefinition : AttributeDefinitionEnumeration [1] Back linkage of the owning attribute definition</item><item>values : EnumValue [*] </item></list><p>Reference to the enumeration values that are chosen from a set of specified values.</p><p style="text-align: justify;"><hi rend="bold">Operations</hi></p><p>No operations</p><p style="text-align: justify;"><hi rend="bold">Constraints</hi></p><list rend="numbered"><item>If the multiValued attribute of the AttributeValueEnumeration element referenced by the definition association is        set to <hi style="font-family:Courier New">false</hi>, the values set must contain at most one value.</item><item>Each value referenced by the values association must be contained in the specifiedValues set of the related       DatatypeDefinitionEnumeration element.</item></list><p>NOTE: The definition association references an AttributeDefinitionEnumeration element that in turn references the DatatypeDefinitionEnumeration element mentioned above.</p><p style="text-align: justify;"><hi rend="bold">Tags</hi></p><p>No tags</p><p style="text-align: justify;"><hi rend="bold">Semantics</hi></p><p>Provides a link to the concrete literals of an enumeration. </p><p style="text-align: justify;"><hi rend="bold">Additional Information</hi></p><p>No additional information</p></div><div><head>10.8.16 AttributeValueInteger</head><p style="text-align: justify;"><hi rend="bold">Package:</hi> ReqIF <hi rend="bold">isAbstract:</hi> No</p><p><hi rend="bold" xml:space="preserve">Generalization: </hi>AttributeValueSimple</p><p style="text-align: justify;"><hi rend="bold">Description</hi></p><p>An integer attribute value.</p><p style="text-align: justify;"><hi rend="bold">Attributes</hi></p><list rend="bulleted"><item>theValue : integer The attribute value</item></list><p style="text-align: justify;"><hi rend="bold">Associations</hi></p><list rend="bulleted"><item>definition : AttributeDefinitionInteger [1] Reference to the value definition</item><item>owningDefinition : AttributeDefinitionInteger [1] Back linkage of the owning attribute definition</item></list><p style="text-align: justify;"><hi rend="bold">Operations</hi></p><p>No new operations</p><p style="text-align: justify;"><hi rend="bold">Constraints</hi></p><p>No constraints</p><p style="text-align: justify;"><hi rend="bold">Tags</hi></p><p>No tags</p><p style="text-align: justify;"><hi rend="bold">Semantics</hi></p><p>Contains an integer attribute value.</p><p style="text-align: justify;"><hi rend="bold">Additional Information</hi></p><p>No additional information</p></div><div><head>10.8.17 AttributeValueReal</head><p style="text-align: justify;"><hi rend="bold">Package:</hi> ReqIF <hi rend="bold">isAbstract:</hi> No</p><p><hi rend="bold" xml:space="preserve">Generalization: </hi>AttributeValueSimple</p><p style="text-align: justify;"><hi rend="bold">Description</hi></p><p>A Real attribute value.</p><p style="text-align: justify;"><hi rend="bold">Attributes</hi></p><list rend="bulleted"><item>theValue : float The attribute value</item></list><p style="text-align: justify;"><hi rend="bold">Associations</hi></p><list rend="bulleted"><item>definition : AttributeDefinitionReal [1] Reference to the value definition</item><item>owningDefinition : AttributeDefinitionReal [1] Back linkage of the owning attribute definition</item></list><p style="text-align: justify;"><hi rend="bold">Operations</hi></p><p>No new operations</p><p style="text-align: justify;"><hi rend="bold">Constraints</hi></p><p>No constraints</p><p style="text-align: justify;"><hi rend="bold">Tags</hi></p><p>No tags</p><p style="text-align: justify;"><hi rend="bold">Semantics</hi></p><p>Contains a Real attribute value.</p><p style="text-align: justify;"><hi rend="bold">Additional Information</hi></p><p>No additional information</p></div><div><head>10.8.18 AttributeValueSimple</head><p><hi rend="bold">Package:</hi> ReqIF <hi rend="bold">isAbstract:</hi> Yes <hi rend="bold" xml:space="preserve">Generalization: </hi>AttributeValue</p><p style="text-align: justify;"><hi rend="bold">Description</hi></p><p>Abstract base class for simple attribute values.</p><p style="text-align: justify;"><hi rend="bold">Attributes</hi></p><p>No attributes</p><p style="text-align: justify;"><hi rend="bold">Associations</hi></p><p>No associations</p><p style="text-align: justify;"><hi rend="bold">Operations</hi></p><p>No new operations</p><p style="text-align: justify;"><hi rend="bold">Constraints</hi></p><p>No constraints</p><p style="text-align: justify;"><hi rend="bold">Tags</hi></p><p>No tags</p><p style="text-align: justify;"><hi rend="bold">Semantics</hi></p><p>Abstract base class for simple attribute values.</p><p><hi rend="bold" xml:space="preserve">Additional Information </hi>No additional information</p></div><div><head>10.8.19 AttributeValueString</head><p style="text-align: justify;"><hi rend="bold">Package:</hi> ReqIF <hi rend="bold">isAbstract:</hi> No</p><p><hi rend="bold" xml:space="preserve">Generalization: </hi>AttributeValueSimple</p><p style="text-align: justify;"><hi rend="bold">Description</hi></p><p>A string attribute value.</p><p style="text-align: justify;"><hi rend="bold">Attributes</hi></p><list rend="bulleted"><item>theValue : string The attribute value</item></list><p style="text-align: justify;"><hi rend="bold">Associations</hi></p><list rend="bulleted"><item>definition : AttributeDefinitionString [1] Reference to the value definition</item><item>owningDefinition : AttributeDefinitionString [1] Back linkage of the owning attribute definition</item></list><p style="text-align: justify;"><hi rend="bold">Operations</hi></p><p>No new operations</p><p style="text-align: justify;"><hi rend="bold">Constraints</hi></p><p>No constraints</p><p style="text-align: justify;"><hi rend="bold">Tags</hi></p><p>No tags</p><p style="text-align: justify;"><hi rend="bold">Semantics</hi></p><p>Contains an string attribute value.</p><p style="text-align: justify;"><hi rend="bold">Additional Information</hi></p><p>No additional information</p></div><div><head>10.8.20 AttributeValueXHTML</head><p style="text-align: justify;"><hi rend="bold">Package:</hi> ReqIF <hi rend="bold">isAbstract:</hi> No</p><p style="text-align: justify;"><hi rend="bold" xml:space="preserve">Generalization: </hi>AttributeValue</p><p style="text-align: justify;"><hi rend="bold">Description</hi></p><p>An attribute value with XHTML contents.</p><p style="text-align: justify;"><hi rend="bold">Attributes</hi></p><list rend="bulleted"><item>isSimplified : Boolean[0..1] </item></list><p style="text-align: right;">Set to <hi style="font-family:Courier New">true</hi> if the attribute value is a simplified representation of the original value.</p><p style="text-align: justify;"><hi rend="bold">Associations</hi></p><list rend="bulleted"><item>definition : AttributeDefinitionXHTML [1] Reference to the value definition</item><item>owningDefinition : AttributeDefinitionXHTML [1] Back linkage of the owning attribute definition</item><item>theValue: XhtmlContent [1] {composite} Linkage to the owned XhtmlContent</item><item>theOriginalValue : XhtmlContent [0..1] {composite} </item></list><p>Linkage to the original attribute value that has been saved if isSimplified is <hi style="font-family:Courier New">true</hi>.</p><p style="text-align: justify;"><hi rend="bold">Operations</hi></p><p>No operations</p><p style="text-align: justify;"><hi rend="bold">Constraints</hi></p><p>[1] The value of isSimplified is considered false if it is left out.</p><p style="text-align: justify;"><hi rend="bold">Tags</hi></p><p>No tags</p><p style="text-align: justify;"><hi rend="bold">Semantics</hi></p><p>There are two main functionalities of ReqIF that are realized through XHTML:</p><list rend="numbered"><item>Storing of formatted text. </item></list><p>Requirement authoring tools support – among other things – the use of bold, italic, underlined, and strikethrough text, bullet points, and numbering in attribute values of requirements. Re-using XHTML is a pragmatic approach to represent this formatted text in exchange documents.</p><list rend="numbered"><item>Inclusion of objects that are external to the exchange XML document in the requirements authoring tool. The objects may have binary content. </item><item>Furthermore, as requirements authoring tools and ReqIF tools have different capabilities, information may be lost during the exchange process (3.)</item></list><p style="text-align: justify;"><hi rend="bold">1. Storing of formatted text</hi></p><p style="text-align: justify;">ReqIF re-uses XML elements for formatting that are defined by XHTML 1.0. These XML elements - which are in the XHTML namespace - are embedded into the exchange XML document by using an XHTML schema driver, as defined by the XHTML Modularization 1.1.</p><p style="text-align: justify;">NOTE: Formatted content from a requirements authoring tool’s attribute values MUST always be stored as XHTML attribute values in the exchange XML documents. It is, for example, not allowed to store formatted content as RTF (Rich Text Format) or another format for formatted text, as this would decrease the interoperability between different ReqIF tools.</p><p>The XML elements of the following XHTML modules SHOULD be expected as contents of <hi rend="italic">AttributeValueXHTML</hi> instances during an import of an exchange XML document:</p><list rend="numbered"><item><hi rend="italic">Text</hi> Module</item><item><hi rend="italic">List</hi> Module</item><item><hi rend="italic">Hypertext</hi> Module</item><item><hi rend="italic">Edit</hi> Module</item><item><hi rend="italic">Presentation</hi> Module</item><item><hi rend="italic">Basic Tables</hi> Module</item><item><hi rend="italic">Object</hi> Module</item><item><hi rend="italic" xml:space="preserve">Style Attribute </hi>Module</item></list><p>The contents of these modules are defined in the XHTML Modularization <hi rend="color(7F7F7F)">(</hi><hi rend="underline color(0000FF)">http://www.w3.org/TR/xhtml-modularization/</hi><hi rend="color(7F7F7F)">).</hi></p><p>Concerning the XML attributes of the above XHTML elements, there are the following constraints:</p><list rend="bulleted"><item>The <hi rend="italic">class</hi> attribute of the XHTML Core Attribute Collection MUST NOT be used.</item><item>Only the following values for the <hi rend="italic">style</hi> attribute from the <hi rend="italic">Style Attribute</hi> Module need to be considered during import: </item></list><p>style="text-decoration:underline", style="text-decoration:line-through, style=”color:&lt;color&gt;” </p><p>XHTML object MUST be treated according to line “3. Handling information loss”</p><p style="text-align: justify;">Apart from these constraints, all XML attributes of the XHTML XML elements SHOULD be processed during import. If any of XHTML’s XML elements or XML attributes can’t be processed, information may be lost. See line “3. Handling information loss” on how to handle information loss.</p><list rend="numbered"><item><hi rend="bold">Inclusion of objects that are external to the exchange XML document in the requirements authoring tool</hi></item></list><p>External objects are referenced binary objects that are usually not edited with the requirements authoring tool itself, but by accessing an external application (e.g., a Visio drawing or an Excel sheet). External objects can be referenced from within a formatted text (as described in line “1. Storing of formatted text”). </p><p style="text-align: justify;">External objects are referenced using the XHTML object element from the XHTML <hi rend="italic">Object</hi> Module. The specification for the XTHML object element defines several XML attributes. For ReqIF, only a subset of these attributes is relevant and used. These attributes are shown together with their purposes in the following table.</p><table rend="rules"><row><cell style="text-align: left;"><hi rend="bold">XHTML XML-Element</hi></cell><cell style="text-align: left;"><hi rend="bold">XML Attributes</hi></cell><cell style="text-align: left;"><hi rend="bold">Attribute types</hi></cell></row><row><cell style="text-align: left;"><hi style="font-size:9pt">Object</hi></cell><cell style="text-align: left;"><hi style="font-size:9pt">data type width height</hi></cell><cell style="text-align: left;"><p><hi style="font-size:9pt">URI</hi></p><p><hi style="font-size:9pt">MIME-Type</hi></p><p><hi style="font-size:9pt">Length</hi></p><p><hi style="font-size:9pt">Length</hi></p></cell></row></table><p>To maximize interoperability between ReqIF tools, the following rules MUST be obeyed:</p><list rend="bulleted"><item>If there is a specific MIME-type for the application that handles the external object, it MUST be stored in the <hi rend="italic">type</hi> attribute and no attribute in addition to the four attributes for the object element (<hi rend="italic">data</hi>, <hi rend="italic">type</hi>, <hi rend="italic">width</hi>, <hi rend="italic">height</hi>) MUST be used in that case. • For XHTML object elements that refer to an external object that is not an image with the MIME-Type image/png, an alternative image AND an alternative text MUST be provided analogous to the following example. </item></list><p><hi style="font-family:Courier New;font-size:9pt">&lt;object data="http://www.example.com/bar.mp3" type="audio/mpeg"&gt;</hi> </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;!-- Else, try the image --&gt;</hi></p><p><hi style="font-family:Courier New;font-size:9pt">&lt;object data="baz.png" type="image/png"&gt;</hi></p><p><hi style="font-family:Courier New;font-size:9pt">&lt;!-- Else process the alternate text --&gt;</hi></p><p><hi style="font-family:Courier New;font-size:9pt">The &lt;strong&gt;Earth&lt;/strong&gt; as seen from space.</hi></p><p><hi style="font-family:Courier New;font-size:9pt">&lt;/object&gt;</hi></p><p><hi style="font-family:Courier New;font-size:9pt">&lt;/object&gt;</hi></p><p>            An exporting ReqIF tool MUST only export alternative images with MIME-Type image/png. </p><list rend="bulleted"><item>The location of an external object MUST be specified via the <hi rend="italic">data</hi> attribute.  The <hi rend="italic">data</hi> attribute MUST either contain:<list rend="numbered"><item>a URL relative to the location of the exchange XML document, or</item><item>an absolute URL.</item></list></item></list><p>           Case a) MUST be supported, case b) SHOULD be supported.</p><list rend="numbered"><item><hi rend="bold">Handling information loss</hi></item></list><p>The purpose of the isSimplified attribute is to mark an AttributeValueXHTML element if an importing tool has been unable to interpret the formatted attribute value and thus create the possibility to inform users about it.</p><p>If AttributeValueXHTML elements are marked that way, importing ReqIF tools SHOULD still display a simplified version of the attribute value using an external HTML processor, allowing the user to at least read the information. Tool vendors are strongly encouraged to implement this feature.</p><p>The following rules MUST be obeyed during the import of each AttributeValueXHTML element: </p><p>If either</p><list rend="bulleted"><item>the requirements authoring tool is not capable of displaying its XHTML contents adequately, or </item><item>its contents can’t be translated to the requirements authoring tool adequately, </item><item>the isSimplified flag must be set to true. </item></list><p>NOTE: The guideline for what is adequate is the default style sheet proposed by the W3C which maps HTML elements to CSS <hi rend="color(7F7F7F)">(</hi><hi rend="underline color(0000FF)">http://www.w3.org/TR/CSS2/sample.html</hi>) and the CSS2.1 specification.</p><p>For the details on setting the isSimplifed flag during the exchange process, see Clause 8.</p><p style="text-align: justify;"><hi rend="bold">Additional Information</hi></p></div><div><head>10.8.21 DatatypeDefinition</head><p style="text-align: justify;"><hi rend="bold">Package:</hi> ReqIF <hi rend="bold">isAbstract:</hi> Yes</p><p style="text-align: justify;"><hi rend="bold" xml:space="preserve">Generalization: </hi> Identifiable</p><p style="text-align: justify;"><hi rend="bold">Description</hi></p><p>Abstract base class for all data types.</p><p style="text-align: justify;"><hi rend="bold">Attributes</hi></p><p>No attributes</p><p style="text-align: justify;"><hi rend="bold">Associations</hi></p><p>• 	coreContent : ReqIFContent [1] </p><p>The back linkage to the owning ReqIFContent element.</p><p style="text-align: justify;"><hi rend="bold">Operations</hi></p><p>No operations</p><p style="text-align: justify;"><hi rend="bold">Constraints</hi></p><p>No constraints</p><p style="text-align: justify;"><hi rend="bold">Tags</hi></p><p>No tags</p><p style="text-align: justify;"><hi rend="bold">Semantics</hi></p><p>This is the abstract base class for all data types available to the Exchange Document.</p><p style="text-align: justify;"><hi rend="bold">Additional Information</hi></p><p>No additional information</p></div><div><head>10.8.22 DatatypeDefinitionBoolean</head><p style="text-align: justify;"><hi rend="bold">Package:</hi> ReqIF <hi rend="bold">isAbstract:</hi> No</p><p><hi rend="bold" xml:space="preserve">Generalization: </hi> DatatypeDefinitionSimple</p><p style="text-align: justify;"><hi rend="bold">Description</hi></p><p>This class defines the primitive Boolean data type.</p><p style="text-align: justify;"><hi rend="bold">Attributes</hi></p><p>No attributes</p><p style="text-align: justify;"><hi rend="bold">Associations</hi></p><p>No associations</p><p style="text-align: justify;"><hi rend="bold">Operations</hi></p><p>No operations</p><p style="text-align: justify;"><hi rend="bold">Constraints</hi></p><p>No constraints</p><p style="text-align: justify;"><hi rend="bold">Tags</hi></p><p>No tags</p><p style="text-align: justify;"><hi rend="bold">Semantics</hi></p><p>This element defines a data type for the representation of Boolean data values in the Exchange Document. The representation of data values shall comply with the definitions in http://www.w3.org/TR/xmlschema-2/#boolean.</p><p style="text-align: justify;"><hi rend="bold">Additional Information</hi></p><p>No additional information</p></div><div><head>10.8.23 DatatypeDefinitionDate</head><p style="text-align: justify;"><hi rend="bold">Package:</hi> ReqIF <hi rend="bold">isAbstract:</hi> No</p><p><hi rend="bold" xml:space="preserve">Generalization: </hi> DatatypeDefinitionSimple</p><p style="text-align: justify;"><hi rend="bold">Description</hi></p><p>This class defines the Date and Time data type.</p><p style="text-align: justify;"><hi rend="bold">Attributes</hi></p><p>No attributes</p><p style="text-align: justify;"><hi rend="bold">Associations</hi></p><p>No associations</p><p style="text-align: justify;"><hi rend="bold">Operations</hi></p><p>No operations</p><p style="text-align: justify;"><hi rend="bold">Constraints</hi></p><p>No constraints</p><p style="text-align: justify;"><hi rend="bold">Tags</hi></p><p>No tags</p><p style="text-align: justify;"><hi rend="bold">Semantics</hi></p><p>This element defines a data type for the representation of Date and Time data values in the Exchange Document. The representation of data values shall comply with the definitions in http://www.w3.org/TR/xmlschema-2/#isoformats.</p><p style="text-align: justify;"><hi rend="bold">Additional Information</hi></p><p>No additional information</p></div><div><head>10.8.24 DatatypeDefinitionEnumeration</head><p style="text-align: justify;"><hi rend="bold">Package:</hi> ReqIF <hi rend="bold">isAbstract:</hi> No</p><p><hi rend="bold" xml:space="preserve">Generalization: </hi> DatatypeDefinition</p><p style="text-align: justify;"><hi rend="bold">Description</hi></p><p>Data type definition for enumeration types.</p><p style="text-align: justify;"><hi rend="bold">Attributes</hi></p><p>No attributes</p><p style="text-align: justify;"><hi rend="bold">Associations</hi></p><p>• 	specifiedValues : EnumValue [*] {composite, ordered} The linkage to the owned enumeration literals.</p><p style="text-align: justify;"><hi rend="bold">Operations</hi></p><p>No operations</p><p style="text-align: justify;"><hi rend="bold">Constraints</hi></p><p>No constraints</p><p style="text-align: justify;"><hi rend="bold">Tags</hi></p><p>No tags</p><p style="text-align: justify;"><hi rend="bold">Semantics</hi></p><p>Data type definition for enumeration types. The set of enumeration values referenced by specifiedValues constrains the possible choices for enumeration attribute values, as described in sub clause 10.8.15.</p><p style="text-align: justify;"><hi rend="bold">Additional Information</hi></p><p>No additional information</p></div><div><head>10.8.25 DatatypeDefinitionInteger</head><p style="text-align: justify;"><hi rend="bold">Package:</hi> ReqIF <hi rend="bold">isAbstract:</hi> No</p><p><hi rend="bold" xml:space="preserve">Generalization: </hi> DatatypeDefinitionSimple</p><p style="text-align: justify;"><hi rend="bold">Description</hi></p><p>This class defines the primitive Integer data type.</p><p style="text-align: justify;"><hi rend="bold">Attributes</hi></p><list rend="bulleted"><item>max : integer </item></list><p>Denotes the largest positive data value representable by this data type. </p><list rend="bulleted"><item>min : integer </item></list><p>Denotes the largest negative data value representable by this data type. </p><p style="text-align: justify;"><hi rend="bold">Associations</hi></p><p>No associations</p><p style="text-align: justify;"><hi rend="bold">Operations</hi></p><p>No operations</p><p><hi rend="bold" xml:space="preserve">Constraints </hi>[1]  The value of the integer value held in any data element defined by DatatypeDefinitionInteger must be less than or        equal to the value of DatatypeDefinitionInteger::max, and greater than or equal to the value of       DatatypeDefinitionInteger::min.</p><p style="text-align: justify;"><hi rend="bold">Tags</hi></p><p>No tags</p><p style="text-align: justify;"><hi rend="bold">Semantics</hi></p><p>This element defines a data type for the representation of Integer data values in the Exchange Document. The representation of data values shall comply with the definitions in http://www.w3.org/TR/xmlschema-2/#integer.</p><p style="text-align: justify;"><hi rend="bold">Additional Information</hi></p><p>No additional information</p></div><div><head>10.8.26 DatatypeDefinitionReal</head><p style="text-align: justify;"><hi rend="bold">Package:</hi> ReqIF <hi rend="bold">isAbstract:</hi> No</p><p><hi rend="bold" xml:space="preserve">Generalization: </hi> DatatypeDefinitionSimple</p><p style="text-align: justify;"><hi rend="bold">Description</hi></p><p>This class defines the primitive Real data type.</p><p style="text-align: justify;"><hi rend="bold">Attributes</hi></p><list rend="bulleted"><item>accuracy : integer </item></list><p>Denotes the supported maximum precision of real numbers represented by this data type.</p><list rend="bulleted"><item>max : float </item></list><p>Denotes the largest positive data value representable by this data type. </p><list rend="bulleted"><item>min : float </item></list><p>Denotes the largest negative data value representable by this data type. </p><p style="text-align: justify;"><hi rend="bold">Associations</hi></p><p>No associations</p><p style="text-align: justify;"><hi rend="bold">Operations</hi></p><p>No operations</p><p style="text-align: justify;"><hi rend="bold">Constraints</hi></p><p style="text-align: center;">[1] The value of the real value held in any data element defined by DatatypeDefinitionReal must be less than or equal to       the value of DatatypeDefinitionReal::max, and greater than or equal to the value of DatatypeDefinitionReal::min.</p><p style="text-align: justify;"><hi rend="bold">Tags</hi></p><p>No tags</p><p style="text-align: justify;"><hi rend="bold">Semantics</hi></p><p style="text-align: justify;">This element defines a data type for the representation of Real data values in the Exchange Document. The representation of data values shall comply with the definitions in http://www.w3.org/TR/xmlschema-2/#double. The precision of represented values is limited to the precision denoted by <hi rend="bold" style="font-size:9pt">DatatypeDefinitionReal::accuracy</hi>.</p><p style="text-align: justify;"><hi rend="bold">Additional Information</hi></p><p>No additional information</p></div><div><head>10.8.27 DatatypeDefinitionSimple</head><p style="text-align: justify;"><hi rend="bold">Package:</hi> ReqIF <hi rend="bold">isAbstract:</hi> Yes</p><p><hi rend="bold" xml:space="preserve">Generalization: </hi> DatatypeDefinition</p><p style="text-align: justify;"><hi rend="bold">Description</hi></p><p>Abstract base class for all primitive data types.</p><p style="text-align: justify;"><hi rend="bold">Attributes</hi></p><p>No attributes</p><p style="text-align: justify;"><hi rend="bold">Associations</hi></p><p>No associations</p><p style="text-align: justify;"><hi rend="bold">Operations</hi></p><p>No operations</p><p style="text-align: justify;"><hi rend="bold">Constraints</hi></p><p>No constraints</p><p style="text-align: justify;"><hi rend="bold">Tags</hi></p><p>No tags</p><p style="text-align: justify;"><hi rend="bold">Semantics</hi></p><p>DatatypeDefinitionSimple is the abstract base class from which all primitive data types, except enumeration, are derived.</p><p style="text-align: justify;"><hi rend="bold">Additional Information</hi></p><p>No additional information</p></div><div><head>10.8.28 DatatypeDefinitionString</head><p style="text-align: justify;"><hi rend="bold">Package:</hi> ReqIF <hi rend="bold">isAbstract:</hi> No</p><p><hi rend="bold" xml:space="preserve">Generalization: </hi> DatatypeDefinitionSimple</p><p style="text-align: justify;"><hi rend="bold">Description</hi></p><p>This class defines the primitive String data type.</p><p style="text-align: justify;"><hi rend="bold">Attributes</hi></p><p>• 	maxLength : integer </p><p>The maximum permissible string length.</p><p style="text-align: justify;"><hi rend="bold">Associations</hi></p><p>No associations</p><p style="text-align: justify;"><hi rend="bold">Operations</hi></p><p>No operations</p><p style="text-align: justify;"><hi rend="bold">Constraints</hi></p><p>[1] The length of the string value held in any data element defined by DatatypeDefinitionString must not exceed the       value of DatatypeDefinitionString::maxLength.</p><p style="text-align: justify;"><hi rend="bold">Tags</hi></p><p>No tags</p><p style="text-align: justify;"><hi rend="bold">Semantics</hi></p><p>This element defines a data type for the representation of String data values in the Exchange Document. The representation of data values shall comply with the definitions in http://www.w3.org/TR/xmlschema-2/#string.</p><p><hi rend="bold" xml:space="preserve">Additional Information </hi>No additional information</p></div><div><head>10.8.29 DatatypeDefinitionXHTML</head><p style="text-align: justify;"><hi rend="bold">Package:</hi> ReqIF <hi rend="bold">isAbstract:</hi> No</p><p><hi rend="bold" xml:space="preserve">Generalization: </hi> DatatypeDefinition</p><p style="text-align: justify;"><hi rend="bold">Description</hi></p><p>Data type definition for XHTML formatted data.</p><p style="text-align: justify;"><hi rend="bold">Attributes</hi></p><p>No attributes</p><p style="text-align: justify;"><hi rend="bold">Associations</hi></p><p>No associations</p><p style="text-align: justify;"><hi rend="bold">Operations</hi></p><p>No new operations</p><p style="text-align: justify;"><hi rend="bold">Constraints</hi></p><p>No new constraints</p><p style="text-align: justify;"><hi rend="bold">Tags</hi></p><p>No tags</p><p style="text-align: justify;"><hi rend="bold">Semantics</hi></p><p>Data type definition for XHTML formatted data.</p><p><hi rend="bold" xml:space="preserve">Additional Information </hi>No additional information</p></div><div><head>10.8.30 EmbeddedValue</head><p><hi rend="bold">Package:</hi> ReqIF <hi rend="bold">isAbstract:</hi> No <hi rend="bold" xml:space="preserve">Generalization: </hi> </p><p style="text-align: justify;"><hi rend="bold">Description</hi></p><p>Class representing additional information related to enumeration literals.</p><p><hi rend="bold" xml:space="preserve">Attributes </hi>• 	key : integer </p><p>The numerical value corresponding to the enumeration literal. </p><list rend="bulleted"><item>otherContent : string </item></list><p style="text-align: right;">Arbitrary additional information related to the enumeration literal (for example, a color.)</p><p style="text-align: justify;"><hi rend="bold">Associations</hi></p><list rend="bulleted"><item>enumValue : EnumValue [1] </item></list><p>Back linkage to the owning EnumValue class.</p><p style="text-align: justify;"><hi rend="bold">Operations</hi></p><p>No operations</p><p style="text-align: justify;"><hi rend="bold">Constraints</hi></p><p>No constraints</p><p style="text-align: justify;"><hi rend="bold">Tags</hi></p><p>No tags</p><p style="text-align: justify;"><hi rend="bold">Semantics</hi></p><p>This class represents additional information related to enumeration literals.</p><p><hi rend="bold" xml:space="preserve">Additional Information </hi>No additional information</p></div><div><head>10.8.31 EnumValue</head><p style="text-align: justify;"><hi rend="bold">Package:</hi> ReqIF <hi rend="bold">isAbstract:</hi> No</p><p style="text-align: justify;"><hi rend="bold" xml:space="preserve">Generalization: </hi> Identifiable</p><p style="text-align: justify;"><hi rend="bold">Description</hi></p><p>Class representing enumeration literals.</p><p style="text-align: justify;"><hi rend="bold">Attributes</hi></p><p>No attributes</p><p style="text-align: justify;"><hi rend="bold">Associations</hi></p><list rend="bulleted"><item>dataTpeDefEnum : DataTypeDefinitionEnumeration [1] </item></list><p>Back linkage to the owning DatatypeDefinitionEnumeration class.</p><list rend="bulleted"><item>Properties : EmbeddedValue [1] {composite} Link to owned EmbeddedValue.</item></list><p style="text-align: justify;"><hi rend="bold">Operations</hi></p><p>No operations</p><p style="text-align: justify;"><hi rend="bold">Constraints</hi></p><p>[1] The attribute longName inherited from Identifiable is mandatory for EnumValue.</p><p style="text-align: justify;"><hi rend="bold">Tags</hi></p><p>No tags</p><p style="text-align: justify;"><hi rend="bold">Semantics</hi></p><p>This class represents the enumeration literals.</p><p><hi rend="bold" xml:space="preserve">Additional Information </hi>No additional information</p></div><div><head>10.8.32 Identifiable</head><p style="text-align: justify;"><hi rend="bold">Package:</hi> ReqIF <hi rend="bold">isAbstract:</hi> Yes <hi rend="bold" xml:space="preserve">Generalization: </hi> none</p><p style="text-align: justify;"><hi rend="bold">Description</hi></p><p>Abstract base class providing an identification concept for ReqIF elements.</p><p style="text-align: justify;"><hi rend="bold">Attributes</hi></p><list rend="bulleted"><item>desc : string [0..1] </item></list><p>Optional additional description for the information element.</p><list rend="bulleted"><item>identifier: string </item></list><p>The lifetime immutable identifier for an instance of a ReqIF information type. The value of the identifier must be a well-formed xsd:ID.</p><list rend="bulleted"><item>lastChange: xsd::dateTime </item></list><p>The date and time of the last change of the information element. This includes the creation of the information element. lastChange is of the XML Schema data type “dateTime” that specifies the time format as  <hi rend="italic">CCYY-MM-DDThh:mm:ss</hi> with optional time zone indicator as a suffix <hi rend="italic">±hh:mm</hi>.  Example: 2005-03-04T10:24:18+01:00 (MET time zone).</p><list rend="bulleted"><item>longName : string [0..1] </item></list><p>The human-readable name for the information element.</p><p style="text-align: justify;"><hi rend="bold">Associations</hi></p><list rend="bulleted"><item>alternativeID : Class [0..1] {composite} </item></list><p>The linkage to the optional alternative identification element.</p><p style="text-align: justify;"><hi rend="bold">Operations</hi></p><p>No operations</p><p style="text-align: justify;"><hi rend="bold">Constraints</hi></p><p>[1] The value of Identifiable::identifier must be globally unique.</p><p style="text-align: justify;"><hi rend="bold">Tags</hi></p><p>No tags</p><p style="text-align: justify;"><hi rend="bold">Semantics</hi></p><p>The Identifiable element provides globally unique and lifetime immutable identity to ReqIF elements. In addition, Identifiable provides change tracking for the derived ReqIF element, and provides for an optional human-readable name and an optional textual description for the derived ReqIF element.</p><p style="text-align: justify;"><hi rend="bold">Additional Information</hi></p><p>While the longName attribute is optional from the viewpoint of Identifiable, some ReqIF elements make this long name mandatory. This fact will be stated in the class description of the affected elements.</p></div><div><head>10.8.33 RelationGroup</head><p style="text-align: justify;"><hi rend="bold">Package:</hi> ReqIF <hi rend="bold">isAbstract:</hi> No</p><p><hi rend="bold" xml:space="preserve">Generalization: </hi> SpecElementWithAttributes</p><p style="text-align: justify;"><hi rend="bold">Description</hi></p><p>Represents a group of relations.</p><p style="text-align: justify;"><hi rend="bold">Attributes</hi></p><p>No attributes</p><p style="text-align: justify;"><hi rend="bold">Associations</hi></p><list rend="bulleted"><item>coreContent : ReqIFContent [1] </item></list><p>The back linkage to the owning ReqIFContent element.</p><list rend="bulleted"><item>specRelations : SpecRelation [*] Points to the grouped SpecRelations.</item><item>type : RelationGroup Type [1] </item></list><p>Linkage to the concrete SpecType instance.</p><list rend="bulleted"><item>sourceSpecification: Specification [1] </item></list><p>Reference to the specification that contains SpecObject instances that are source objects of the relations  (referred to by the specRelations association).</p><list rend="bulleted"><item>targetSpecification: Specification [1] </item></list><p>Reference to the specification that contains SpecObject instances that are target objects of the relations  (referred to by the specRelations association).</p><p style="text-align: justify;"><hi rend="bold">Operations</hi></p><p>No new operations</p><p style="text-align: justify;"><hi rend="bold">Constraints</hi></p><list rend="numbered"><item>The attribute longName inherited from Identifiable is mandatory for RelationGroup.</item><item>For each SpecObject instance that is referred to by any SpecRelation instance in the set of specRelations       (via the relation's source or target association) : the SpecObject instance must either be contained in the       sourceSpecification or in the targetSpecification.</item></list><p><hi rend="bold" xml:space="preserve">Tags </hi>org.omg.reqif.order	6</p><p style="text-align: justify;"><hi rend="bold">Semantics</hi></p><p>Represents a group of relations between a source specification and a target specification. For example, a RelationGroup instance may represent a set of relations between a customer requirements specification and a system requirements specification.</p><p style="text-align: justify;"><hi rend="bold">Additional Information</hi></p><p>No additional information</p></div><div><head>10.8.34 RelationGroupType</head><p style="text-align: justify;"><hi rend="bold">Package:</hi> ReqIF <hi rend="bold">isAbstract:</hi> No</p><p style="text-align: justify;"><hi rend="bold" xml:space="preserve">Generalization: </hi> SpecType</p><p style="text-align: justify;"><hi rend="bold">Description</hi></p><p>Contains a set of attribute definitions for a RelationGroup element.</p><p style="text-align: justify;"><hi rend="bold">Attributes</hi></p><p>No attributes</p><p style="text-align: justify;"><hi rend="bold">Associations</hi></p><p>No associations</p><p style="text-align: justify;"><hi rend="bold">Operations</hi></p><p>No operations</p><p style="text-align: justify;"><hi rend="bold">Constraints</hi></p><p>No constraints</p><p style="text-align: justify;"><hi rend="bold">Tags</hi></p><p>No tags</p><p style="text-align: justify;"><hi rend="bold">Semantics</hi></p><p>Inherits a set of attribute definitions from SpecType. By using RelationGroupType elements, RelationGroup elements can be associated with attribute names, default values, data types, etc.</p><p><hi rend="bold" xml:space="preserve">Additional Information </hi>No additional information</p></div><div><head>10.8.35 ReqIFContent</head><p style="text-align: justify;"><hi rend="bold">Package:</hi> ReqIF <hi rend="bold">isAbstract:</hi> No <hi rend="bold" xml:space="preserve">Generalization: </hi> none</p><p style="text-align: justify;"><hi rend="bold">Description</hi></p><p>Core content root</p><p style="text-align: justify;"><hi rend="bold">Attributes</hi></p><p>No attributes</p><p style="text-align: justify;"><hi rend="bold">Associations</hi></p><list rend="bulleted"><item>datatypes : DataTypeDefinition [0..*] {composite} Linkage to the DataTypeDefinition content elements.</item><item>documentRoot : ReqIF [1] </item></list><p>Linking back to the Exchange Document root element.</p><list rend="bulleted"><item>specifications : Specification [0..*] {composite} Linkage to the Specification content elements.</item><item>specObjects : SpecObject [0..*] {composite} Linkage to the SpecObject content elements.</item><item>specRelationGroups: RelationGroup [0..*] {composite} Linkage to the RelationGroup content elements.</item><item>specRelations : SpecRelation [0..*] {composite} Linkage to the SpecRelation content elements.</item><item>specTypes : SpecType [0..*] {composite} Linkage to the SpecType content elements.</item></list><p style="text-align: justify;"><hi rend="bold">Operations</hi></p><p>No operations</p><p style="text-align: justify;"><hi rend="bold">Constraints</hi></p><p>No constraints</p><p style="text-align: justify;"><hi rend="bold">Tags</hi></p><p>org.omg.reqif.order 2 org.omg.reqif.ordered true</p><p style="text-align: justify;"><hi rend="bold">Semantics</hi></p><p>This element represents the root of the Exchange Document core content.</p><p style="text-align: justify;"><hi rend="bold">Additional Information</hi></p><p>No additional information</p></div><div><head>10.8.36 SpecElementWithAttributes</head><p style="text-align: justify;"><hi rend="bold">Package:</hi> ReqIF <hi rend="bold">isAbstract:</hi> Yes</p><p style="text-align: justify;"><hi rend="bold" xml:space="preserve">Generalization: </hi>Identifiable</p><p style="text-align: justify;"><hi rend="bold">Description</hi></p><p>An abstract super class for elements that can own attributes.</p><p style="text-align: justify;"><hi rend="bold">Attributes</hi></p><p>No attributes</p><p style="text-align: justify;"><hi rend="bold">Associations</hi></p><p>• 	values : AttributeValue [0..*] {composite} </p><p>The values of the attributes owned by the element.</p><p style="text-align: justify;"><hi rend="bold">Operations</hi></p><p>No operations</p><p style="text-align: justify;"><hi rend="bold">Constraints</hi></p><p>No constraints</p><p style="text-align: justify;"><hi rend="bold">Tags</hi></p><p>None</p><p style="text-align: justify;"><hi rend="bold">Semantics</hi></p><p>Any element that can own attributes, like a requirement, a specification, or a relation between requirements needs to be an instance of a concrete subclass of this abstract class.</p><p>While this class aggregates the values of the attributes, the association to the attributes’ types that define the acceptable values for the attributes is realized by concrete sub classes of this class.</p><p><hi rend="bold" xml:space="preserve">Additional Information </hi>No additional information</p></div><div><head>10.8.37 SpecHierarchy</head><p style="text-align: justify;"><hi rend="bold">Package:</hi> ReqIF <hi rend="bold">isAbstract:</hi> No</p><p><hi rend="bold" xml:space="preserve">Generalization: </hi>AccessControlledElement</p><p style="text-align: justify;"><hi rend="bold">Description</hi></p><p>Represents a node in a hierarchically structured requirements specification. </p><p><hi rend="bold" xml:space="preserve">Attributes </hi>• 	isTableInternal : Boolean[0..1] </p><p>Some requirements authoring tools enable the user to use tables as part of a requirement’s content, where parts of  the table represent requirements as well. If that is the case, this attribute needs to be set to true for the root node of  the table hierarchy and all descendant SpecHierarchy nodes. </p><p>NOTE: The root node of the table hierarchy is related to the SpecObject element that is the root of the table by the object association.</p><p style="text-align: justify;"><hi rend="bold">Associations</hi></p><list rend="bulleted"><item>children : SpecHierarchy [*] {composite, ordered} Down links to next level of owned SpecHierarchy.</item><item>editableAtts : AttributeDefinition [*] </item></list><p>The attributes whose values are editable for the SpecHierarchy by a tool user.</p><list rend="bulleted"><item>parent : SpecHierarchy [0..1] </item></list><p>Up link to previous level of SpecHierarchy (which owns this level).</p><list rend="bulleted"><item>root : Specification [0..1] </item></list><p>Up link to specification hierarchy root (which may own this level).</p><list rend="bulleted"><item>object : SpecObject [1] </item></list><p>Pointer to the associated SpecObject.</p><p style="text-align: justify;"><hi rend="bold">Operations</hi></p><p>No operations</p><p style="text-align: justify;"><hi rend="bold">Constraints</hi></p><list rend="numbered"><item>The value of isTableInternal is considered false if it is left out.</item><item>If the inherited isEditable attribute is left out, the following constraint applies:<list rend="bulleted"><item>If there is a parent SpecHierarchy element, the value of isEditable is copied from the parent SpecHierarchy element. </item><item>If there is no parent SpecHierarchy element, the value of isEditable is <hi style="font-family:Courier New">false</hi>.</item></list></item><item>If isEditable is <hi style="font-family:Courier New">false</hi>, the user of the requirements authoring must not replace the associated object with another       object.</item><item>If isEditable is <hi style="font-family:Courier New">false</hi>, the user of the requirements authoring must not add or delete any direct children to/from the       SpecHierarchy element.</item><item>If the set of editableAtts is empty for a SpecHierarchy element, the following constraint applies:<list rend="bulleted"><item>If there is a parent SpecHierarchy element, the set of editable attributes is copied from the parent SpecHierarchy element. </item><item>If there is no parent SpecHierarchy element, all attribute values for the SpecHierarchy are considered read-only.</item></list></item></list><p style="text-align: justify;"><hi rend="bold">Tags</hi></p><p>No tags</p><p style="text-align: justify;"><hi rend="bold">Semantics</hi></p><p>Represents a node in a hierarchically structured requirements specification. </p><p style="text-align: justify;"><hi rend="bold">Additional Information</hi></p><p>In most cases, the isTableInternal attribute may be set to <hi style="font-family:Courier New">false</hi> or left out. However, if at least one isTableInternal flag is set to true in an exchange document, a representation of each whole table must be exported as AttributeValueXHTML element to allow tools that can’t process table internal structures to represent them as formatted content.</p></div><div><head>10.8.38 Specification</head><p style="text-align: justify;"><hi rend="bold">Package:</hi> ReqIF <hi rend="bold">isAbstract:</hi> No</p><p><hi rend="bold" xml:space="preserve">Generalization: </hi>SpecElementWithAttributes</p><p style="text-align: justify;"><hi rend="bold">Description</hi></p><p>Represents a hierarchically structured requirements specification. </p><p style="text-align: justify;"><hi rend="bold">Attributes</hi></p><p>No attributes</p><p style="text-align: justify;"><hi rend="bold">Associations</hi></p><list rend="bulleted"><item>children : SpecHierarchy [*] {composite, ordered} Links to next level of owned SpecHierarchy.</item><item>coreContent : ReqIFContent [1] </item></list><p>The back linkage to the owning ReqIFContent element.</p><list rend="bulleted"><item>type : Specification Type [1] </item></list><p>Linkage to the concrete SpecType instance.</p><p style="text-align: justify;"><hi rend="bold">Operations</hi></p><p>No operations</p><p style="text-align: justify;"><hi rend="bold">Constraints</hi></p><p>No constraints</p><p><hi rend="bold" xml:space="preserve">Tags </hi>org.omg.reqif.order	5</p><p style="text-align: justify;"><hi rend="bold">Semantics</hi></p><p>Represents a hierarchically structured requirements specification. </p><p>It is the root node of the tree that hierarchically structures <hi rend="bold" style="font-size:9pt">SpecObject</hi> instances.</p><p style="text-align: justify;"><hi rend="bold">Additional Information</hi></p><p>No additional information</p></div><div><head>10.8.39 SpecificationType</head><p style="text-align: justify;"><hi rend="bold">Package:</hi> ReqIF <hi rend="bold">isAbstract:</hi> No <hi rend="bold" xml:space="preserve">Generalization: </hi> SpecType</p><p style="text-align: justify;"><hi rend="bold">Description</hi></p><p>Contains a set of attribute definitions for a Specification element.</p><p style="text-align: justify;"><hi rend="bold">Attributes</hi></p><p>No attributes</p><p style="text-align: justify;"><hi rend="bold">Associations</hi></p><p>No associations</p><p style="text-align: justify;"><hi rend="bold">Operations</hi></p><p>No operations</p><p style="text-align: justify;"><hi rend="bold">Constraints</hi></p><p>No constraints</p><p style="text-align: justify;"><hi rend="bold">Tags</hi></p><p>No tags</p><p style="text-align: justify;"><hi rend="bold">Semantics</hi></p><p>Inherits a set of attribute definitions from SpecType. By using SpecificationType elements, multiple specifications can be associated with the same set of attribute definitions (attribute names, default values, data types, etc.).</p><p><hi rend="bold" xml:space="preserve">Additional Information </hi>No additional information</p></div><div><head>10.8.40 SpecObject</head><p style="text-align: justify;"><hi rend="bold">Package:</hi> ReqIF <hi rend="bold">isAbstract:</hi> No</p><p><hi rend="bold" xml:space="preserve">Generalization: </hi> SpecElementWithAttributes</p><p style="text-align: justify;"><hi rend="bold">Description</hi></p><p>Constitutes an identifiable requirements object.</p><p style="text-align: justify;"><hi rend="bold">Attributes</hi></p><p>No attributes</p><p style="text-align: justify;"><hi rend="bold">Associations</hi></p><list rend="bulleted"><item>coreContent : ReqIFContent [1] </item></list><p>The back linkage to the owning ReqIFContent element.</p><list rend="bulleted"><item>type : SpecObject Type [1]  </item></list><p>Linkage to the concrete SpecType instance.</p><p style="text-align: justify;"><hi rend="bold">Operations</hi></p><p>No operations</p><p style="text-align: justify;"><hi rend="bold">Constraints</hi></p><p>No constraints</p><p><hi rend="bold" xml:space="preserve">Tags </hi>org.omg.reqif.order	3</p><p style="text-align: justify;"><hi rend="bold">Semantics</hi></p><p>Constitutes an identifiable requirements object that can be associated with various attributes. This is the smallest granularity by which requirements are referenced.</p><p>The <hi rend="bold" style="font-size:9pt">SpecObject</hi> instance itself does not carry the requirements text or any other user defined content. This data is stored in <hi rend="bold" style="font-size:9pt">AttributeValue</hi> instances that are associated to the <hi rend="bold" style="font-size:9pt">SpecObject</hi> instance.</p><p style="text-align: justify;"><hi rend="bold">Additional Information</hi></p><p>No additional information</p></div><div><head>10.8.41 SpecObjectType</head><p style="text-align: justify;"><hi rend="bold">Package:</hi> ReqIF <hi rend="bold">isAbstract:</hi> No</p><p style="text-align: justify;"><hi rend="bold" xml:space="preserve">Generalization: </hi> SpecType</p><p style="text-align: justify;"><hi rend="bold">Description</hi></p><p>Contains a set of attribute definitions for a SpecObject element.</p><p style="text-align: justify;"><hi rend="bold">Attributes</hi></p><p>No attributes</p><p style="text-align: justify;"><hi rend="bold">Associations</hi></p><p>No associations</p><p style="text-align: justify;"><hi rend="bold">Operations</hi></p><p>No operations</p><p style="text-align: justify;"><hi rend="bold">Constraints</hi></p><p>No constraints</p><p style="text-align: justify;"><hi rend="bold">Tags</hi></p><p>No tags</p><p style="text-align: justify;"><hi rend="bold">Semantics</hi></p><p>Inherits a set of attribute definitions from SpecType. By using SpecObjectType elements, multiple requirements can be associated with the same set of attribute definitions (attribute names, default values, data types, etc.).</p><p><hi rend="bold" xml:space="preserve">Additional Information </hi>No additional information</p></div><div><head>10.8.42 SpecRelation</head><p style="text-align: justify;"><hi rend="bold">Package:</hi> ReqIF <hi rend="bold">isAbstract:</hi> No</p><p><hi rend="bold" xml:space="preserve">Generalization: </hi>SpecElementWithAttributes</p><p style="text-align: justify;"><hi rend="bold">Description</hi></p><p>Defines relations (links) between two <hi rend="bold" style="font-size:9pt">SpecObject</hi> instances.</p><p style="text-align: justify;"><hi rend="bold">Attributes</hi></p><p>No attributes</p><p style="text-align: justify;"><hi rend="bold">Associations</hi></p><list rend="bulleted"><item>coreContent : ReqIFContent [1] </item></list><p>The back linkage to the owning ReqIFContent element.</p><list rend="bulleted"><item>source : SpecObject [1] Source object of the relationship.</item><item>target : SpecObject [1] Target object of the relationship.</item><item>type : SpecRelation Type [1]  </item></list><p> Linkage to the concrete SpecType instance.</p><p style="text-align: justify;"><hi rend="bold">Operations</hi></p><p>No operations</p><p style="text-align: justify;"><hi rend="bold">Constraints</hi></p><p>No constraints</p><p style="text-align: justify;"><hi rend="bold">Tags</hi></p><p>org.omg.reqif.order	4 </p><p>org.omg.reqif.reference.global	“source,” “target”</p><p style="text-align: justify;"><hi rend="bold">Semantics</hi></p><p>Defines relations (links) between two <hi rend="bold" style="font-size:9pt">SpecObject</hi> instances.</p><p><hi rend="bold" xml:space="preserve">Additional Information </hi>No additional information</p></div><div><head>10.8.43 SpecRelationType</head><p style="text-align: justify;"><hi rend="bold">Package:</hi> ReqIF <hi rend="bold">isAbstract:</hi> No <hi rend="bold" xml:space="preserve">Generalization: </hi> SpecType</p><p style="text-align: justify;"><hi rend="bold">Description</hi></p><p>Contains a set of attribute definitions for a SpecRelation element.</p><p style="text-align: justify;"><hi rend="bold">Attributes</hi></p><p>No attributes</p><p style="text-align: justify;"><hi rend="bold">Associations</hi></p><p>No associations</p><p style="text-align: justify;"><hi rend="bold">Operations</hi></p><p>No operations</p><p style="text-align: justify;"><hi rend="bold">Constraints</hi></p><p>No constraints</p><p style="text-align: justify;"><hi rend="bold">Tags</hi></p><p>No tags</p><p style="text-align: justify;"><hi rend="bold">Semantics</hi></p><p>Inherits a set of attribute definitions from SpecType. By using SpecRelationType elements, multiple relations can be associated with the same set of attribute definitions (attribute names, default values, data types, etc.).</p><p>As an example, a requirement authoring tool may allow its users to define the new type “contradicts” for relations between two requirements that contradict each other, and associate a comment attribute with each relation that explains the contradiction.</p><p><hi rend="bold" xml:space="preserve">Additional Information </hi>No additional information</p></div><div><head>10.8.44 SpecType</head><p style="text-align: justify;"><hi rend="bold">Package:</hi> ReqIF <hi rend="bold">isAbstract:</hi> Yes</p><p style="text-align: justify;"><hi rend="bold" xml:space="preserve">Generalization: </hi> Identifiable</p><p style="text-align: justify;"><hi rend="bold">Description</hi></p><p>Contains a set of attribute definitions.</p><p style="text-align: justify;"><hi rend="bold">Attributes</hi></p><p>No attributes</p><p style="text-align: justify;"><hi rend="bold">Associations</hi></p><list rend="bulleted"><item>coreContent : ReqIFContent [1] </item></list><p>The back linkage to the owning ReqIFContent element.</p><list rend="bulleted"><item>specAttributes: AttributeDefinition [0..*] {composite} The set of attribute definitions.</item></list><p style="text-align: justify;"><hi rend="bold">Operations</hi></p><p>No operations</p><p style="text-align: justify;"><hi rend="bold">Constraints</hi></p><p>No constraints</p><p><hi rend="bold" xml:space="preserve">Tags </hi>org.omg.reqif.order	2</p><p style="text-align: justify;"><hi rend="bold">Semantics</hi></p><p>Contains a set of attribute definitions. By using an instance of a subclass of SpecType, multiple elements can be associated with the same set of attribute definitions (attribute names, default values, data types, etc.).</p><p><hi rend="bold" xml:space="preserve">Additional Information </hi>No additional information</p></div><div><head>10.8.45 XhtmlContent</head><p><hi rend="bold">Package:</hi> ReqIF <hi rend="bold">isAbstract:</hi> No <hi rend="bold" xml:space="preserve">Generalization: </hi> </p><p style="text-align: justify;"><hi rend="bold">Description</hi></p><p>Class representing XHTML content.</p><p style="text-align: justify;"><hi rend="bold">Attributes</hi></p><p>No attributes</p><p style="text-align: justify;"><hi rend="bold">Associations</hi></p><p>• 	attributeValue : AttributeValueXHTML [1] </p><p>Back linkage to the owning AttributeValueXHTML class.</p><p style="text-align: justify;"><hi rend="bold">Operations</hi></p><p>No operations</p><p style="text-align: justify;"><hi rend="bold">Constraints</hi></p><p>No constraints</p><p style="text-align: justify;"><hi rend="bold">Tags</hi></p><table rend="rules"><row><cell style="text-align: left;">org.omg.reqif.datatype</cell><cell style="text-align: left;">True</cell></row><row><cell style="text-align: left;">org.omg.reqif.max</cell><cell style="text-align: left;">1</cell></row><row><cell style="text-align: left;">org.omg.reqif.min</cell><cell style="text-align: left;">1</cell></row><row><cell style="text-align: left;">org.omg.reqif.nsURI</cell><cell style="text-align: left;"><hi rend="underline">http://www.w3.org/1999/xhtml</hi></cell></row><row><cell style="text-align: left;">org.omg.reqif.processContents</cell><cell style="text-align: left;">Strict</cell></row></table><p style="text-align: justify;"><hi rend="bold">Semantics</hi></p><p>This class represents XHTML formatted content.</p><p style="text-align: justify;"><hi rend="bold">Additional Information</hi></p><p>No additional information</p><p><hi rend="bold">80</hi>	<hi style="font-size:9pt" xml:space="preserve">                Requirements Interchange Format (ReqIF), v1.2</hi></p><list rend="numbered"><item><hi rend="bold" style="font-size:18pt">Production Rules of ReqIF XML Schema</hi><list rend="numbered"><item><hi rend="bold" style="font-size:14pt">Purpose</hi></item></list></item></list><p>This clause describes the rules for creating a schema from the reqif metamodel.</p><list rend="numbered"><item><hi rend="bold" style="font-size:14pt">Notation for EBNF</hi></item></list><p>The rule sets are stated in EBNF notation. Each rule is numbered for reference. Rules are written as rule number, rule name, for example 1a. SchemaStart. Text within quotation marks are literal values, for example “&lt;xsd:element&gt;.” </p><p style="text-align: justify;">Text enclosed in double slashes represents a placeholder to be filled in with the appropriate external value, for example //Name of Attribute//. Literals should be enclosed in single or double quotation marks when used as the values for XML attributes in XML documents. The suffix “*” is used to indicate repetition of an item 0 or more times. The suffix “?” is used to indicate repetition of an item 0 or 1 times. The suffix “+” is used to indicate repetition of an item 1 or more times. </p><p>The vertical bar “|” indicates a choice between two items. Parentheses “( )” are used for grouping items together. EBNF ignores white space; hence these rules do not specify white space treatment. However, since white space in XML is significant, the actual schema generation process must insert white space at the appropriate points.</p><list rend="numbered"><item><hi rend="bold" style="font-size:14pt">Tags</hi></item></list><p>Some defined tags control the production rules. </p><table rend="rules"><row><cell style="text-align: left;" cols="2"><hi style="font-size:9pt">Tag id:</hi></cell><cell style="text-align: left;" cols="2"><hi style="font-family:Courier New;font-size:9pt">org.omg.reqif.global_element</hi></cell></row><row><cell style="text-align: left;" cols="2"><hi style="font-size:9pt">Values:</hi></cell><cell style="text-align: left;" cols="2"><hi style="font-family:Courier New;font-size:9pt">true | false</hi></cell></row><row><cell style="text-align: left;" cols="2"><hi style="font-size:9pt">Meaning:</hi></cell><cell style="text-align: left;" cols="2"><hi style="font-family:Courier New;font-size:9pt">Marks the class as root element.</hi></cell></row><row><cell style="text-align: left;" cols="2"><hi style="font-size:9pt">Restrictions:</hi></cell><cell style="text-align: left;" cols="2"><hi style="font-family:Courier New;font-size:9pt">There should be exactly one class with value true.</hi></cell></row><row><cell style="text-align: left;" cols="2"><hi style="font-size:9pt">Tag id:</hi></cell><cell style="text-align: left;" cols="2"><hi style="font-family:Courier New;font-size:9pt">org.omg.reqif.xsd_element</hi></cell></row><row><cell style="text-align: left;" cols="2"><hi style="font-size:9pt">Values:</hi></cell><cell style="text-align: left;" cols="2"><hi style="font-family:Courier New;font-size:9pt">Collection of attribute names.</hi></cell></row><row><cell style="text-align: left;" cols="2"><hi style="font-size:9pt">Meaning:</hi></cell><cell style="text-align: left;" cols="2"><hi style="font-family:Courier New;font-size:9pt">Defines how the attribute from the metamodel is represented in the schema.</hi></cell></row><row><cell style="text-align: left;" cols="2"><hi style="font-size:9pt">Restrictions:</hi></cell><cell style="text-align: left;" cols="2"><hi style="font-family:Courier New;font-size:9pt">-</hi></cell></row><row><cell style="text-align: left;"><hi style="font-size:9pt">Tag id:</hi></cell><cell style="text-align: left;" cols="2"><hi style="font-family:Courier New;font-size:9pt">org.omg.reqif.xsd_attribute_reference</hi></cell></row><row><cell style="text-align: left;"><hi style="font-size:9pt">Values:</hi></cell><cell style="text-align: left;" cols="2"><hi style="font-family:Courier New;font-size:9pt">Collection of attribute names.</hi></cell></row><row><cell style="text-align: left;"><hi style="font-size:9pt">Meaning:</hi></cell><cell style="text-align: left;" cols="2"><hi style="font-family:Courier New;font-size:9pt">Defines that the attributes in the collection are represented as xsd:attribute with ref attribute.</hi></cell></row><row><cell style="text-align: left;"><hi style="font-size:9pt">Restrictions:</hi></cell><cell style="text-align: left;" cols="2"><hi style="font-family:Courier New;font-size:9pt">-</hi></cell></row></table><table rend="rules"><row><cell style="text-align: left;"><hi style="font-size:9pt">Tag id:</hi></cell><cell style="text-align: left;" cols="2"><hi style="font-family:Courier New;font-size:9pt">org.omg.reqif.ordered</hi></cell></row><row><cell style="text-align: left;"><hi style="font-size:9pt">Values:</hi></cell><cell style="text-align: left;" cols="2"><hi style="font-family:Courier New;font-size:9pt">true | false</hi></cell></row><row><cell style="text-align: left;"><hi style="font-size:9pt">Meaning:</hi></cell><cell style="text-align: left;" cols="2"><hi style="font-family:Courier New;font-size:9pt">The composite properties of the class have a defined order.</hi></cell></row><row><cell style="text-align: left;"><hi style="font-size:9pt">Restrictions:</hi></cell><cell style="text-align: left;" cols="2"><hi style="font-family:Courier New;font-size:9pt">-</hi></cell></row><row><cell style="text-align: left;"><hi style="font-size:9pt">Tag id:</hi></cell><cell style="text-align: left;" cols="3"><hi style="font-family:Courier New;font-size:9pt">org.omg.reqif.order</hi></cell></row><row><cell style="text-align: left;"><hi style="font-size:9pt">Values:</hi></cell><cell style="text-align: left;" cols="3"><hi style="font-family:Courier New;font-size:9pt">one Integer</hi></cell></row><row><cell style="text-align: left;"><hi style="font-size:9pt">Meaning:</hi></cell><cell style="text-align: left;" cols="3"><hi style="font-family:Courier New;font-size:9pt">The position the class in its parent class.</hi></cell></row><row><cell style="text-align: left;"><hi style="font-size:9pt">Restrictions:</hi></cell><cell style="text-align: left;" cols="3"><hi style="font-family:Courier New;font-size:9pt">-</hi></cell></row><row><cell style="text-align: left;"><hi style="font-size:9pt">Tag id:</hi></cell><cell style="text-align: left;" cols="3"><hi style="font-family:Courier New;font-size:9pt">org.omg.reqif.reference.global</hi></cell></row><row><cell style="text-align: left;"><hi style="font-size:9pt">Values:</hi></cell><cell style="text-align: left;" cols="3"><hi style="font-family:Courier New;font-size:9pt">Collection of target property names.</hi></cell></row><row><cell style="text-align: left;"><hi style="font-size:9pt">Meaning:</hi></cell><cell style="text-align: left;" cols="3"><hi style="font-family:Courier New;font-size:9pt">Indicates if a reference can point to an element in an external document.</hi></cell></row><row><cell style="text-align: left;"><hi style="font-size:9pt">Restrictions:</hi></cell><cell style="text-align: left;" cols="3"><hi style="font-family:Courier New;font-size:9pt">only if property is composite</hi></cell></row><row><cell style="text-align: left;"><hi style="font-size:9pt">Tag id:</hi></cell><cell style="text-align: left;" cols="3"><hi style="font-family:Courier New;font-size:9pt">org.omg.reqif.fixed</hi></cell></row><row><cell style="text-align: left;"><hi style="font-size:9pt">Values:</hi></cell><cell style="text-align: left;" cols="3"><hi style="font-family:Courier New;font-size:9pt">Collection of attribute names.</hi></cell></row><row><cell style="text-align: left;"><hi style="font-size:9pt">Meaning:</hi></cell><cell style="text-align: left;" cols="3"><hi style="font-family:Courier New;font-size:9pt">Add a fixed attribute to the XML attribute element.</hi></cell></row><row><cell style="text-align: left;"><hi style="font-size:9pt">Restrictions:</hi></cell><cell style="text-align: left;" cols="3"><hi style="font-family:Courier New;font-size:9pt">-</hi></cell></row><row><cell style="text-align: left;" cols="2"><hi style="font-size:9pt">Tag id:</hi></cell><cell style="text-align: left;" cols="4"><hi style="font-family:Courier New;font-size:9pt">org.omg.reqif.datatype</hi></cell></row><row><cell style="text-align: left;" cols="2"><hi style="font-size:9pt">Values:</hi></cell><cell style="text-align: left;" cols="4"><hi style="font-family:Courier New;font-size:9pt">true | false</hi></cell></row><row><cell style="text-align: left;" cols="2"><hi style="font-size:9pt">Meaning:</hi></cell><cell style="text-align: left;" cols="4"><hi style="font-family:Courier New;font-size:9pt">Marks the class as datatype if value is set to true.</hi></cell></row><row><cell style="text-align: left;" cols="2"><hi style="font-size:9pt">Restrictions:</hi></cell><cell style="text-align: left;" cols="4"><hi style="font-family:Courier New;font-size:9pt">-</hi></cell></row><row><cell style="text-align: left;" cols="2"><hi style="font-size:9pt">Tag id:</hi></cell><cell style="text-align: left;" cols="4"><hi style="font-family:Courier New;font-size:9pt">org.omg.reqif.nsURI</hi></cell></row><row><cell style="text-align: left;" cols="2"><hi style="font-size:9pt">Values:</hi></cell><cell style="text-align: left;" cols="4"><hi style="font-family:Courier New;font-size:9pt">one String</hi></cell></row><row><cell style="text-align: left;" cols="2"><hi style="font-size:9pt">Meaning:</hi></cell><cell style="text-align: left;" cols="4"><hi style="font-family:Courier New;font-size:9pt">Specifies a namespace.</hi></cell></row><row><cell style="text-align: left;" cols="2"><hi style="font-size:9pt">Restrictions:</hi></cell><cell style="text-align: left;" cols="4"><list rend="numbered"><item><hi style="font-family:Courier New;font-size:9pt">Value must be a URI.</hi></item><item><hi style="font-family:Courier New;font-size:9pt">Ignored if org.omg.reqif.datatype not equals true.</hi> </item></list></cell></row><row><cell style="text-align: left;" cols="2"><hi style="font-size:9pt">Tag id:</hi></cell><cell style="text-align: left;" cols="4"><hi style="font-family:Courier New;font-size:9pt">org.omg.reqif.processContents</hi></cell></row><row><cell style="text-align: left;" cols="2"><hi style="font-size:9pt">Values:</hi></cell><cell style="text-align: left;" cols="4"><hi style="font-family:Courier New;font-size:9pt">"skip" | "lax" | "strict"</hi></cell></row><row><cell style="text-align: left;" cols="2"><hi style="font-size:9pt">Meaning:</hi></cell><cell style="text-align: left;" cols="4"><hi style="font-family:Courier New;font-size:9pt">Add a processContents attribute to the XML element.</hi></cell></row><row><cell style="text-align: left;" cols="2"><hi style="font-size:9pt">Restrictions:</hi></cell><cell style="text-align: left;" cols="4"><hi style="font-family:Courier New;font-size:9pt">Ignored if org.omg.reqif.datatype not equals true.</hi> </cell></row><row><cell style="text-align: left;" cols="2"><hi style="font-size:9pt">Tag id:</hi></cell><cell style="text-align: left;" cols="3"><hi style="font-family:Courier New;font-size:9pt">org.omg.reqif.min</hi></cell></row><row><cell style="text-align: left;" cols="2"><hi style="font-size:9pt">Values:</hi></cell><cell style="text-align: left;" cols="3"><hi style="font-family:Courier New;font-size:9pt">one Integer</hi></cell></row><row><cell style="text-align: left;" cols="2"><hi style="font-size:9pt">Meaning:</hi></cell><cell style="text-align: left;" cols="3"><hi style="font-family:Courier New;font-size:9pt">Specifies a minimal value.</hi></cell></row><row><cell style="text-align: left;" cols="2"><hi style="font-size:9pt">Restrictions:</hi></cell><cell style="text-align: left;" cols="3"><hi style="font-family:Courier New;font-size:9pt">Ignored if org.omg.reqif.datatype not equals true.</hi> </cell></row><row><cell style="text-align: left;" cols="2"><hi style="font-size:9pt">Tag id:</hi></cell><cell style="text-align: left;" cols="3"><hi style="font-family:Courier New;font-size:9pt">org.omg.reqif.max</hi></cell></row><row><cell style="text-align: left;" cols="2"><hi style="font-size:9pt">Values:</hi></cell><cell style="text-align: left;" cols="3"><hi style="font-family:Courier New;font-size:9pt">one Integer</hi></cell></row><row><cell style="text-align: left;" cols="2"><hi style="font-size:9pt">Meaning:</hi></cell><cell style="text-align: left;" cols="3"><hi style="font-family:Courier New;font-size:9pt">Specifies a maximal value.</hi></cell></row><row><cell style="text-align: left;" cols="2"><hi style="font-size:9pt">Restrictions:</hi></cell><cell style="text-align: left;" cols="3"><hi style="font-family:Courier New;font-size:9pt">Ignored if org.omg.reqif.datatype not equals true.</hi> </cell></row><row><cell style="text-align: left;" cols="2"><hi style="font-size:9pt">Tag id:</hi></cell><cell style="text-align: left;" cols="3"><hi style="font-family:Courier New;font-size:9pt">org.omg.reqif.xhtml_type</hi></cell></row><row><cell style="text-align: left;" cols="2"><hi style="font-size:9pt">Values:</hi></cell><cell style="text-align: left;" cols="3"><hi style="font-family:Courier New;font-size:9pt">true | false</hi></cell></row><row><cell style="text-align: left;" cols="2"><hi style="font-size:9pt">Meaning:</hi></cell><cell style="text-align: left;" cols="3"><hi style="font-family:Courier New;font-size:9pt">Marks the class as xhtml type.</hi></cell></row><row><cell style="text-align: left;" cols="2"><hi style="font-size:9pt">Restrictions:</hi></cell><cell style="text-align: left;" cols="3"><hi style="font-family:Courier New;font-size:9pt">Ignored if org.omg.reqif.datatype not equals true.</hi> </cell></row></table><list rend="numbered"><item><hi rend="bold" style="font-size:14pt">EBNF</hi></item></list><p>The EBNF for ReqIF schemas is listed below with rule description between sections.</p><p>____________________________________________________________________________________________________</p><p><hi style="font-family:Courier New;font-size:9pt">1. Schema	::=	1a:SchemaStart</hi></p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">    1d:XHTMLImports</hi></p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">    2:PackageSchema</hi></p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">    1e:SchemaEnd</hi></p><p><hi style="font-family:Courier New;font-size:9pt">1a. SchemaStart::= "&lt;xsd:schema xmlns:xsd='http://www.w3.org/2001/XMLSchema' xmlns:xml='http://www.w3.org/XML/1998/namespace' xmlns:xhtml='http://www.w3.org/1999/xhtml' xmlns:" ( 1b:Namespace ) "='" ( 1c:NamespaceURI ) "' targetNamespace='" ( 1c:NamespaceURI ) "'</hi></p><table rend="rules"><row><cell style="text-align: left;"/><cell style="text-align: left;"><p><hi style="font-family:Courier New;font-size:9pt">"elementFormDefault='qualified' attributeFormDefault='unqualified'&gt;</hi></p><p><hi style="font-family:Courier New;font-size:9pt">&lt;xsd:import namespace='http://www.w3.org/XML/1998/namespace' schemaLocation='http://www.w3.org/2001/xml.xsd'/&gt;"</hi></p></cell></row><row><cell style="text-align: left;"><hi style="font-family:Courier New;font-size:9pt">1b. Namespace::=</hi></cell><cell style="text-align: left;"><hi style="font-family:Courier New;font-size:9pt">"REQIF"</hi></cell></row><row><cell style="text-align: left;"><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">1c. NamespaceURI::= </hi></cell><cell style="text-align: left;"><hi style="font-family:Courier New;font-size:9pt">"http://www.omg.org/201003/reqif"</hi></cell></row><row><cell style="text-align: left;"><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">1d. XHTMLImports::= </hi></cell><cell style="text-align: left;"><hi style="font-family:Courier New;font-size:9pt">"&lt;xsd:import namespace='http://www.w3.org/1999/xhtml' schemaLocation='driver.xsd'/&gt;"</hi></cell></row><row><cell style="text-align: left;"><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">1e. SchemaEnd::=  </hi></cell><cell style="text-align: left;"><hi style="font-family:Courier New;font-size:9pt">"&lt;/xsd:schema&gt;"</hi></cell></row></table><p>__________________________________________________________________________________________________</p><table rend="rules"><row><cell style="text-align: left;">1.</cell><cell style="text-align: justify;">A schema consists of a schema XML element that contains import statements and declarations for the contents of the packages in the metamodel.</cell></row><row><cell style="text-align: left;">1a.</cell><cell style="text-align: left;">The schema XML element consists of the schema namespace attribute, namespace attributes for the other namespaces used in the schema.</cell></row><row><cell style="text-align: left;">1b.</cell><cell style="text-align: left;">The name of the Reqif namespace.</cell></row><row><cell style="text-align: left;">1c.</cell><cell style="text-align: left;">The URI of the Reqif namespace.</cell></row><row><cell style="text-align: left;">1d.</cell><cell style="text-align: left;">Fixed driver import declaration for xhtml module schemas.</cell></row><row><cell style="text-align: left;">1e.</cell><cell style="text-align: left;">The end of the schema XML element.</cell></row></table><p>__________________________________________________________________________________________________</p><p><hi style="font-family:Courier New;font-size:9pt">2. PackageSchema ::=	3:GlobalElement</hi></p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">     4:FixedRefTypes</hi></p><p><hi style="font-family:Courier New;font-size:9pt">( 5:ClassTypeDef )*</hi></p><p><hi style="font-family:Courier New;font-size:9pt">( 6:EnumSchema )*</hi></p><p><hi style="font-family:Courier New;font-size:9pt">( 8:TypeSchema )*</hi></p><p>__________________________________________________________________________________________________</p><list rend="numbered"><item>The schema contribution from a package consists of the declarations am global element, fixed reference types, classes, enumerations, and type definitions.</item></list><p>__________________________________________________________________________________________________</p><list rend="numbered"><item><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">GlobalElement::=	"&lt;xsd:element name='" 3a:GlobalElementName "' </hi></item></list><p><hi style="font-family:Courier New;font-size:9pt">type='" 1b:Namespace " : " 3b:GlobalElementType"' &gt;    	&lt;/xsd:element&gt;"</hi></p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">3a. GlobalElementName   ::= // Name of Global Element // </hi></p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">3b. GlobalElementType   ::= // Name of Global Element Type // </hi></p><p>__________________________________________________________________________________________________</p><list rend="numbered"><item>If the tag org.omg.reqif.global_element is true, the rule describes the declaration of a global element in the metamodel as an element. In the package there should be exactly one element with tag org.omg.reqif.global_element set to true.</item></list><p>3a.	The name of the global element. 3b.	The type of the global element.</p><p>__________________________________________________________________________________________________</p><list rend="numbered"><item><hi style="font-family:Courier New;font-size:9pt">FixedRefTypes	::=	"&lt;xsd:simpleType name='LOCAL-REF'&gt;</hi></item></list><p style="text-align: center;"><hi style="font-family:Courier New;font-size:9pt">&lt;xsd:restriction base='xsd:IDREF'/&gt;</hi></p><p><hi style="font-family:Courier New;font-size:9pt">&lt;/xsd:simpleType&gt;</hi></p><p style="text-align: center;"><hi style="font-family:Courier New;font-size:9pt">&lt;xsd:simpleType name='GLOBAL-REF'&gt;</hi></p><p style="text-align: center;"><hi style="font-family:Courier New;font-size:9pt">&lt;xsd:restriction base='xsd:string'/&gt;</hi></p><p><hi style="font-family:Courier New;font-size:9pt">&lt;/xsd:simpleType&gt;"</hi></p><p>__________________________________________________________________________________________________</p><list rend="numbered"><item>This rule declares two simple types to be used as type in non-containment associations. LOCAL-REF wraps xsd:IDREF type to point to an identifier inside the same document. GLOBAL-REF can point to an identifier in an arbitrary document.</item></list><p>__________________________________________________________________________________________________</p><list rend="numbered"><item><hi style="font-family:Courier New;font-size:9pt">ClassTypeDef 	::=	"&lt;xsd:complexType name=’" //Name of Class// "'&gt;" ( "&lt;xsd:sequence&gt;" | "&lt;xsd:all&gt;" )</hi></item></list><p style="text-align: center;"><hi style="font-family:Courier New;font-size:9pt">( 5a:ClassElementAttribute )*</hi></p><p style="text-align: center;"><hi style="font-family:Courier New;font-size:9pt">( 5b:ClassReferences )*</hi></p><p style="text-align: center;"><hi style="font-family:Courier New;font-size:9pt">( 5c:ClassCompositions) *</hi></p><p style="text-align: center;"><hi style="font-family:Courier New;font-size:9pt">( "&lt;/xsd:sequence&gt;" | "&lt;/xsd:all&gt;" )</hi></p><p style="text-align: center;"><hi style="font-family:Courier New;font-size:9pt">( 5d:ClassAttribute )*</hi></p><p style="text-align: center;"><hi style="font-family:Courier New;font-size:9pt">( 5e:ClassAttributeRef)*</hi></p><p><hi style="font-family:Courier New;font-size:9pt">"&lt;/xsd:complexType&gt;"</hi></p><p><hi style="font-family:Courier New;font-size:9pt">5a. ClassElementAttribute ::=	"&lt;xsd:element name='" //Name of Attribute// "' minOccurs='"  // Minimum // "' maxOccurs='" // Maximum // "'"</hi></p><p style="text-align: center;"><hi style="font-family:Courier New;font-size:9pt">5g:FixedAttribute</hi></p><p><hi style="font-family:Courier New;font-size:9pt">"type=’" //Name of Attribute Type// "’/&gt;"</hi></p><p><hi style="font-family:Courier New;font-size:9pt">5b. ClassReferences ::= "&lt;xsd:element name='" // Name of Target Property // "' minOccurs="( "'0'" | "'1'" )" maxOccurs='1'&gt; &lt;xsd:complexType&gt;</hi></p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">     &lt;xsd:choice  minOccurs='" // Minimum of Target Property // "'  maxOccurs='" // Maximum of Target Property //"'&gt;"  ( "&lt;xsd:element </hi></p><p><seg xml:space="preserve">   </seg><hi style="font-family:Courier New;font-size:9pt">	 name='" // Name of Target Class // "-REF'</hi></p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">      type='" 1b:Namespace ":" ( "GOBAL" | "LOCAL" ) "-REF'      /&gt;")+  "&lt;/xsd:choice&gt;</hi></p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">     &lt;/xsd:complexType&gt;</hi></p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">   &lt;/xsd:element&gt;"</hi></p><p><hi style="font-family:Courier New;font-size:9pt">5c. ClassCompositions::= "&lt;xsd:element name='" // Name of Target Property // "' minOccurs="( "'0'" | "'1'" )" maxOccurs='1'&gt; &lt;xsd:complexType&gt; &lt;xsd:choice minOccurs='" // Minimum of Target Property // "' maxOccurs='" // Maximum of Target Property // "'&gt;"</hi></p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">    ( "&lt;xsd:element </hi></p><p style="text-align: center;"><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">    name='" // Name of Target (Sub) Class // "'</hi></p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">    type='" 1b:Namespace ":" // Name of Target Class // </hi> </p><p><hi style="font-family:Courier New;font-size:9pt">"' /&gt; )+</hi></p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">       "&lt;/xsd:choice&gt;</hi></p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">    &lt;/xsd:complexType&gt;</hi></p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;/xsd:element&gt;" </hi></p><table rend="rules"><row><cell style="text-align: left;"><hi style="font-family:Courier New;font-size:9pt">5d. ClassAttribute</hi></cell><cell style="text-align: left;"><p><hi style="font-family:Courier New;font-size:9pt">::=	"&lt;xsd:attribute name='" // Name of Attribute // "' type='" // Type of Attribute // "'"</hi></p><p><hi style="font-family:Courier New;font-size:9pt">5f:UseAttribute</hi></p><p><hi style="font-family:Courier New;font-size:9pt">"/&gt;"</hi></p></cell></row><row><cell style="text-align: left;"><hi style="font-family:Courier New;font-size:9pt">5e. ClassAttributeRef</hi></cell><cell style="text-align: left;"><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">::= "&lt;xsd:attribute </hi></cell></row></table><p style="text-align: center;"><hi style="font-family:Courier New;font-size:9pt">ref='" // Name of Attribute Type // "'"</hi></p><p><hi style="font-family:Courier New;font-size:9pt">5f:UseAttribute</hi></p><p><hi style="font-family:Courier New;font-size:9pt">"/&gt;"</hi></p><p><hi style="font-family:Courier New;font-size:9pt">5f. UseAttribute	::= "use=" ( "'prohibited'" | "'optional'" | "'required'" ) 5g. FixedAttribute	::=	( "fixed='" // fixed value // "'" )?</hi></p><p><hi style="font-family:Courier New;font-size:9pt">_____________________________________________________________________________________________</hi></p><p>5.	These rules describe the declaration of a class in the metamodel as an XML complex type with XML attributes and content elements. If the tag org.omg.reqif.ordered is true, the contents of the class are put in a sequence, otherwise they are put in an XML all element. Content classes that put in the sequence should be tagged by org.omg.reqif.order tag, which defines the position by an integer value. Classes in the metamodel with a tag org.omg.reqif.xsd_*use the rules 5a, 5d, or 5e.</p><p>5a.	XML elements for the attributes of the class if the name is contained in the values of the tag org.omg.reqif.xsd_element or the target class is the data type XhtmlContent. Inherited attributes are also included.</p><p>5b.	The XML element for each reference of the class that is no composite reference. The name is the name of target property. The attribute minOccurs is set to 0 if the multiplicity lower equal 0 else to 1, maxOccurs is always set to 1. The element is defined by a complex type. The included choice element represents the multiplicities of the reference. The minOccurs attribute shows the lower value of the reference target property, maxOccurs the upper value. The choice element contains one of more elements. The name of the element is the name of the association target class or if this class is abstract, the name of the non-abstract sub class, decorated with -REF. The type of the element is one of the reference types defined in 4. If the association target role name is contained in the value of the tag org.omg.reqif.reference.global, GLOBAL-REF will be appended, else LOCAL-REF. </p><p>Global means that the reference can point to an Element outside this document. Inherited references are also included. </p><table rend="rules"><row><cell style="text-align: left;">5c.</cell><cell style="text-align: justify;">This rule applies to references that are composite. It differs from rule 5b only in the definition of the element type of the association target class. </cell></row><row><cell style="text-align: left;">5d.</cell><cell style="text-align: left;">Attributes of the class in the metamodel which names are not values of the tag org.omg.reqif.xsd_element are declared as XML attributes with name, type, and use attributes. </cell></row><row><cell style="text-align: left;">5e.</cell><cell style="text-align: justify;">Attributes of the class in the metamodel which names are values of the tag org.omg.reqif.xsd_attribute_reference are declared as XML attributes with a ref attribute which refers to the referenced element and a use attribute.</cell></row><row><cell style="text-align: left;">5f.</cell><cell style="text-align: justify;">The attribute use controls the use of the containing element. The value is derived from the multiplicity of the attribute from the metamodel. If the upper value is 0, then prohibited is used, else if the lower value is 0, then use is set to optional, else if the lower value is greater than 0, required is used. </cell></row><row><cell style="text-align: left;">5g.</cell><cell style="text-align: left;">If the name of the attribute is contained in the values of the tag.org.omg.reqif.fixed, this rule is applied. </cell></row></table><p>__________________________________________________________________________________________________</p><p><hi style="font-family:Courier New;font-size:9pt">6. EnumSchema::=	"&lt;xsd:simpleType name='" // Name of Enumeration Class // "'&gt; &lt;xsd:restriction base='xsd:string'&gt;" ( 6a:EnumLiteral )*</hi></p><p><hi style="font-family:Courier New;font-size:9pt">"&lt;/xsd:restriction&gt;</hi></p><p><hi style="font-family:Courier New;font-size:9pt">&lt;/xsd:simpleType&gt;"</hi></p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">6a. EnumLiteral::="&lt;xsd:enumeration value='" // Name of Literal from Enumeration Class // "' /&gt;" </hi></p><p>__________________________________________________________________________________________________</p><p>6.	The enumeration schema contribution consists of a simple type derived from string whose legal values are the enumeration literals. </p><p>6a.	Each enumeration literal is put in the value XML attribute of an enumeration XML element.</p><p>__________________________________________________________________________________________________</p><table rend="rules"><row><cell style="text-align: left;"><hi style="font-family:Courier New;font-size:9pt">7. TypeSchema	::=</hi></cell><cell style="text-align: justify;"><hi style="font-family:Courier New;font-size:9pt">( 7a:DatatypeSchema | 7b:XhtmlType)</hi></cell></row><row><cell style="text-align: left;"><hi style="font-family:Courier New;font-size:9pt">7a. DatatypeSchema::=</hi></cell><cell style="text-align: left;"><hi style="font-family:Courier New;font-size:9pt">"&lt;xsd:complexType</hi></cell></row></table><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">  name='" // Name of Datatype // "' &gt;   &lt;xsd:sequence&gt;</hi></p><p><hi style="font-family:Courier New;font-size:9pt">&lt;xsd:any   	   namespace='" // Namespace URI of Datatype // "'    processContents=" ( "'skip'"|"'lax'"|"'strict'")"    minOccurs='" // Minimum // "'    maxOccurs='" // Maximum // "' /&gt;</hi></p><p><hi style="font-family:Courier New;font-size:9pt">&lt;/xsd:any&gt;</hi></p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">  &lt;/xsd:sequence&gt;</hi></p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">  &lt;/xsd:complexType&gt;"</hi></p><p><hi style="font-family:Courier New;font-size:9pt">7b. XhtmlType	::= "&lt;xsd:complexType name='" // Name of Datatype // "' &gt; &lt;xsd:group ref='xhtml.BlkStruct.class' /&gt;</hi></p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">   &lt;/xsd:complexType&gt;"</hi></p><p>__________________________________________________________________________________________________</p><p style="text-align: justify;">7. These rules describe the declaration of types for classes of the metamodel where the value of the tag org.omg.reqif.datatype equals true. The type schema contains a general datatype schema and the declaration of an xhtml type. </p><p>7a.	The datatype schema contains the name of the type and a sequence with an any element. This element contains </p><p>the attributes namespace, processContents minOccurs and maxOccurs. The value of the attribute namespace is the value of the tag org.omg.reqif.nsURI. The value of the attribute processContents is the value of the tag org.omg.reqif.processContents and the values from minOccurs and maxOccurs are the values of the tags org.omg.reqif.min and org.omg.reqif.max.</p><p>7b.	This rule declares a complex type which has an xhtml content. The content is defined by the reference ‘xhtml.BlkStruct.class.’ The rule is used if the value of the tag org.omg.reqif.xhtml_type is true. </p><p style="text-align: justify;">NOTE: The names of the XML elements are constructed by converting the information type’s name into uppercase letters with additional hyphens (“-”) indicating word separations that have originally been indicated by uppercase letters of by a numeric character inside the name. Thus, by definition, a “word” is one of the following: </p><list rend="bulleted"><item>First letter is upper-case followed by lower-case letters.</item><item>All letters are upper-case.</item><item>Contiguous numeric characters.</item></list><p>For example, the name <hi style="font-family:Courier New">TestECUClass12ADC</hi> is converted into an XML element with name  <hi style="font-family:Courier New">TEST-ECU-CLASS-12-ADC</hi>.</p><p>The corresponding driver.xsd:</p><p><hi style="font-family:Courier New;font-size:9pt">&lt;?xml version="1 .0" encoding="UTF-8"?&gt;</hi> </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;xsd: schema xmlns:xsd="</hi> <ref target="http://www.w3.org/2001/XMLSchema"><hi rend="underline color(0000FF)" style="font-family:Courier New;font-size:9pt">http://www.w3.org/2001/XMLSchema</hi></ref><hi style="font-family:Courier New;font-size:9pt">" targetNamespace="http://</hi> <ref target="http://www.w3.org/1999/xhtml"><hi rend="underline color(0000FF)" style="font-family:Courier New;font-size:9pt">www.w3 .org/1999/xhtml</hi></ref><hi style="font-family:Courier New;font-size:9pt">" xmlns:xh11d="</hi> <ref target="http://www.w3.org/1999/xhtml/datatypes/"><hi rend="underline color(0000FF)" style="font-family:Courier New;font-size:9pt">http://www.w3.org/1999/xhtml/datatypes/</hi></ref><hi style="font-family:Courier New;font-size:9pt">" xmlns="</hi> <ref target="http://www.w3.org/1999/xhtml"><hi rend="underline color(0000FF)" style="font-family:Courier New;font-size:9pt">http://www.w3.org/1999/xhtml</hi></ref><hi style="font-family:Courier New;font-size:9pt">" elementFormDefault="qualified" &gt;</hi>  </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;xsd:import namespace=http:</hi><ref target="http://www.w3.org/XML/1998/namespace"><hi rend="underline color(0000FF)" style="font-family:Courier New;font-size:9pt">//www.w3 .org/XML/1998/namespace</hi></ref><ref target="http://www.w3.org/2001/xml.xsd" xml:space="preserve"> </ref><ref target="http://www.w3.org/2001/xml.xsd"><hi style="font-family:Courier New;font-size:9pt">schemaLocation="http://www.w3.org/2001/xml.xsd" /&gt;</hi></ref></p><p><ref target="http://www.w3.org/1999/xhtml/datatypes/"><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd:import namespace="http://www.w3.org/1999/xhtml/datatypes/" </hi></ref><ref target="http://www.w3.org/1999/xhtml/datatypes/" xml:space="preserve"> </ref><ref target="http://www.w3.org/1999/xhtml/datatypes/"><hi style="font-family:Courier New;font-size:9pt">schemaLocation="http://www.w3.org/TR/xhtml-modularization/SCHEMA/xhtml</hi></ref><ref target="http://www.w3.org/1999/xhtml/datatypes/" xml:space="preserve"> </ref><ref target="http://www.w3.org/1999/xhtml/datatypes/"><hi style="font-family:Courier New;font-size:9pt">datatypes-1.xsd" /&gt;</hi></ref></p><p><ref target="http://www.w3.org/TR/xhtml-"><hi style="font-family:Courier New;font-size:9pt">&lt;xsd:include schemaLocation="http://www.w3.org/TR/xhtml-</hi></ref><ref target="http://www.w3.org/TR/xhtml-" xml:space="preserve"> </ref><ref target="http://www.w3.org/TR/xhtml-"><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">modularization/SCHEMA/xhtml-framework-1.xsd" /&gt; </hi></ref> <ref target="http://www.w3.org/TR/xhtml-"><hi style="font-family:Courier New;font-size:9pt">&lt;xsd:include schemaLocation="http://ww</hi></ref><ref target="http://www.w3.org/TR/xhtml-"><hi style="font-family:Courier New;font-size:9pt">w.w3.org/TR/xhtml-</hi></ref><ref target="http://www.w3.org/TR/xhtml-" xml:space="preserve"> </ref><ref target="http://www.w3.org/TR/xhtml-"><hi style="font-family:Courier New;font-size:9pt">modularization/SCHEMA/xhtml-text-1.xsd" /&gt;</hi></ref><ref target="http://www.w3.org/TR/xhtml-" xml:space="preserve"> </ref></p><p><ref target="http://www.w3.org/TR/xhtml-"><hi style="font-family:Courier New;font-size:9pt">&lt;xsd:include schemaLocation="http://ww</hi></ref><ref target="http://www.w3.org/TR/xhtml-"><hi style="font-family:Courier New;font-size:9pt">w.w3.org/TR/xhtml-</hi></ref><ref target="http://www.w3.org/TR/xhtml-" xml:space="preserve"> </ref><ref target="http://www.w3.org/TR/xhtml-"><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">modularization/SCHEMA/xhtml-hypertext-1.xsd" /&gt; </hi></ref><ref target="http://www.w3.org/TR/xhtml-" xml:space="preserve"> </ref></p><p><ref target="http://www.w3.org/TR/xhtml-"><hi style="font-family:Courier New;font-size:9pt">&lt;xsd:include schemaLocation="http://ww</hi></ref><ref target="http://www.w3.org/TR/xhtml-"><hi style="font-family:Courier New;font-size:9pt">w.w3.org/TR/xhtml-</hi></ref><ref target="http://www.w3.org/TR/xhtml-" xml:space="preserve"> </ref><ref target="http://www.w3.org/TR/xhtml-"><hi style="font-family:Courier New;font-size:9pt">modularization/SCHEMA/xhtml-list-1.xsd" /&gt;</hi></ref><ref target="http://www.w3.org/TR/xhtml-" xml:space="preserve"> </ref></p><p><ref target="http://www.w3.org/TR/xhtml-"><hi style="font-family:Courier New;font-size:9pt">&lt;xsd:include schemaLocation="http://ww</hi></ref><ref target="http://www.w3.org/TR/xhtml-modularization/SCHEMA/xhtml-edit-1"><hi style="font-family:Courier New;font-size:9pt">w.w3.org/TR/xhtml</hi></ref><ref target="http://www.w3.org/TR/xhtml-modularization/SCHEMA/xhtml-edit-1" xml:space="preserve"> </ref><ref target="http://www.w3.org/TR/xhtml-modularization/SCHEMA/xhtml-edit-1"><hi style="font-family:Courier New;font-size:9pt">modularization/SCHEMA/xhtml-edit-1.xsd" /&gt;</hi></ref><ref target="http://www.w3.org/TR/xhtml-modularization/SCHEMA/xhtml-edit-1" xml:space="preserve"> </ref></p><p><ref target="http://www.w3.org/TR/xhtml-modularization/SCHEMA/xhtml-edit-1"><hi style="font-family:Courier New;font-size:9pt">&lt;xsd:include schemaLocation="http://ww</hi></ref><ref target="http://www.w3.org/TR/xhtml-modularization/SCHEMA/xhtml-pres-1"><hi style="font-family:Courier New;font-size:9pt">w.w3.org/TR/xhtml</hi></ref><ref target="http://www.w3.org/TR/xhtml-modularization/SCHEMA/xhtml-pres-1" xml:space="preserve"> </ref><ref target="http://www.w3.org/TR/xhtml-modularization/SCHEMA/xhtml-pres-1"><hi style="font-family:Courier New;font-size:9pt">modularization/SCHEMA/xhtml-pres-1.xsd" /&gt;</hi></ref><ref target="http://www.w3.org/TR/xhtml-modularization/SCHEMA/xhtml-pres-1" xml:space="preserve"> </ref></p><p><ref target="http://www.w3.org/TR/xhtml-modularization/SCHEMA/xhtml-pres-1"><hi style="font-family:Courier New;font-size:9pt">&lt;xsd:include schemaLocation="http://ww</hi></ref><ref target="http://www.w3.org/TR/xhtml-"><hi style="font-family:Courier New;font-size:9pt">w.w3.org/TR/xhtml-</hi></ref><ref target="http://www.w3.org/TR/xhtml-" xml:space="preserve"> </ref><ref target="http://www.w3.org/TR/xhtml-"><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">modularization/SCHEMA/xhtml-inlstyle-1.xsd" /&gt; </hi></ref><ref target="http://www.w3.org/TR/xhtml-" xml:space="preserve"> </ref></p><p><ref target="http://www.w3.org/TR/xhtml-"><hi style="font-family:Courier New;font-size:9pt">&lt;xsd:include schemaLocation="http://ww</hi></ref><ref target="http://www.w3.org/TR/xhtml-"><hi style="font-family:Courier New;font-size:9pt">w.w3.org/TR/xhtml-</hi></ref><ref target="http://www.w3.org/TR/xhtml-" xml:space="preserve"> </ref><ref target="http://www.w3.org/TR/xhtml-"><hi style="font-family:Courier New;font-size:9pt">modularization/SCHEMA/xhtml-object-1.xsd" /&gt;</hi></ref><ref target="http://www.w3.org/TR/xhtml-" xml:space="preserve"> </ref></p><p><ref target="http://www.w3.org/TR/xhtml-"><hi style="font-family:Courier New;font-size:9pt">&lt;xsd:include schemaLocation="http://ww</hi></ref><ref target="http://www.w3.org/TR/xhtml-"><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">w.w3.org/TR/xhtml- </hi></ref><ref target="http://www.w3.org/TR/xhtml-" xml:space="preserve"> </ref><ref target="http://www.w3.org/TR/xhtml-"><hi style="font-family:Courier New;font-size:9pt">modularization/SCHEMA/xhtml-table-1.xsd" /&gt;</hi></ref></p><p><hi style="font-family:Courier New;font-size:9pt">&lt;xsd:attributeGroup name="xhtml.I18n.extra.attrib"/&gt;</hi></p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd:attributeGroup name="xhtml.Common.extra"&gt; </hi> </p><p style="text-align: center;"><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd:attributeGroup ref="xhtml.style.attrib"/&gt; </hi> </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;/xsd: attributeGroup&gt;</hi></p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd:attributeGroup name="xhtml.Core.extra.attrib"/&gt; </hi></p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd:attributeGroup name="xhtml.Global.core.extra.attrib"/&gt; </hi></p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd:attributeGroup name="xhtml.Global.I18n.extra.attrib"/&gt; </hi></p><p><hi style="font-family:Courier New;font-size:9pt">&lt;xsd:attributeGroup name="xhtml.Global.Common.extra"/&gt;</hi></p><p><hi style="font-family:Courier New;font-size:9pt">&lt;xsd:group name="xhtml.HeadOpts.mix"&gt; &lt;xsd: choice&gt;</hi>  </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;xsd:element name="object" type="xhtml.object.type" /&gt;  &lt;/xsd: choice&gt;</hi>  </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;/xsd: group&gt;</hi></p><p><hi style="font-family:Courier New;font-size:9pt">&lt;xsd:group name="xhtml.Edit.class"&gt; &lt;xsd: choice&gt;</hi></p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd:element name="ins" type="xhtml.edit.type" /&gt; </hi> </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;xsd:element name="del" type="xhtml.edit.type" /&gt;  &lt;/xsd: choice&gt;</hi>  </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;/xsd: group&gt;</hi></p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd:group name="xhtml.Misc.extra"&gt; </hi> </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;xsd:sequence /&gt;</hi> </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;/xsd: group&gt;</hi></p><p><hi style="font-family:Courier New;font-size:9pt">&lt;xsd:group name="xhtml.Misc.class"&gt; &lt;xsd: choice&gt;</hi>  </p><p style="text-align: center;"><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd:group ref="xhtml.Edit.class" /&gt; </hi> </p><p style="text-align: center;"><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd:group ref="xhtml.Misc.extra" /&gt; </hi> </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;/xsd: choice&gt; &lt;/xsd: group&gt;</hi> </p><p><ref target="http://xhtml.br/"><hi style="font-family:Courier New;font-size:9pt">&lt;xsd: group name="xhtml.InlStruct.Class"&gt;</hi></ref><ref target="http://xhtml.br/" xml:space="preserve"> </ref><ref target="http://xhtml.br/"><hi style="font-family:Courier New;font-size:9pt">&lt;xsd: choice&gt;</hi></ref><ref target="http://xhtml.br/" xml:space="preserve"> </ref></p><p><ref target="http://xhtml.br/"><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd:element name="br" type="xhtml.br.type" /&gt; </hi></ref><ref target="http://xhtml.br/" xml:space="preserve"> </ref></p><p><ref target="http://xhtml.br/"><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd:element name="span" type="xhtml.span.type" /&gt; </hi></ref><ref target="http://xhtml.br/" xml:space="preserve"> </ref><ref target="http://xhtml.br/"><hi style="font-family:Courier New;font-size:9pt">&lt;/xsd: choice&gt;</hi></ref><ref target="http://xhtml.br/" xml:space="preserve"> </ref></p><p><ref target="http://xhtml.br/"><hi style="font-family:Courier New;font-size:9pt">&lt;/xsd: group&gt;</hi></ref></p><p><hi style="font-family:Courier New;font-size:9pt">&lt;xsd: group name="xhtml.InlPhras.Class"&gt; &lt;xsd: choice&gt;</hi>  </p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd:element name="em" type="xhtml.em.type" /&gt; </hi> </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;xsd:element name="strong" type="xhtml.strong.type" /&gt;</hi> </p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd:element name="dfn" type="xhtml.dfn.type" /&gt; </hi> </p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd:element name="code" type="xhtml.code.type" /&gt; </hi> </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;xsd:element name="samp" type="xhtml.samp.type" /&gt;</hi> </p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd:element name="kbd" type="xhtml.kbd.type" /&gt; </hi> </p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd:element name="var" type="xhtml.var.type" /&gt; </hi> </p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd:element name="cite" type="xhtml.cite.type" /&gt; </hi> </p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd:element name="abbr" type="xhtml.abbr.type" /&gt; </hi> </p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd:element name="acronym" type="xhtml.acronym.type" /&gt; </hi> </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;xsd:element name="q" type="xhtml.q.type" /&gt;</hi> </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;/xsd: choice&gt;</hi> </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;/xsd: group&gt;</hi></p><p><hi style="font-family:Courier New;font-size:9pt">&lt;xsd: group name="xhtml.InlPres.Class"&gt; &lt;xsd: choice&gt;</hi> </p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd: element name="tt" type="xhtml.InlPres.type" /&gt; </hi> </p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd:element name="i" type="xhtml.InlPres.type" /&gt; </hi> </p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd:element name="b" type="xhtml.InlPres.type" /&gt; </hi> </p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd: element name="big" type="xhtml.InlPres.type" /&gt; </hi> </p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd:element name="small" type="xhtml.InlPres.type" /&gt; </hi> </p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd: element name="sub" type="xhtml.InlPres.type" /&gt; </hi> </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;xsd: element name="sup" type="xhtml.InlPres.type" /&gt; &lt;/xsd: choice&gt;</hi> </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;/xsd: group&gt;</hi></p><p><hi style="font-family:Courier New;font-size:9pt">&lt;xsd:group name="xhtml.Anchor.class"&gt; &lt;xsd: sequence&gt;</hi> </p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd:element name="a" type="xhtml.a.type" /&gt; </hi> </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;/xsd: sequence&gt;</hi> </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;/xsd: group&gt;</hi></p><p><hi style="font-family:Courier New;font-size:9pt">&lt;xsd: group name="xhtml.InlSpecial.Class"&gt; &lt;xsd: choice&gt;</hi> </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;xsd:element name="object" type="xhtml.object.type" /&gt;  &lt;/xsd: choice&gt;</hi>  </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;/xsd: group&gt;</hi></p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd: group name="xhtml.Inline.extra"&gt; </hi> </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;xsd:sequence /&gt;</hi> </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;/xsd: group&gt;</hi></p><p><hi style="font-family:Courier New;font-size:9pt">&lt;xsd: group name="xhtml.Inline.Class"&gt; &lt;xsd: choice&gt;</hi>  </p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd: group ref="xhtml.InlStruct.class" /&gt;  &lt;xsd: group ref="xhtml.InlPhras.class" /&gt;  &lt;xsd: group ref="xhtml.InlPres.class" /&gt; </hi>   </p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd: group ref="xhtml.Anchor.class" /&gt; </hi> </p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd: group ref="xhtml.InlSpecial.class" /&gt; </hi> </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;xsd: group ref="xhtml.Inline.Extra" /&gt;</hi> </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;/xsd: choice&gt;</hi> </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;/xsd: group&gt;</hi></p><p><hi style="font-family:Courier New;font-size:9pt">&lt;xsd:group name="xhtml.InlNoRuby.class"&gt;  &lt;xsd: choice&gt;</hi> </p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd: group ref="xhtml.InlStruct.class" /&gt; </hi> </p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd: group ref="xhtml.InlPhras.class" /&gt; </hi> </p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd: group ref="xhtml.InlPres.class" /&gt; </hi> </p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd:group ref="xhtml.Anchor.class" /&gt; </hi> </p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd: group ref="xhtml.InlSpecial.class" /&gt; </hi> </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;xsd: group ref="xhtml.Inline.Extra" /&gt;</hi> </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;/xsd: choice&gt;</hi> </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;/xsd: group&gt;</hi></p><p><hi style="font-family:Courier New;font-size:9pt">&lt;xsd: group name="xhtml.InlinePre.mix"&gt; &lt;xsd: choice&gt;</hi>  </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;xsd: group ref="xhtml.InlStruct.class" /&gt;</hi> </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;xsd: group ref="xhtml.InlPhras.class" /&gt;</hi> </p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd: element name="tt" type="xhtml.InlPres.type" /&gt; </hi> </p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd:element name="i" type="xhtml.InlPres.type" /&gt; </hi> </p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd: element name="b" type="xhtml.InlPres.type" /&gt; </hi> </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;xsd:group ref="xhtml.Anchor.class" /&gt;</hi> </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;xsd:group ref="xhtml.Misc.class" /&gt;</hi> </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;xsd: group ref="xhtml.Inline.Extra" /&gt;</hi> </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;/xsd: choice&gt;</hi> </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;/xsd: group&gt;</hi></p><p><hi style="font-family:Courier New;font-size:9pt">&lt;xsd:group name="xhtml.InlNoAnchor.class"&gt;  &lt;xsd: choice&gt;</hi> </p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd: group ref="xhtml.InlStruct.class" /&gt; </hi> </p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd: group ref="xhtml.InlPhras.class" /&gt; </hi> </p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd: group ref="xhtml.InlPres.class" /&gt; </hi> </p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd: group ref="xhtml.InlSpecial.class" /&gt; </hi> </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;xsd: group ref="xhtml.Inline.Extra" /&gt;</hi> </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;/xsd: choice&gt;</hi> </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;/xsd: group&gt;</hi></p><p><hi style="font-family:Courier New;font-size:9pt">&lt;xsd: group name="xhtml.InlNoAnchor.mix"&gt; &lt;xsd: choice&gt;</hi>  </p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd: group ref="xhtml.InlNoAnchor.class" /&gt; </hi> </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;xsd:group ref="xhtml.Misc.class" /&gt;</hi> </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;/xsd: choice&gt;</hi> </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;/xsd: group&gt;</hi></p><p><hi style="font-family:Courier New;font-size:9pt">&lt;xsd: group name="xhtml.Inline.mix"&gt; &lt;xsd: choice&gt;</hi>  </p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd: group ref="xhtml.Inline.class" /&gt; </hi> </p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd:group ref="xhtml.Misc.class" /&gt; </hi> </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;/xsd: choice&gt; &lt;/xsd: group&gt; &lt;xsd:group name="xhtml.Heading.class"&gt; &lt;xsd: choice&gt;</hi>   </p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd:element name="h1" type="xhtml.h1.type" /&gt; </hi> </p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd:element name="h2" type="xhtml.h2.type" /&gt; </hi> </p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd:element name="h3" type="xhtml.h3.type" /&gt; </hi> </p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd:element name="h4" type="xhtml.h4.type" /&gt; </hi> </p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd:element name="h5" type="xhtml.h5.type" /&gt; </hi> </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;xsd:element name="h6" type="xhtml.h6.type" /&gt;</hi> </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;/xsd: choice&gt;</hi> </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;/xsd: group&gt;</hi></p><p><hi style="font-family:Courier New;font-size:9pt">&lt;xsd:group name="xhtml.List.class"&gt; &lt;xsd: choice&gt;</hi>  </p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd:element name="ul" type="xhtml.ul.type" /&gt; </hi> </p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd:element name="ol" type="xhtml.ol.type" /&gt; </hi> </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;xsd:element name="dl" type="xhtml.dl.type" /&gt;</hi> </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;/xsd: choice&gt;</hi> </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;/xsd: group&gt;</hi></p><p><hi style="font-family:Courier New;font-size:9pt">&lt;xsd:group name="xhtml.Table.class"&gt; &lt;xsd: choice&gt;</hi>  </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;xsd:element name="table" type="xhtml.table.type" /&gt;  &lt;/xsd: choice&gt;</hi>  </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;/xsd: group&gt;</hi></p><p><hi style="font-family:Courier New;font-size:9pt">&lt;xsd:group name="xhtml.BlkStruct.class"&gt; &lt;xsd: choice&gt;</hi>  </p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd:element name="p" type="xhtml.p.type" /&gt; </hi> </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;xsd:element name="div" type="xhtml.div.type" /&gt;  &lt;/xsd: choice&gt;</hi>  </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;/xsd: group&gt;</hi></p><p><hi style="font-family:Courier New;font-size:9pt">&lt;xsd:group name="xhtml.BlkPhras.class"&gt; &lt;xsd: choice&gt;</hi> </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;xsd:element name="pre" type="xhtml.pre.type" /&gt;</hi> </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;xsd:element name="blockquote" type="xhtml.blockquote.type" /&gt;</hi></p><p><hi style="font-family:Courier New;font-size:9pt">&lt;xsd:element name="address" type="xhtml.address.type" /&gt;  &lt;/xsd: choice&gt;</hi>  </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;/xsd: group&gt;</hi></p><p><ref target="http://xhtml.hr/"><hi style="font-family:Courier New;font-size:9pt">&lt;xsd:group name="xhtml.BlkPres.class"&gt;</hi></ref><ref target="http://xhtml.hr/" xml:space="preserve"> </ref><ref target="http://xhtml.hr/"><hi style="font-family:Courier New;font-size:9pt">&lt;xsd: sequence&gt;</hi></ref><ref target="http://xhtml.hr/" xml:space="preserve"> </ref></p><p><ref target="http://xhtml.hr/"><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd:element name="hr" type="xhtml.hr.type" /&gt; </hi></ref><ref target="http://xhtml.hr/" xml:space="preserve"> </ref></p><p><ref target="http://xhtml.hr/"><hi style="font-family:Courier New;font-size:9pt">&lt;/xsd: sequence&gt;</hi></ref><ref target="http://xhtml.hr/" xml:space="preserve"> </ref></p><p><ref target="http://xhtml.hr/"><hi style="font-family:Courier New;font-size:9pt">&lt;/xsd: group&gt;</hi></ref></p><p><hi style="font-family:Courier New;font-size:9pt">&lt;xsd:group name="xhtml.BlkSpecial.class"&gt; &lt;xsd: choice&gt;</hi> </p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd:group ref="xhtml.Table.class" /&gt; </hi> </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;/xsd: choice&gt;</hi> </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;/xsd: group&gt;</hi></p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd:group name="xhtml.Block.extra"&gt; </hi> </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;xsd:sequence /&gt; &lt;/xsd: group&gt;</hi> </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;xsd:group name="xhtml.Block.class"&gt; &lt;xsd: choice&gt;</hi>  </p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd:group ref="xhtml.BlkStruct.class" /&gt; </hi> </p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd:group ref="xhtml.BlkPhras.class" /&gt; </hi> </p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd:group ref="xhtml.BlkPres.class" /&gt; </hi> </p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd:group ref="xhtml.BlkSpecial.class" /&gt; </hi> </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;xsd:group ref="xhtml.Block.extra" /&gt;</hi> </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;/xsd: choice&gt;</hi> </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;/xsd: group&gt;</hi></p><p><hi style="font-family:Courier New;font-size:9pt">&lt;xsd:group name="xhtml.Block.mix"&gt; &lt;xsd: choice&gt;</hi>  </p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd:group ref="xhtml.Heading.class" /&gt;  &lt;xsd:group ref="xhtml.List.class" /&gt; </hi>  </p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd:group ref="xhtml.Block.class" /&gt; </hi> </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;xsd:group ref="xhtml.Misc.class" /&gt;</hi> </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;/xsd: choice&gt;</hi> </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;/xsd: group&gt;</hi></p><p><hi style="font-family:Courier New;font-size:9pt">&lt;xsd:group name="xhtml.Flow.mix"&gt; &lt;xsd: choice&gt;</hi>  </p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd:group ref="xhtml.Heading.class" /&gt;  &lt;xsd:group ref="xhtml.List.class" /&gt; </hi>  </p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd:group ref="xhtml.Block.class" /&gt; </hi> </p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd: group ref="xhtml.Inline.class" /&gt; </hi> </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;xsd:group ref="xhtml.Misc.class" /&gt;</hi> </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;/xsd: choice&gt;</hi> </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;/xsd: group&gt;</hi></p><p><hi style="font-family:Courier New;font-size:9pt">&lt;xsd:group name="xhtml.BlkNoForm.mix"&gt; &lt;xsd: choice&gt;</hi> </p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd:group ref="xhtml.Heading.class" /&gt;  &lt;xsd:group ref="xhtml.List.class" /&gt; </hi>  </p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd:group ref="xhtml.BlkStruct.class" /&gt;  &lt;xsd:group ref="xhtml.BlkPhras.class" /&gt; </hi>  </p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd:group ref="xhtml.BlkPres.class" /&gt;  &lt;xsd:group ref="xhtml.Table.class" /&gt; </hi>  </p><p><hi style="font-family:Courier New;font-size:9pt" xml:space="preserve">&lt;xsd:group ref="xhtml.Block.extra" /&gt; </hi> </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;xsd:group ref="xhtml.Misc.class" /&gt;</hi> </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;/xsd: choice&gt;</hi> </p><p><hi style="font-family:Courier New;font-size:9pt">&lt;/xsd: group&gt; &lt;/xsd: schema&gt;</hi> </p><p><hi rend="bold" style="font-size:9pt">94</hi>	<hi style="font-size:9pt" xml:space="preserve">                Requirements Interchange Format (ReqIF), v1.2</hi></p></div></div></div></div></body></text></TEI>